"use strict";(self.webpackChunkuxp_xd=self.webpackChunkuxp_xd||[]).push([[140],{63146:function(e,a,t){t.r(a),t.d(a,{_frontmatter:function(){return o},default:function(){return u}});var n=t(87462),l=t(45987),m=(t(15007),t(64983)),r=t(91515);const d=["components"],o={},i={_frontmatter:o},p=r.Z;function u(e){let{components:a}=e,t=(0,l.Z)(e,d);return(0,m.mdx)(p,(0,n.Z)({},i,t,{components:a,mdxType:"MDXLayout"}),(0,m.mdx)("a",{name:"module-global-formdata",id:"module-global-formdata"}),(0,m.mdx)("h2",{id:"formdata"},"FormData"),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-global-formdata"},"~FormData"),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#new-module-global-formdata-new"},"new FormData()")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-global-formdata-append"},".append(key, value, [fileName])")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-global-formdata-entries"},".entries()"))))),(0,m.mdx)("a",{name:"new-module-global-formdata-new",id:"new-module-global-formdata-new"}),(0,m.mdx)("h3",{id:"new-formdata"},"new FormData()"),(0,m.mdx)("p",null,"The constructor initializes a FormData object."),(0,m.mdx)("a",{name:"module-global-formdata-append",id:"module-global-formdata-append"}),(0,m.mdx)("h3",{id:"formdataappendkey-value-filename"},"formData.append(key, value, ","[fileName]",")"),(0,m.mdx)("p",null,"Appends a key value pair into FormData.\nIf the value is either ArrayBuffer and TypedArray, its buffer as well as the object are copied.\nHowever, if the value is a File object value, the File object is cloned but its content is not cloned.\nConsequently, the File object and the cloned one refer to the same content."),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Param"),(0,m.mdx)("th",{parentName:"tr",align:null},"Type"),(0,m.mdx)("th",{parentName:"tr",align:null},"Default"),(0,m.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"key"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"string")),(0,m.mdx)("td",{parentName:"tr",align:null}),(0,m.mdx)("td",{parentName:"tr",align:null},"a key string for the pair")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"value"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,m.mdx)("inlineCode",{parentName:"td"},"ArrayBuffer")," ","|"," ",(0,m.mdx)("inlineCode",{parentName:"td"},"TypedArray")," ","|"," ",(0,m.mdx)("inlineCode",{parentName:"td"},"File")),(0,m.mdx)("td",{parentName:"tr",align:null}),(0,m.mdx)("td",{parentName:"tr",align:null},"a value for the pair")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"[fileName]"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"string")),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"null")),(0,m.mdx)("td",{parentName:"tr",align:null},"the optional file name to use for a File object value. If not present, the file name would be taken from the name property of the File object.")))),(0,m.mdx)("a",{name:"module-global-formdata-entries",id:"module-global-formdata-entries"}),(0,m.mdx)("h3",{id:"formdataentries"},"formData.entries()"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Returns"),": iterator for all key-value pairs in FormData."))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-develop-reference-uxp-class-form-data-md-c2d5a3df541c240a7711.js.map