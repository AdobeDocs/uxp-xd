{"version":3,"sources":["webpack:///./src/pages/develop/tutorials/debugging/index.md","webpack:///./src/pages/develop/images/reload-error.png"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","alt","src","require","isMDXComponent","module","exports"],"mappings":"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","file":"component---src-pages-develop-tutorials-debugging-index-md-ff880cc5d4579933cca7.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"how-to-debug-your-plugin\"\n    }}>{`How to Debug Your Plugin`}</h1>\n    <p>{`Bugs happen! In this tutorial, you will learn how to debug your Adobe XD plugin.`}</p>\n    <h3 {...{\n      \"id\": \"prerequisite\"\n    }}>{`Prerequisite`}</h3>\n    <p>{`At least one plugin in your `}<inlineCode parentName=\"p\">{`develop`}</inlineCode>{` folder (you can create one using our `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/tutorials/quick-start/\"\n      }}>{`Quick Start tutorial`}</a>{`).`}</p>\n    <h3 {...{\n      \"id\": \"debugging-options\"\n    }}>{`Debugging Options`}</h3>\n    <p>{`There are two ways you can debug an XD plugin:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`For `}<strong parentName=\"li\">{`quick, simple debugging`}</strong>{`, `}<a parentName=\"li\" {...{\n          \"href\": \"#quick-debugging-with-developer-console\"\n        }}>{`use the Developer Console built into XD`}</a></li>\n      <li parentName=\"ul\">{`For `}<strong parentName=\"li\">{`in-depth debugging`}</strong>{`, set up your plugin for `}<a parentName=\"li\" {...{\n          \"href\": \"#debugging-with-chrome-devtools-beta\"\n        }}>{`debugging with Chrome DevTools`}</a>{` `}<em parentName=\"li\">{`(beta)`}</em></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"quick-debugging-with-developer-console\"\n    }}>{`Quick debugging with Developer Console`}</h2>\n    <h3 {...{\n      \"id\": \"1-check-the-developer-console\"\n    }}>{`1. Check the Developer Console`}</h3>\n    <p>{`In XD, click `}<em parentName=\"p\">{`Plugins > Development > Developer Console`}</em>{`.`}</p>\n    <p>{`This displays information similar to what you'd find in the JS debugger's console view:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Any `}<inlineCode parentName=\"li\">{`console.log()`}</inlineCode>{` output from your plugin`}</li>\n      <li parentName=\"ul\">{`Any error messages from XD due to plugin misbehavior, or failure to load a plugin`}</li>\n      <li parentName=\"ul\">{`Stack traces if your code throws an uncaught exception`}</li>\n    </ul>\n    <p>{`The console output for `}<em parentName=\"p\">{`all`}</em>{` installed XD plugins is mixed together in one single view here.`}</p>\n    <h3 {...{\n      \"id\": \"2-reload-your-plugin-after-making-fixes\"\n    }}>{`2. Reload your plugin after making fixes`}</h3>\n    <p>{`You can easily iterate on your plugin code without heaving to restart XD. Click `}<em parentName=\"p\">{`Plugins > Development > Reload Plugins`}</em>{` to reload all plugins in your `}<inlineCode parentName=\"p\">{`develop`}</inlineCode>{` folder. This will reflect any changes in `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/reference/structure/manifest/\"\n      }}>{`manifest.json`}</a>{` in addition to any changes to your JS code.`}</p>\n    <p>{`There's also a handy keyboard shortcut to make reloading easier:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Platform`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Keyboard shortcut`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`macOS`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Shift-Cmd-R`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Windows`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Ctrl-Shift-R`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`If there are any errors blocking the plugin from loading, they will appear in the Developer Console on reload:`}</p>\n    <p><img alt=\"Error during reload\" src={require(\"../../images/reload-error.png\")} /></p>\n    <h2 {...{\n      \"id\": \"debugging-with-chrome-devtools-beta\"\n    }}>{`Debugging with Chrome DevTools `}<em parentName=\"h2\">{`(beta)`}</em></h2>\n    <h3 {...{\n      \"id\": \"1-enable-debugging-on-your-plugin\"\n    }}>{`1. Enable debugging on your plugin`}</h3>\n    <p>{`Navigate to the root folder of your plugin and `}<strong parentName=\"p\">{`create a `}<inlineCode parentName=\"strong\">{`debug.json`}</inlineCode>{` file`}</strong>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"port\": 9345,\n  \"breakOnStart\": false\n}\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Debugging is only supported for plugins in the `}<strong parentName=\"li\"><inlineCode parentName=\"strong\">{`develop`}</inlineCode>{` folder`}</strong>{` (not plugins installed from the Plugin Manager UI).`}</li>\n      <li parentName=\"ul\">{`Specify any port number you want.`}</li>\n      <li parentName=\"ul\">{`Advanced: Set `}<inlineCode parentName=\"li\">{`breakOnStart`}</inlineCode>{` to true if you want the debugger to immediately pause on the first line of code in your plugin the moment it starts loading. This is useful since you won't have a chance to open DevTools `}<em parentName=\"li\">{`before`}</em>{` this moment to set breakpoints before that initial code runs.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"2-launch-chrome-devtools\"\n    }}>{`2. Launch Chrome DevTools`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`Windows only: `}<em parentName=\"li\">{`before`}</em>{` launching XD, open an admin command prompt and run `}<inlineCode parentName=\"li\">{`CheckNetIsolation LoopbackExempt -is -n=\"Adobe.CC.XD_adky2gkssdxte\"`}</inlineCode>{` -- do this `}<em parentName=\"li\">{`each time`}</em>{` you want to debug a plugin.`}</li>\n      <li parentName=\"ol\">{`Open Google Chrome and navigate to `}<strong parentName=\"li\"><inlineCode parentName=\"strong\">{`chrome://inspect`}</inlineCode></strong>{` `}<em parentName=\"li\">{`(you must use Chrome)`}</em></li>\n      <li parentName=\"ol\">{`One-time setup: ensure \"Discover Network Targets\" is enabled. Click the Configure button next to this and add `}<inlineCode parentName=\"li\">{`localhost:9345`}</inlineCode>{` (or whatever port number your `}<inlineCode parentName=\"li\">{`debug.json`}</inlineCode>{` file used).`}</li>\n      <li parentName=\"ol\">{`Click the \"inspect\" link under your plugin's ID.`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"beta-what-works-what-doesnt\"\n    }}>{`Beta: What works, what doesn't`}</h3>\n    <p>{`Currently, you `}<strong parentName=\"p\">{`can`}</strong>{`...`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Set breakpoints, pause & step through code, inspect the values of variables`}</li>\n      <li parentName=\"ul\">{`View objects and run code in the Console view`}</li>\n      <li parentName=\"ul\">{`View and edit the DOM structure of your plugin's UXP UI`}</li>\n    </ul>\n    <p>{`Most other DevTools features are not supported and may behave erratically if you attempt to use them.`}</p>\n    <p><strong parentName=\"p\">{`Important caveats:`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`XD may be unstable while debugging a plugin. Don't debug when you have important XD documents open.`}</li>\n      <li parentName=\"ul\">{`Error messages are often `}<em parentName=\"li\">{`missing`}</em>{` from the DevTools Console. Use the Developer Console within XD (see \"Quick debugging\" above) to be sure you are not missing any important information.`}</li>\n      <li parentName=\"ul\">{`XD will be partially frozen while paused on a JS breakpoint. Don't try to interact with XD while paused.`}</li>\n      <li parentName=\"ul\">{`You may see a blank white panel to the left of the DevTools UI. Ignore this, as it does nothing.`}</li>\n      <li parentName=\"ul\">{`If debugging exposes any private fields and methods, do not attempt to use them. Plugins referring to private APIs will be rejected or removed from XD's plugin listing.`}</li>\n    </ul>\n    <p>{`Read the `}{`[known issues]`}{`(/known-issues/ for more details.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","module.exports = __webpack_public_path__ + \"static/reload-error-b09753d4105f81cb3c092c97f4f6bf31.png\";"],"sourceRoot":""}