{"version":3,"sources":["webpack:///./src/pages/develop/reference/core/automatic-cleanups.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,IACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,mBAAQ,CACN,GAAM,sBADR,sBAGA,8IACA,wBACE,oBAAIC,WAAW,MACb,mBAAGA,WAAW,MAAK,wBAAQA,WAAW,KAAnB,wBAAnB,8LAGF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAK,wBAAQA,WAAW,KAAnB,aAAnB,+EAEF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAK,wBAAQA,WAAW,KAAnB,oBAAnB,4IAEF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAK,wBAAQA,WAAW,KAAnB,sCAAnB,uLACoD,+BAAGA,WAAW,KAAQ,CACtE,KAAQ,kCADwC,mCADpD,uBAKF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAK,wBAAQA,WAAW,KAAnB,4BAAnB,8MAGF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAK,wBAAQA,WAAW,KAAnB,8CAAnB,wXASRJ,EAAWK,gBAAiB","file":"component---src-pages-develop-reference-core-automatic-cleanups-md-44f0f2415e7149bc6b42.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"automatic-cleanups\"\n    }}>{`Automatic cleanups`}</h1>\n    <p>{`To make writing your plugin simpler, XD performs a number of automated cleanups after each plugin command finishes:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Artboard reparenting`}</strong>{` - If a node is changed to overlap an Artboard, it will automatically become a child of the artboard when the command finishes,\nand vice versa if a node no longer overlaps an Artboard.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Selection`}</strong>{` - Deleted nodes are removed from the selection when the command finishes.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Empty containers`}</strong>{` - If deleting node(s) has caused the parent container to become empty, it is automatically deleted as well after the command finishes.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Component master->instance syncing`}</strong>{` - Most changes you make inside a Component master are automatically mirrored to all other copies of that Symbol, unless\noverridden by local changes in a particular instance. See `}<a parentName=\"p\" {...{\n            \"href\": \"../scenegraph/#SymbolInstance\"\n          }}>{`Component / SymbolInstance docs`}</a>{` for more details.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Repeat Grid cell syncing`}</strong>{` - Most changes you make inside a Repeat Grid cell are automatically mirrored to all its other cells, except for certain properties\nsuch as text and images which XD permits to vary between grid cells.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Content-Aware Group & Stack layout updates`}</strong>{` -- The background layer (if any) of a Content-Aware Group will update automatically after a plugin changes the\nsize or position of its contents. Similarly, changing a node inside a Group with Stack layout will automatically slide its adjacent siblings to preserve a\nconstant margin around the node. These changes do not occur until after the plugin command finishes.`}</p>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}