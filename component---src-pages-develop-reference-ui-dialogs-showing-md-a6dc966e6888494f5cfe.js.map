{"version":3,"sources":["webpack:///./src/pages/develop/reference/ui/dialogs/showing.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,IACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,mBAAQ,CACN,GAAM,0BADR,0BAGA,sDAAmC,+BAAGC,WAAW,KAAQ,CACrD,KAAQ,+EACP,4BAAYA,WAAW,KAAvB,gCAFL,yEAE0J,4BAAYA,WAAW,KAAvB,WAF1J,sEAGA,yBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,mJAQL,gCACE,mBAAGA,WAAW,cAAa,wBAAQA,WAAW,KAAnB,SAC3B,mBAAGA,WAAW,cAAd,sBAAkD,oBAAIA,WAAW,KAAf,QAAlD,+FAEF,uJAAoI,oBAAIA,WAAW,KAAf,4CAApI,iCAKJJ,EAAWK,gBAAiB","file":"component---src-pages-develop-reference-ui-dialogs-showing-md-a6dc966e6888494f5cfe.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"showing-a-modal-dialog\"\n    }}>{`Showing a Modal Dialog`}</h1>\n    <p>{`Dialogs are shown using the `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/reference/uxp/class/HTMLDialogElement/#htmldialogelement-showmodal\"\n      }}><inlineCode parentName=\"a\">{`HTMLDialogElement#showModal`}</inlineCode></a>{` method. This method will render the dialog. The method will return a `}<inlineCode parentName=\"p\">{`Promise`}</inlineCode>{`, which you can use to easily wait for the dialog to be dismissed.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`dialog.showModal()\n    .then(result => {\n        // handle dialog result\n        // if canceled by ESC, will be \"reasonCanceled\"\n    });\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Info`}</strong></p>\n      <p parentName=\"blockquote\">{`The dialog element `}<em parentName=\"p\">{`must`}</em>{` be present in the DOM before showing it. If it isn't, the method will throw an exception.`}</p>\n    </blockquote>\n    <p>{`It's important to note that you can only show one dialog at once. You should always close or dismiss a dialog first and then `}<em parentName=\"p\">{`wait for the dialog's promise to resolve`}</em>{` before showing another one.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}