(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{"1Tmi":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return d}));var a=n("wx14"),l=n("zLVn"),o=(n("q1tI"),n("7ljp")),i=n("ndZU"),c=(n("qKvR"),{}),s={_frontmatter:c},m=i.a;function d(e){var t=e.components,n=Object(l.a)(e,["components"]);return Object(o.mdx)(m,Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.mdx)("h1",{id:"dialog-dismissal"},"Dialog Dismissal"),Object(o.mdx)("p",null,"Dialogs can be dismissed in the following ways:"),Object(o.mdx)("ul",null,Object(o.mdx)("li",{parentName:"ul"},"Manually, by the user pressing the ESC key"),Object(o.mdx)("li",{parentName:"ul"},"Programmatically, by calling ",Object(o.mdx)("a",Object(a.a)({parentName:"li"},{href:"/uxp-xd/reference/uxp/class/HTMLDialogElement/#htmldialogelement-close"}),Object(o.mdx)("inlineCode",{parentName:"a"},"HTMLDialogElement#close"))," with an optional return value.")),Object(o.mdx)("p",null,"You can listen for the ",Object(o.mdx)("em",{parentName:"p"},"default")," gesture (typically ","[ENTER]",") by registering for the ",Object(o.mdx)("inlineCode",{parentName:"p"},"submit")," event on the ",Object(o.mdx)("inlineCode",{parentName:"p"},"form"),":"),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'function onsubmit(e) {\n    dialog.close("ok");\n    e.preventDefault();\n}\nform.onsubmit = onsubmit;\n')),Object(o.mdx)("p",null,"You should also register a ",Object(o.mdx)("inlineCode",{parentName:"p"},"click"),' handler for your "OK" and "Cancel" buttons:'),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const cancelButton = document.querySelector("#cancel");\ncancelButton.addEventListener("click", () => dialog.close("reasonCanceled"));\n\nconst okButton = document.querySelector("#ok");\nokButton.addEventListener("click", e => {\n    onsubmit();\n    e.preventDefault();\n});\n')),Object(o.mdx)("p",null,"You can listen for the dialog's dismissal using the ",Object(o.mdx)("inlineCode",{parentName:"p"},"close")," event on the dialog:"),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'dialog.addEventListener("close", () => {\n    // dialog is closed at this point\n});\n')),Object(o.mdx)("h2",{id:"preventing-dialog-dismissal"},"Preventing Dialog Dismissal"),Object(o.mdx)("p",null,"You can, in some cases, prevent a dialog dismissal. If the form calls ",Object(o.mdx)("inlineCode",{parentName:"p"},"preventDefault")," on the ",Object(o.mdx)("inlineCode",{parentName:"p"},"submit")," event, the dialog will fail to dismiss."),Object(o.mdx)("blockquote",null,Object(o.mdx)("p",{parentName:"blockquote"},Object(o.mdx)("strong",{parentName:"p"},"Tip")),Object(o.mdx)("p",{parentName:"blockquote"},"It is not possible to cancel a dismissal triggered by the ",Object(o.mdx)("strong",{parentName:"p"},"ESC")," gesture.")))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-develop-reference-ui-dialogs-dismissal-md-d1a00748961ce21a7047.js.map