(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{kJUa:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return r})),a.d(t,"default",(function(){return o}));var n=a("wx14"),i=a("zLVn"),c=(a("q1tI"),a("7ljp")),m=a("ndZU"),r=(a("qKvR"),{}),l={_frontmatter:r},d=m.a;function o(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(c.mdx)(d,Object(n.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(c.mdx)("h1",{id:"available-apis"},"Available APIs"),Object(c.mdx)("p",null,"Adobe XD provides several categories of APIs:"),Object(c.mdx)("ul",null,Object(c.mdx)("li",{parentName:"ul"},Object(c.mdx)("p",{parentName:"li"},Object(c.mdx)("strong",{parentName:"p"},Object(c.mdx)("a",Object(n.a)({parentName:"strong"},{href:"#xd-specific-apis"}),"APIs for interacting with XD itself")),", especially its document model, the ",Object(c.mdx)("strong",{parentName:"p"},"scenegraph"))),Object(c.mdx)("li",{parentName:"ul"},Object(c.mdx)("p",{parentName:"li"},"The ",Object(c.mdx)("strong",{parentName:"p"},"UXP runtime"),", which provides all the capabilities that aren't XD-specific:"),Object(c.mdx)("ul",{parentName:"li"},Object(c.mdx)("li",{parentName:"ul"},"A ",Object(c.mdx)("a",Object(n.a)({parentName:"li"},{href:"../uxp/ui-index/"}),Object(c.mdx)("em",{parentName:"a"},"browser-like")," HTML and CSS engine")," which drives actual XD ",Object(c.mdx)("em",{parentName:"li"},"native UI components")," -- it is ",Object(c.mdx)("strong",{parentName:"li"},"not")," a complete browser engine, but lets you build your UI using familiar web APIs and frameworks."),Object(c.mdx)("li",{parentName:"ul"},Object(c.mdx)("a",Object(n.a)({parentName:"li"},{href:"../uxp/network-index/"}),"Network APIs")," similar to the web standard XHR, ",Object(c.mdx)("inlineCode",{parentName:"li"},"fetch"),", and WebSocket found in browsers."),Object(c.mdx)("li",{parentName:"ul"},"The ",Object(c.mdx)("a",Object(n.a)({parentName:"li"},{href:"../uxp/storage-index/"}),Object(c.mdx)("inlineCode",{parentName:"a"},"storage")," API"),", offering sandboxed filesystem access."))),Object(c.mdx)("li",{parentName:"ul"},Object(c.mdx)("p",{parentName:"li"},"The usual ",Object(c.mdx)("strong",{parentName:"p"},Object(c.mdx)("a",Object(n.a)({parentName:"strong"},{href:"../javascript/javascript-support/"}),"core JavaScript language APIs"))," you see in all JS runtimes, such as ",Object(c.mdx)("inlineCode",{parentName:"p"},"setTimeout()")," and ",Object(c.mdx)("inlineCode",{parentName:"p"},"Date"),".")),Object(c.mdx)("li",{parentName:"ul"},Object(c.mdx)("p",{parentName:"li"},"A simple ",Object(c.mdx)("strong",{parentName:"p"},Object(c.mdx)("a",Object(n.a)({parentName:"strong"},{href:"../javascript/javascript-support/#can-i-use-require"}),"module-loader ",Object(c.mdx)("inlineCode",{parentName:"a"},"require()")," API"))))),Object(c.mdx)("p",null,"Read below for ",Object(c.mdx)("strong",{parentName:"p"},"how to access")," XD and UXP APIs..."),Object(c.mdx)("h2",{id:"xd-specific-apis"},"XD-specific APIs"),Object(c.mdx)("p",null,"Most XD APIs are accessed by loading a module via ",Object(c.mdx)("inlineCode",{parentName:"p"},"require()"),", but some are passed directly to your plugin's handler functions. See the ",Object(c.mdx)("a",Object(n.a)({parentName:"p"},{href:"../xd-index/"}),"XD specific APIs page")," for a full list of modules. Below are some examples of modules available via the API:"),Object(c.mdx)("ul",null,Object(c.mdx)("li",{parentName:"ul"},Object(c.mdx)("a",Object(n.a)({parentName:"li"},{href:"../selection/"}),"selection")," - Indicates the selected nodes and related context",Object(c.mdx)("ul",{parentName:"li"},Object(c.mdx)("li",{parentName:"ul"},"This object is passed as an argument to your command handler function (see above)"))),Object(c.mdx)("li",{parentName:"ul"},Object(c.mdx)("a",Object(n.a)({parentName:"li"},{href:"../scenegraph/"}),"scenegraph")," - APIs available on document nodes",Object(c.mdx)("ul",{parentName:"li"},Object(c.mdx)("li",{parentName:"ul"},"Typically you use scenegraph objects by simply accessing the arguments passed to your command's handler function\n(",Object(c.mdx)("inlineCode",{parentName:"li"},"selection")," and ",Object(c.mdx)("inlineCode",{parentName:"li"},"documentRoot"),")."),Object(c.mdx)("li",{parentName:"ul"},"To create ",Object(c.mdx)("em",{parentName:"li"},"new")," nodes in the document, load this module explicitly to access the constructor functions:",Object(c.mdx)("pre",{parentName:"li"},Object(c.mdx)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),'let Rectangle = require("scenegraph").Rectangle;\nlet node = new Rectangle();\n'))))),Object(c.mdx)("li",{parentName:"ul"},Object(c.mdx)("a",Object(n.a)({parentName:"li"},{href:"../commands/"}),"commands")," - Invoke commands to change the document structure and perform other complex operations.",Object(c.mdx)("ul",{parentName:"li"},Object(c.mdx)("li",{parentName:"ul"},Object(c.mdx)("inlineCode",{parentName:"li"},'let commands = require("commands");')))),Object(c.mdx)("li",{parentName:"ul"},Object(c.mdx)("a",Object(n.a)({parentName:"li"},{href:"../interactions/"}),"interactions")," - Data model for interactive prototyping features (also accessible from scenegraph nodes).",Object(c.mdx)("ul",{parentName:"li"},Object(c.mdx)("li",{parentName:"ul"},Object(c.mdx)("inlineCode",{parentName:"li"},'let interactions = require("interactions");')))),Object(c.mdx)("li",{parentName:"ul"},Object(c.mdx)("a",Object(n.a)({parentName:"li"},{href:"../application/"}),"application")," - APIs for exporting content, initiating edits from panel UI, and getting version / locale info.",Object(c.mdx)("ul",{parentName:"li"},Object(c.mdx)("li",{parentName:"ul"},Object(c.mdx)("inlineCode",{parentName:"li"},'let application = require("application");')))),Object(c.mdx)("li",{parentName:"ul"},Object(c.mdx)("a",Object(n.a)({parentName:"li"},{href:"../clipboard/"}),"clipboard")," - Copy text to the clipboard.",Object(c.mdx)("ul",{parentName:"li"},Object(c.mdx)("li",{parentName:"ul"},Object(c.mdx)("inlineCode",{parentName:"li"},'let clipboard = require("clipboard");'))))),Object(c.mdx)("h2",{id:"uxp"},"UXP"),Object(c.mdx)("ul",null,Object(c.mdx)("li",{parentName:"ul"},Object(c.mdx)("p",{parentName:"li"},"HTML DOM APIs -- access just as in a browser, via the global ",Object(c.mdx)("inlineCode",{parentName:"p"},"document"),". Each plugin in XD gets its own ",Object(c.mdx)("inlineCode",{parentName:"p"},"document")," tree.")),Object(c.mdx)("li",{parentName:"ul"},Object(c.mdx)("p",{parentName:"li"},"Network APIs -- access just as in a browser, via the global classes ",Object(c.mdx)("inlineCode",{parentName:"p"},"XMLHttpRequest")," and ",Object(c.mdx)("inlineCode",{parentName:"p"},"WebSocket"),", and the global function ",Object(c.mdx)("inlineCode",{parentName:"p"},"fetch()"))),Object(c.mdx)("li",{parentName:"ul"},Object(c.mdx)("p",{parentName:"li"},"Storage APIs -- access via ",Object(c.mdx)("inlineCode",{parentName:"p"},'const fs = require("uxp").storage.localFileSystem;')))))}o.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-develop-plugin-development-xd-concepts-apis-md-2d9cacb92a5ba7e30452.js.map