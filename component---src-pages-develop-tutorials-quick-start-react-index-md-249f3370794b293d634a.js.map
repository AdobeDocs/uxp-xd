{"version":3,"sources":["webpack://uxp-xd/./src/pages/develop/tutorials/quick-start-react/index.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-develop-tutorials-quick-start-react-index-md-249f3370794b293d634a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"quick-start---react-make-your-first-xd-plugin-with-react\"\n    }}>{`Quick Start - React: Make your first XD plugin with React`}</h1>\n    <p>{`While there are many choices when it comes to picking a JavaScript framework to build an XD plugin, we want to cover one of the most popular frameworks, React, first.`}</p>\n    <p>{`Once you're done, you'll have a solid grasp of the steps to take when starting to create your own XD plugin with React.`}</p>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Basic knowledge of HTML, CSS, JavaScript, and React`}</li>\n      <li parentName=\"ul\">{`A text editor to write your code in (like VSCode, Sublime Text, Brackets, Atom, etc)`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/uxp-xd/develop/tutorials/quick-start/\"\n        }}>{`Quick Start tutorial`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://nodejs.org/en/\"\n        }}>{`node`}</a>{` and `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.npmjs.com/get-npm\"\n        }}>{`npm`}</a>{` installed`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"development-steps\"\n    }}>{`Development Steps`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Info`}</strong>{`\nComplete code for this plugin can be found `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/AdobeXD/Plugin-Samples/tree/master/quick-start-react\"\n        }}>{`on GitHub`}</a>{`.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"0-folder-structure\"\n    }}>{`0. Folder structure`}</h3>\n    <p>{`Note that we are going to use `}<a parentName=\"p\" {...{\n        \"href\": \"https://webpack.js.org/\"\n      }}>{`webpack`}</a>{` to bundle JavaScript files for usage in XD and the `}<a parentName=\"p\" {...{\n        \"href\": \"https://yarnpkg.com/en/\"\n      }}>{`yarn`}</a>{` package manager to install dependencies. When you have the right structure, it will look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`my-plugin-folder\n└── src\n    └── main.jsx\n    └── HelloForm.jsx\n    └── react-shim.js\n└── manifest.json\n└── package.json\n└── webpack.config.js\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"1-install-dependencies\"\n    }}>{`1. Install dependencies`}</h3>\n    <p>{`In order to correctly use React in XD, you will have to install dependencies correctly. Follow the steps below:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`List the required dependencies in `}<inlineCode parentName=\"li\">{`package.json`}</inlineCode></li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`{\n  \"name\": \"helllo_react_jsx\",\n  \"version\": \"1.0.0\",\n  \"main\": \"main.js\",\n  \"scripts\": {\n    \"watch\": \"nodemon -w src -e js,jsx,css -w webpack.config.js -x yarn build\",\n    \"build\": \"webpack --mode development\"\n  },\n  \"license\": \"none\",\n  \"private\": true,\n  \"devDependencies\": {\n    \"nodemon\": \"^1.18.7\",\n    \"webpack\": \"^4.16.4\",\n    \"webpack-cli\": \"^3.1.0\"\n  },\n  \"dependencies\": {\n    \"babel-core\": \"^6.26.3\",\n    \"babel-loader\": \"^7.1.5\",\n    \"babel-plugin-transform-react-jsx\": \"^6.24.1\",\n    \"css-loader\": \"^1.0.0\",\n    \"react\": \"^16.4.2\",\n    \"react-dom\": \"^16.4.2\",\n    \"style-loader\": \"^0.22.0\",\n    \"yarn\": \"^1.12.3\"\n  }\n}\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`List the webpack configurations in `}<inlineCode parentName=\"li\">{`webpack.config.js`}</inlineCode></li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`module.exports = {\n  entry: \"./src/main.jsx\",\n  output: {\n    path: __dirname,\n    filename: \"main.js\",\n    libraryTarget: \"commonjs2\",\n  },\n  devtool: \"none\",\n  module: {\n    rules: [\n      {\n        test: /\\\\.jsx?$/,\n        exclude: /node_modules/,\n        loader: \"babel-loader\",\n        options: {\n          plugins: [\"transform-react-jsx\"],\n        },\n      },\n      {\n        test: /\\\\.css$/,\n        use: [\"style-loader\", \"css-loader\"],\n      },\n    ],\n  },\n  externals: {\n    scenegraph: \"scenegraph\",\n  },\n};\n`}</code></pre>\n    <p>{`As per `}<a parentName=\"p\" {...{\n        \"href\": \"https://webpack.js.org/configuration/externals/\"\n      }}>{`webpack's documentation`}</a>{`,`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`The `}<inlineCode parentName=\"p\">{`externals`}</inlineCode>{` configuration option provides a way of excluding dependencies from the output bundles. Instead, the created bundle relies on that dependency to be present in the consumer's environment.`}</p>\n    </blockquote>\n    <p>{`Note that, in this example, we are excluding the `}<inlineCode parentName=\"p\">{`scenegraph`}</inlineCode>{` API from the output bundles since this dependency is present in the XD environment.`}</p>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Install yarn, if needed`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`npm install -g yarn\n`}</code></pre>\n    <ol {...{\n      \"start\": 4\n    }}>\n      <li parentName=\"ol\">{`Install dependencies`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`yarn install\n`}</code></pre>\n    <p>{`All dependencies are installed and we are good to go!`}</p>\n    <h3 {...{\n      \"id\": \"2-create-your-main-files\"\n    }}>{`2. Create your main files`}</h3>\n    <p>{`Now, let's create your plugin files. Open your favorite text editor and create the following files and folders (we'll add code to them in later steps):`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`manifest.json`}</inlineCode>{` is your plugin’s manifest. This file includes information about the plugin, such as its name, the menu item(s) it adds to XD, and so on. `}<a parentName=\"p\" {...{\n            \"href\": \"/uxp-xd/develop/plugin-development/plugin-structure/manifest/\"\n          }}>{`Learn about the manifest here`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`src`}</inlineCode>{` is your plugin's folder that contains all JavaScript files that are going to be compiled`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`main.jsx`}</inlineCode>{` is the main file for the plugin`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`HelloForm.jsx`}</inlineCode>{` is the file that contains the only React component we are going to use. Note that you can have multiple `}<inlineCode parentName=\"li\">{`.jsx`}</inlineCode>{` files if needed`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`react-shim.js`}</inlineCode>{` is a JavaScript file that helps React run smoothly in XD's environment. Further details to follow in a later section`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"3-edit-your-plugins-manifest\"\n    }}>{`3. Edit your plugin’s manifest`}</h3>\n    <p>{`In the previous step, you created a file named `}<inlineCode parentName=\"p\">{`manifest.json`}</inlineCode>{`. Open that file and paste in this JSON object:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"id\": \"QUICKSTART_REACT\",\n  \"name\": \"Quick Start - React\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Description of your plugin.\",\n  \"summary\": \"Summary of your plugin\",\n  \"languages\": [\"en\"],\n  \"author\": \"Your Name\",\n  \"helpUrl\": \"https://mywebsite.com/help\",\n  \"host\": {\n    \"app\": \"XD\",\n    \"minVersion\": \"13.0\"\n  },\n  \"uiEntryPoints\": [\n    {\n      \"type\": \"menu\",\n      \"label\": \"Quick Start - React\",\n      \"commandId\": \"main\"\n    }\n  ]\n}\n`}</code></pre>\n    <p>{`Be sure to replace the `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` value with the unique plugin ID you get from the Adobe Developer Console.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"id\": \"1234ABCD\",\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Info`}</strong>{`\nMake sure to read `}<a parentName=\"p\" {...{\n          \"href\": \"/uxp-xd/develop/tutorials/quick-start/\"\n        }}>{`Quick Start tutorial`}</a>{` to learn how to get your unique plugin ID from the Adobe Developer Console.`}</p>\n    </blockquote>\n    <p>{`If you're curious about what each entry in the manifest means, `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/plugin-development/plugin-structure/manifest/\"\n      }}>{`see the manifest documentation`}</a>{`, where you can also learn about all manifest requirements for a plugin to be published in the XD Plugin Manager.`}</p>\n    <p>{`The value of the `}<inlineCode parentName=\"p\">{`commandId`}</inlineCode>{` property may be any string; in this case, it's `}<inlineCode parentName=\"p\">{`main`}</inlineCode>{`. In the next section, we will see how this string is associated with the code for our plugin.`}</p>\n    <h3 {...{\n      \"id\": \"4-create-your-plugins-code\"\n    }}>{`4. Create your plugin’s code`}</h3>\n    <p>{`Next, we need to create the JavaScript code for our plugin. As noted in the `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/tutorials/quick-start/\"\n      }}>{`Quick Start tutorial`}</a>{`, the code lives in a file named `}<inlineCode parentName=\"p\">{`main.js`}</inlineCode>{`. This file will be automatically created when Webpack compiles all JavaScript files in your `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{` folder.`}</p>\n    <p>{`In this tutorial, the `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{` folder will contain the following:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`src\n└── main.jsx\n└── HelloForm.jsx\n└── react-shim.js\n`}</code></pre>\n    <p>{`Now, lets start writing code in these JavaScript files.`}</p>\n    <p>{`First of all, as noted earlier, we need `}<inlineCode parentName=\"p\">{`react-shim.js`}</inlineCode>{` file to make React run without any issue in the XD environment. Paste this code into `}<inlineCode parentName=\"p\">{`react-shim.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`if (window.setTimeout == null) {\n  window.setTimeout = function (fn) {\n    fn();\n  };\n}\n\nif (window.clearTimeout == null) {\n  window.clearTimeout = function () {};\n}\n\nif (window.cancelAnimationFrame == null) {\n  window.cancelAnimationFrame = function () {};\n}\nif (window.requestAnimationFrame == null) {\n  window.requestAnimationFrame = function () {\n    console.log(\"requestAnimationFrame is not supported yet\");\n  };\n}\nif (window.HTMLIFrameElement == null) {\n  window.HTMLIFrameElement = class HTMLIFrameElement {};\n}\n`}</code></pre>\n    <p>{`Since XD currently does not currently support `}<inlineCode parentName=\"p\">{`cancelAnimationFrame`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`requestAnimationFrame`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`HTMLIFrameElement`}</inlineCode>{`, we create these empty functions and classes to prevent your plugin from crashing.`}</p>\n    <p>{`As of XD 16, `}<inlineCode parentName=\"p\">{`setTimeout`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`clearTimeout`}</inlineCode>{` are `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/changelog/#xd-release-16012-february-2019\"\n      }}>{`supported in the XD plugin API`}</a>{`, but are still included in the shim for compatibility with older versions of XD.`}</p>\n    <p>{`Next, let's create a React component. Paste the following code in `}<inlineCode parentName=\"p\">{`HelloForm.jsx`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// [1]\nconst React = require(\"react\");\n// [2]\nconst { Text, Color } = require(\"scenegraph\");\n\n// [3]\nclass HelloForm extends React.Component {\n  // [4]\n  constructor(props) {\n    super(props);\n    this.state = { name: \"\" }; // [5]\n\n    // [6]\n    this.onInputChange = (e) => {\n      this.setState({ name: e.target.value });\n    };\n\n    // [7]\n    this.onDoneClick = (e) => {\n      // [8]\n      const selection = this.props.selection;\n      // [9]\n      const newText = new Text();\n      newText.text = this.state.name;\n      // [10]\n      newText.styleRanges = [\n        {\n          length: newText.text.length,\n          fill: new Color(\"#00F\"),\n          fontSize: 50,\n        },\n      ];\n\n      // [11]\n      selection.insertionParent.addChild(newText);\n      // [12]\n      newText.moveInParentCoordinates(100, 100);\n      // [13]\n      props.dialog.close();\n    };\n  }\n\n  // [14]\n  render() {\n    return (\n      <form style={{ width: 300 }} onSubmit={this.onDoneClick}>\n        <h1>React with JSX Components</h1>\n        <label>\n          <span>What is your name?</span>\n          <input onChange={this.onInputChange} />\n        </label>\n        <p>{\\`Hello \\${this.state.name}\\`}</p>\n        <footer>\n          <button type=\"submit\" uxp-variant=\"cta\">\n            Done\n          </button>\n        </footer>\n      </form>\n    );\n  }\n}\n\nmodule.exports = HelloForm;\n`}</code></pre>\n    <p>{`This code does the following:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Gets reference to `}<inlineCode parentName=\"li\">{`react`}</inlineCode>{` module installed in an earlier step`}</li>\n      <li parentName=\"ol\">{`Gets references to the `}<inlineCode parentName=\"li\">{`Text`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`Color`}</inlineCode>{` classes from XD’s `}<inlineCode parentName=\"li\">{`scenegraph`}</inlineCode>{` module. There are several different `}<a parentName=\"li\" {...{\n          \"href\": \"/uxp-xd/develop/plugin-development/xd-concepts/apis\"\n        }}>{`API modules you can load using `}<inlineCode parentName=\"a\">{`require()`}</inlineCode></a>{`.`}</li>\n      <li parentName=\"ol\">{`Creates a react component called `}<inlineCode parentName=\"li\">{`HelloForm`}</inlineCode></li>\n      <li parentName=\"ol\">{`Since you are going to initialize state and bind methods, implements a constructor for this React component and calls `}<inlineCode parentName=\"li\">{`super(props)`}</inlineCode>{` to use props passed down from the parent`}</li>\n      <li parentName=\"ol\">{`Initializes a state property called `}<inlineCode parentName=\"li\">{`name`}</inlineCode>{` with an empty string`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`onInputChange`}</inlineCode>{` method sets the `}<inlineCode parentName=\"li\">{`name`}</inlineCode>{` state with the string value passed from the input field`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`onDoneClick`}</inlineCode>{` is triggered after the submission happens and manipulates XD objects`}</li>\n      <li parentName=\"ol\">{`Creates a reference to `}<inlineCode parentName=\"li\">{`selection`}</inlineCode>{` passed down as a prop`}</li>\n      <li parentName=\"ol\">{`Creates a `}<inlineCode parentName=\"li\">{`Text`}</inlineCode>{` instance and sets the `}<inlineCode parentName=\"li\">{`text`}</inlineCode>{` value as the input stored in the `}<inlineCode parentName=\"li\">{`name`}</inlineCode>{` state`}</li>\n      <li parentName=\"ol\">{`Styles the text. More info on styling text can be found in `}<a parentName=\"li\" {...{\n          \"href\": \"/uxp-xd/develop/tutorials/how-to-style-text\"\n        }}><inlineCode parentName=\"a\">{`how-to-style-text`}</inlineCode>{` tutorial`}</a></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`addChild`}</inlineCode>{` method inserts the created text into the ideal insertion point determined by the `}<inlineCode parentName=\"li\">{`insertionParent`}</inlineCode>{` property of the `}<inlineCode parentName=\"li\">{`selection`}</inlineCode>{` object`}</li>\n      <li parentName=\"ol\">{`Moves the added text `}<inlineCode parentName=\"li\">{`100`}</inlineCode>{` pixels from the top and `}<inlineCode parentName=\"li\">{`100`}</inlineCode>{` pixels from the left of the insertion point`}</li>\n      <li parentName=\"ol\">{`Closes the dialog`}</li>\n      <li parentName=\"ol\">{`Renders the component. Note that there is an input field to accept user's input and a button for the submission of the input`}</li>\n    </ol>\n    <p>{`Lastly, let's create the main `}<inlineCode parentName=\"p\">{`jsx`}</inlineCode>{` file, `}<inlineCode parentName=\"p\">{`main.jsx`}</inlineCode>{`. Paste the following code into `}<inlineCode parentName=\"p\">{`main.jsx`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// [1]\nconst reactShim = require(\"./react-shim\");\n// [2]\nconst React = require(\"react\");\nconst ReactDOM = require(\"react-dom\");\n// [3]\nconst App = require(\"./HelloForm.jsx\");\n\nfunction main(selection) {\n  let dialog;\n\n  function getDialog() {\n    if (dialog == null) {\n      // [4]\n      dialog = document.createElement(\"dialog\");\n      // [5]\n      ReactDOM.render(<App dialog={dialog} selection={selection} />, dialog);\n    }\n    return dialog;\n  }\n\n  // [6]\n  return document.body.appendChild(getDialog()).showModal();\n}\n\n// [7]\nmodule.exports = {\n  commands: {\n    main,\n  },\n};\n`}</code></pre>\n    <p>{`This code does the following:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Loads `}<inlineCode parentName=\"li\">{`react-shim.js`}</inlineCode>{` to make React run in the XD environment`}</li>\n      <li parentName=\"ol\">{`Gets reference to `}<inlineCode parentName=\"li\">{`react`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`react-dom`}</inlineCode>{` modules installed earlier in the steps`}</li>\n      <li parentName=\"ol\">{`Imports our `}<inlineCode parentName=\"li\">{`HelloForm`}</inlineCode>{` component`}</li>\n      <li parentName=\"ol\">{`Creates a `}<inlineCode parentName=\"li\">{`dialog`}</inlineCode>{` element in the document`}</li>\n      <li parentName=\"ol\">{`Renders the imported `}<inlineCode parentName=\"li\">{`HelloForm`}</inlineCode>{` component and passes `}<inlineCode parentName=\"li\">{`dialog`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`selection`}</inlineCode>{` objects as props. Note that the dialog is reused, so it gets rendered only once.`}</li>\n      <li parentName=\"ol\">{`Loads the modal inside the XD document`}</li>\n      <li parentName=\"ol\">{`Exports an object, with a `}<inlineCode parentName=\"li\">{`commands`}</inlineCode>{` property. The value of `}<inlineCode parentName=\"li\">{`commands`}</inlineCode>{` is an object which associates the JavaScript handler function (`}<inlineCode parentName=\"li\">{`main`}</inlineCode>{`) with your manifest's `}<inlineCode parentName=\"li\">{`commandId`}</inlineCode>{` property. The command ID property name (here, `}<inlineCode parentName=\"li\">{`main`}</inlineCode>{`) must match the `}<inlineCode parentName=\"li\">{`commandId`}</inlineCode>{` value declared in your manifest exactly.`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"5-compile-the-code\"\n    }}>{`5. Compile the code`}</h3>\n    <p><strong parentName=\"p\">{`Developement`}</strong>{` - Run `}<inlineCode parentName=\"p\">{`yarn watch`}</inlineCode>{` to compile the code and watch for changes. This process will create the `}<inlineCode parentName=\"p\">{`main.js`}</inlineCode>{` file to be read by Adobe XD.`}</p>\n    <p><strong parentName=\"p\">{`Production`}</strong>{` - Run `}<inlineCode parentName=\"p\">{`yarn build`}</inlineCode>{` to build the final version of your plugin.`}</p>\n    <h3 {...{\n      \"id\": \"5-run-your-plugin\"\n    }}>{`5. Run your plugin`}</h3>\n    <p>{`So you’ve written a plugin using React! How do we run it?`}</p>\n    <p>{`If you haven’t already done so, launch XD and open a new document. Then navigate to the `}<em parentName=\"p\">{`Plugins > Quick Start - React`}</em>{` menu item.`}</p>\n    <p>{`Alternatively, if XD was already open, select `}<em parentName=\"p\">{`Plugins > Development > Reload Plugins`}</em>{`.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"736px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"63.4375%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/uxp-xd/static/6c1ae8268e0375e78b7c99420857fc6c/cb523/react-hello-xd.webp 320w\", \"/uxp-xd/static/6c1ae8268e0375e78b7c99420857fc6c/797b9/react-hello-xd.webp 640w\", \"/uxp-xd/static/6c1ae8268e0375e78b7c99420857fc6c/346f6/react-hello-xd.webp 736w\"],\n            \"sizes\": \"(max-width: 736px) 100vw, 736px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/uxp-xd/static/6c1ae8268e0375e78b7c99420857fc6c/72799/react-hello-xd.png 320w\", \"/uxp-xd/static/6c1ae8268e0375e78b7c99420857fc6c/6af66/react-hello-xd.png 640w\", \"/uxp-xd/static/6c1ae8268e0375e78b7c99420857fc6c/f941f/react-hello-xd.png 736w\"],\n            \"sizes\": \"(max-width: 736px) 100vw, 736px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/uxp-xd/static/6c1ae8268e0375e78b7c99420857fc6c/f941f/react-hello-xd.png\",\n            \"alt\": \"XD dialog drops down\",\n            \"title\": \"XD dialog drops down\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`Congratulations! You’ve built your first plugin using React!`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}