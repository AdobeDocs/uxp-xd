{"version":3,"sources":["webpack://uxp-xd/./src/pages/develop/reference/SceneNodeList.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-develop-reference-scene-node-list-md-8e76c27d57b47de22e66.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"scenenodelist\"\n    }}>{`SceneNodeList`}</h1>\n    <p>{`Represents the children of a scenenode. Typically accessed via the `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/scenegraph/#SceneNode-children\"\n      }}>{`SceneNode.children`}</a>{` property.`}</p>\n    <p>{`This is `}<em parentName=\"p\">{`not an Array`}</em>{`, so you must use `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList-at\"\n      }}><inlineCode parentName=\"a\">{`.at(i)`}</inlineCode></a>{` instead of `}<inlineCode parentName=\"p\">{`[i]`}</inlineCode>{` to access children by index. It has a\nnumber of Array-like methods such as `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList-forEach\"\n      }}>{`forEach`}</a>{` for convenience, however. For best performance, iterate\nthe list using these methods rather than repeatedly calling `}<inlineCode parentName=\"p\">{`at()`}</inlineCode>{`.`}</p>\n    <p>{`Items in this list are ordered from lowest z order to highest.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: class`}</p>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`let node = ...;\nconsole.log(\"Node has \" + node.children.length + \" children\");\nconsole.log(\"First child: \" + node.children.at(0));  // do not use \\`[0]\\` - it will not work!\nnode.children.forEach(function (childNode, i) {\n    ...\n});\n`}</code></pre>\n    <p><strong parentName=\"p\">{`See`}</strong>{`: `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/scenegraph/#SceneNode-children\"\n      }}>{`SceneNode.children`}</a></p>\n    <h3 {...{\n      \"id\": \"scenenodelistlength--number\"\n    }}>{`sceneNodeList.length : `}<inlineCode parentName=\"h3\">{`number`}</inlineCode></h3>\n    <p>{`Number of children in the list.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance property of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}><inlineCode parentName=\"a\">{`SceneNodeList`}</inlineCode></a><br parentName=\"p\"></br>{`\n`}<strong parentName=\"p\">{`Read only`}</strong>{`: true`}</p>\n    <h3 {...{\n      \"id\": \"scenenodelistforeachcallback-thisarg-⇒-void\"\n    }}>{`sceneNodeList.forEach(callback, thisArg) ⇒ `}<inlineCode parentName=\"h3\">{`void`}</inlineCode></h3>\n    <p>{`Iterate all children in the list.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance method of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}><inlineCode parentName=\"a\">{`SceneNodeList`}</inlineCode></a></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`callback`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`!function(!SceneNode, number)`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Callback, passed each child node and its index.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`thisArg`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`?Object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional value for `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` when executing the callback.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"scenenodelistforeachrightcallback-thisarg-⇒-void\"\n    }}>{`sceneNodeList.forEachRight(callback, thisArg) ⇒ `}<inlineCode parentName=\"h3\">{`void`}</inlineCode></h3>\n    <p>{`Iterate all children in the list, in reverse order (highest z order to lowest).`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance method of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}><inlineCode parentName=\"a\">{`SceneNodeList`}</inlineCode></a></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`callback`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`!function(!SceneNode, number)`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Callback, passed each child node and its index.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`thisArg`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`?Object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional value for `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` when executing the callback.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"scenenodelistfiltercallback-thisarg-⇒-arrayscenenodegt\"\n    }}>{`sceneNodeList.filter(callback, thisArg) ⇒ `}<inlineCode parentName=\"h3\">{`Array.<!SceneNode&gt;`}</inlineCode></h3>\n    <p>{`Iterates all children and returns an array of just the children that passed the filter function's test.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance method of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}><inlineCode parentName=\"a\">{`SceneNodeList`}</inlineCode></a></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`callback`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`!function(!SceneNode, number): boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Filter function, passed each child node and its index.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`thisArg`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`?Object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional value for `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` when executing the callback.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"scenenodelistmapcallback-thisarg-⇒-arraygt\"\n    }}>{`sceneNodeList.map(callback, thisArg) ⇒ `}<inlineCode parentName=\"h3\">{`Array.<\\\\*&gt;`}</inlineCode></h3>\n    <p>{`Iterates all children and returns an array of the map function's result value for each child node.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance method of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}><inlineCode parentName=\"a\">{`SceneNodeList`}</inlineCode></a></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`callback`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`!function(!SceneNode, number): *`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Map function, passed each child node and its index.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`thisArg`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`?Object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional value for `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` when executing the callback.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"scenenodelistsomecallback-thisarg-⇒-boolean\"\n    }}>{`sceneNodeList.some(callback, thisArg) ⇒ `}<inlineCode parentName=\"h3\">{`boolean`}</inlineCode></h3>\n    <p>{`Iterates children until the test returns true for at least one child.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance method of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}><inlineCode parentName=\"a\">{`SceneNodeList`}</inlineCode></a><br parentName=\"p\"></br>{`\n`}<strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`boolean`}</inlineCode>{` - True if the test function returned true for at least one child.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`callback`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`!function(!SceneNode, number): boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Test function, passed each child node and its index.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`thisArg`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`?Object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional value for `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` when executing the callback.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"scenenodelistat-⇒-scenenode\"\n    }}>{`sceneNodeList.at() ⇒ `}<inlineCode parentName=\"h3\">{`SceneNode`}</inlineCode></h3>\n    <p>{`Note: calling `}<inlineCode parentName=\"p\">{`at()`}</inlineCode>{` repeatedly (e.g. in a `}<inlineCode parentName=\"p\">{`for`}</inlineCode>{` loop) is not as fast as using SceneNodeList's iteration methods such as `}<inlineCode parentName=\"p\">{`forEach()`}</inlineCode>{`,\n`}<inlineCode parentName=\"p\">{`some()`}</inlineCode>{`, or `}<inlineCode parentName=\"p\">{`map()`}</inlineCode>{`.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance method of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}><inlineCode parentName=\"a\">{`SceneNodeList`}</inlineCode></a><br parentName=\"p\"></br>{`\n`}<strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`?SceneNode`}</inlineCode>{` - Child node at the specified index in the list, or null if index is out of bounds.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`index`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}