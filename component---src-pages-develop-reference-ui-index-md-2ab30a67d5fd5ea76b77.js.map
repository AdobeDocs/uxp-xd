{"version":3,"sources":["webpack:///./src/pages/develop/reference/ui/index.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"0PAQaA,G,UAAe,IACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,mBAAQ,CACN,GAAM,6BADR,6BAGA,kSACA,0JACA,mBAAQ,CACN,GAAM,oBADR,oBAGA,6BAAU,wBAAQC,WAAW,KAAnB,mBAAV,8GACA,wBACE,oBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,eADQ,kBAGpB,oBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,cADQ,YAItB,gCACE,mBAAGA,WAAW,cAAa,wBAAQA,WAAW,KAAnB,SAC3B,mBAAGA,WAAW,cAAd,wDAEF,mBAAQ,CACN,GAAM,kBADR,kBAGA,2IACA,wBACE,oBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,cADQ,WAGpB,oBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,cADQ,WAGpB,oBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,gBADQ,cAItB,mBAAQ,CACN,GAAM,oBADR,oBAGA,uBAAG,+BAAGA,WAAW,KAAQ,CACrB,KAAQ,iDADT,wBAOPJ,EAAWK,gBAAiB","file":"component---src-pages-develop-reference-ui-index-md-2ab30a67d5fd5ea76b77.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"user-interface-components\"\n    }}>{`User Interface Components`}</h1>\n    <p>{`While plenty of XD plugins are perfectly suited to run like headless scripts, many plugin creators will want to offer the user a way to interact. XD plugins can display UI in the form of modal dialogs, built with JavaScript and a supported subset of HTML and CSS.`}</p>\n    <p>{`The tutorials contained in this section will give you an in-depth look at UI features available to your plugin through the API.`}</p>\n    <h2 {...{\n      \"id\": \"insertion-points\"\n    }}>{`Insertion Points`}</h2>\n    <p>{`An `}<strong parentName=\"p\">{`insertion point`}</strong>{` is an area within XD that can accept custom user interface. The following insertion points are available:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./dialogs/\"\n        }}>{`Modal Dialogs`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./panels/\"\n        }}>{`Panels`}</a></li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Info`}</strong></p>\n      <p parentName=\"blockquote\">{`More insertion points will be coming in the future!`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"user-interface\"\n    }}>{`User Interface`}</h2>\n    <p>{`Within an insertion point, you can create rich, custom user interfaces. Read the following for more information:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./styles/\"\n        }}>{`Styles`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./layout/\"\n        }}>{`Layout`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./elements/\"\n        }}>{`Elements`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"ui-sticker-sheet\"\n    }}>{`UI Sticker Sheet`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/design/user-interface/sticker-sheet/\"\n      }}>{`View Sticker Sheet`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}