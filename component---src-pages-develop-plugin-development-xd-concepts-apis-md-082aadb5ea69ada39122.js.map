{"version":3,"file":"component---src-pages-develop-plugin-development-xd-concepts-apis-md-082aadb5ea69ada39122.js","mappings":"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","sources":["webpack://uxp-xd/./src/pages/develop/plugin-development/xd-concepts/apis.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"available-apis\"\n    }}>{`Available APIs`}</h1>\n    <p>{`Adobe XD provides several categories of APIs:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\"><a parentName=\"strong\" {...{\n              \"href\": \"#xd-specific-apis\"\n            }}>{`APIs for interacting with XD itself`}</a></strong>{`, especially its document model, the `}<strong parentName=\"p\">{`scenegraph`}</strong></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The `}<strong parentName=\"p\">{`UXP runtime`}</strong>{`, which provides all the capabilities that aren't XD-specific:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`A `}<a parentName=\"li\" {...{\n              \"href\": \"/uxp-xd/develop/reference/uxp/ui-index\"\n            }}><em parentName=\"a\">{`browser-like`}</em>{` HTML and CSS engine`}</a>{` which drives actual XD `}<em parentName=\"li\">{`native UI components`}</em>{` -- it is `}<strong parentName=\"li\">{`not`}</strong>{` a complete browser engine, but lets you build your UI using familiar web APIs and frameworks.`}</li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"/uxp-xd/develop/reference/uxp/network-index/\"\n            }}>{`Network APIs`}</a>{` similar to the web standard XHR, `}<inlineCode parentName=\"li\">{`fetch`}</inlineCode>{`, and WebSocket found in browsers.`}</li>\n          <li parentName=\"ul\">{`The `}<a parentName=\"li\" {...{\n              \"href\": \"/uxp-xd/develop/reference/uxp/storage-index/\"\n            }}><inlineCode parentName=\"a\">{`storage`}</inlineCode>{` API`}</a>{`, offering sandboxed filesystem access.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The usual `}<strong parentName=\"p\"><a parentName=\"strong\" {...{\n              \"href\": \"/uxp-xd/develop/plugin-development/javascript-and-xd/javascript-support\"\n            }}>{`core JavaScript language APIs`}</a></strong>{` you see in all JS runtimes, such as `}<inlineCode parentName=\"p\">{`setTimeout()`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Date`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`A simple `}<strong parentName=\"p\"><a parentName=\"strong\" {...{\n              \"href\": \"/uxp-xd/develop/plugin-development/javascript-and-xd/javascript-support/#can-i-use-require\"\n            }}>{`module-loader `}<inlineCode parentName=\"a\">{`require()`}</inlineCode>{` API`}</a></strong></p>\n      </li>\n    </ul>\n    <p>{`Read below for `}<strong parentName=\"p\">{`how to access`}</strong>{` XD and UXP APIs...`}</p>\n    <h2 {...{\n      \"id\": \"xd-specific-apis\"\n    }}>{`XD-specific APIs`}</h2>\n    <p>{`Most XD APIs are accessed by loading a module via `}<inlineCode parentName=\"p\">{`require()`}</inlineCode>{`, but some are passed directly to your plugin's handler functions. See the `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/xd-index\"\n      }}>{`XD specific APIs page`}</a>{` for a full list of modules. Below are some examples of modules available via the API:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/uxp-xd/develop/reference/selection/\"\n        }}>{`selection`}</a>{` - Indicates the selected nodes and related context`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`This object is passed as an argument to your command handler function (see above)`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/uxp-xd/develop/reference/scenegraph/\"\n        }}>{`scenegraph`}</a>{` - APIs available on document nodes`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Typically you use scenegraph objects by simply accessing the arguments passed to your command's handler function\n(`}<inlineCode parentName=\"li\">{`selection`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`documentRoot`}</inlineCode>{`).`}</li>\n          <li parentName=\"ul\">{`To create `}<em parentName=\"li\">{`new`}</em>{` nodes in the document, load this module explicitly to access the constructor functions:`}\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-js\"\n              }}>{`let Rectangle = require(\"scenegraph\").Rectangle;\nlet node = new Rectangle();\n`}</code></pre>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/uxp-xd/develop/reference/commands/\"\n        }}>{`commands`}</a>{` - Invoke commands to change the document structure and perform other complex operations.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`let commands = require(\"commands\");`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/uxp-xd/develop/reference/interactions/\"\n        }}>{`interactions`}</a>{` - Data model for interactive prototyping features (also accessible from scenegraph nodes).`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`let interactions = require(\"interactions\");`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/uxp-xd/develop/reference/application/\"\n        }}>{`application`}</a>{` - APIs for exporting content, initiating edits from panel UI, and getting version / locale info.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`let application = require(\"application\");`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/uxp-xd/develop/reference/clipboard/\"\n        }}>{`clipboard`}</a>{` - Copy text to the clipboard.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`let clipboard = require(\"clipboard\");`}</inlineCode></li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"uxp\"\n    }}>{`UXP`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`HTML DOM APIs -- access just as in a browser, via the global `}<inlineCode parentName=\"p\">{`document`}</inlineCode>{`. Each plugin in XD gets its own `}<inlineCode parentName=\"p\">{`document`}</inlineCode>{` tree.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Network APIs -- access just as in a browser, via the global classes `}<inlineCode parentName=\"p\">{`XMLHttpRequest`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`WebSocket`}</inlineCode>{`, and the global function `}<inlineCode parentName=\"p\">{`fetch()`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Storage APIs -- access via `}<inlineCode parentName=\"p\">{`const fs = require(\"uxp\").storage.localFileSystem;`}</inlineCode></p>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}