{"version":3,"sources":["webpack:///./src/pages/develop/reference/how-to-read.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"0PAQaA,G,UAAe,IACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,mBAAQ,CACN,GAAM,2CADR,2CAGA,oJACA,mBAAQ,CACN,GAAM,oBADR,oBAGA,2HACA,2BACE,uBAAOC,WAAW,SAChB,oBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,cAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,aAKJ,uBAAOA,WAAW,SAChB,oBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,4BAAYA,WAAW,MAAvB,UACH,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,gEAEoE,4BAAYA,WAAW,MAAvB,aAFpE,MAIF,oBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,4BAAYA,WAAW,MAAvB,mBACH,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,qFAIF,oBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,4BAAYA,WAAW,MAAvB,WACH,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,2BAE+B,4BAAYA,WAAW,MAAvB,QAF/B,MAIF,oBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,4BAAYA,WAAW,MAAvB,WACH,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,0BAE8B,oBAAIA,WAAW,MAAf,UAF9B,OAEyE,4BAAYA,WAAW,MAAvB,QAFzE,sBAEiJ,4BAAYA,WAAW,MAAvB,UAFjJ,KAE0M,4BAAYA,WAAW,MAAvB,UAF1M,KAEmQ,4BAAYA,WAAW,MAAvB,WAFnQ,WAEmU,4BAAYA,WAAW,MAAvB,KAFnU,6CAE+Z,4BAAYA,WAAW,MAAvB,KAF/Z,MAIF,oBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,WAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAIF,oBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,4BAAYA,WAAW,MAAvB,6BACH,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,0CAE8C,4BAAYA,WAAW,MAAvB,OAF9C,mBAEkH,4BAAYA,WAAW,MAAvB,UAFlH,SAE+K,4BAAYA,WAAW,MAAvB,OAF/K,mBAEmP,4BAAYA,WAAW,MAAvB,UAFnP,MAIF,oBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,4BAAYA,WAAW,MAAvB,aACH,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iCAIF,oBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,4BAAYA,WAAW,MAAvB,kBACH,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iCAIF,oBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,4BAAYA,WAAW,MAAvB,oBACH,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,sEAIF,oBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,4BAAYA,WAAW,MAAvB,MACH,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,oBAEwB,wBAAQA,WAAW,MAAnB,SAFxB,yBAE4F,4BAAYA,WAAW,MAAvB,KAF5F,yEAUVJ,EAAWK,gBAAiB","file":"component---src-pages-develop-reference-how-to-read-md-8a9f5fff33173971e785.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"how-to-read-the-reference-documentation\"\n    }}>{`How to read the reference documentation`}</h1>\n    <p>{`Please take a moment to familiarize yourself with the types of symbols you'll see throughout the technical documentation.`}</p>\n    <h2 {...{\n      \"id\": \"type-annotations\"\n    }}>{`Type Annotations`}</h2>\n    <p>{`This shorthand is used to indicate the types of arguments, return values, and object properties.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Annotation`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Meaning`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`[day]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The parameter is optional. If it is not supplied, it will be `}<inlineCode parentName=\"td\">{`undefined`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`[day=\"Monday\"]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The parameter is optional, but will be supplied a default value if not provided.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`?Array`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type can be an Array OR `}<inlineCode parentName=\"td\">{`null`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`!Array`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type must be an Array; `}<em parentName=\"td\">{`cannot`}</em>{` be `}<inlineCode parentName=\"td\">{`null`}</inlineCode>{`. Primitive types (`}<inlineCode parentName=\"td\">{`string`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`number`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`boolean`}</inlineCode>{`) imply `}<inlineCode parentName=\"td\">{`!`}</inlineCode>{` unless explicitly denoted otherwise with `}<inlineCode parentName=\"td\">{`?`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\\`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number\\``}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`{foo:number, bar:string}`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type is an object with two properties: `}<inlineCode parentName=\"td\">{`foo`}</inlineCode>{`, which is type `}<inlineCode parentName=\"td\">{`number`}</inlineCode>{`; and `}<inlineCode parentName=\"td\">{`bar`}</inlineCode>{`, which is type `}<inlineCode parentName=\"td\">{`string`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string[]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type is an array of strings.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Array<string>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type is an array of strings.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Promise<string>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type is a Promise that is asynchronously fulfilled with a string.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`*`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Can be any type. `}<strong parentName=\"td\">{`NOTE:`}</strong>{` In this early stage, `}<inlineCode parentName=\"td\">{`*`}</inlineCode>{` is sometimes used as a placeholder for incomplete documentation.`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}