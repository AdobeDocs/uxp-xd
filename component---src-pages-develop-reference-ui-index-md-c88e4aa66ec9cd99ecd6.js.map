{"version":3,"file":"component---src-pages-develop-reference-ui-index-md-c88e4aa66ec9cd99ecd6.js","mappings":"kQAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGC,GAAK,YAER,OAAO,SAACJ,GAAS,UAAKD,EAAiBK,EAAK,CAAED,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,6BAA2B,8BAEnC,8RACA,sJACA,eACE,GAAM,oBAAkB,qBAE1B,yBAAU,mBAAQC,WAAW,KAAG,mBAA6B,+GAC7D,oBACE,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,cAAY,mBAExB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,aAAW,aAGzB,4BACE,cAAGA,WAAW,eAAa,mBAAQA,WAAW,KAAG,UACjD,cAAGA,WAAW,cAAY,yDAE5B,eACE,GAAM,kBAAgB,mBAExB,uIACA,oBACE,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,aAAW,YAEvB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,aAAW,YAEvB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,eAAa,eAG3B,eACE,GAAM,oBAAkB,qBAE1B,mBAAG,cAAGA,WAAW,IACb,KAAQ,gDAA8C,uBAI9D,CAEAJ,EAAWK,gBAAiB,C","sources":["webpack://uxp-xd/./src/pages/develop/reference/ui/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"user-interface-components\"\n    }}>{`User Interface Components`}</h1>\n    <p>{`While plenty of XD plugins are perfectly suited to run like headless scripts, many plugin creators will want to offer the user a way to interact. XD plugins can display UI in the form of modal dialogs, built with JavaScript and a supported subset of HTML and CSS.`}</p>\n    <p>{`The tutorials contained in this section will give you an in-depth look at UI features available to your plugin through the API.`}</p>\n    <h2 {...{\n      \"id\": \"insertion-points\"\n    }}>{`Insertion Points`}</h2>\n    <p>{`An `}<strong parentName=\"p\">{`insertion point`}</strong>{` is an area within XD that can accept custom user interface. The following insertion points are available:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./dialogs/\"\n        }}>{`Modal Dialogs`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./panels/\"\n        }}>{`Panels`}</a></li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Info`}</strong></p>\n      <p parentName=\"blockquote\">{`More insertion points will be coming in the future!`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"user-interface\"\n    }}>{`User Interface`}</h2>\n    <p>{`Within an insertion point, you can create rich, custom user interfaces. Read the following for more information:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./styles/\"\n        }}>{`Styles`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./layout/\"\n        }}>{`Layout`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./elements/\"\n        }}>{`Elements`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"ui-sticker-sheet\"\n    }}>{`UI Sticker Sheet`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/design/user-interface/sticker-sheet/\"\n      }}>{`View Sticker Sheet`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}