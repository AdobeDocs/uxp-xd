{"version":3,"sources":["webpack:///./src/pages/develop/reference/javascript/sync-async.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,IACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,mBAAQ,CACN,GAAM,kBADR,kBAGA,iHAA8F,oBAAIC,WAAW,KAAf,QAA9F,QAAuI,oBAAIA,WAAW,KAAf,SAAvI,MACA,mHACA,uBAAG,wBAAQA,WAAW,KAAnB,SAAH,wKACA,mBAAQ,CACN,GAAM,oBADR,oBAGA,+FACA,6CACA,yBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,oIAOL,mBAAQ,CACN,GAAM,qBADR,qBAGA,kDAA+B,oBAAIA,WAAW,KAAf,gBAA/B,+KACA,kDAA+B,+BAAGA,WAAW,KAAQ,CACjD,KAAQ,yCADmB,gBAA/B,wBAGA,yBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,6JAQL,6EACA,yBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,2IAOL,0EAKJJ,EAAWK,gBAAiB","file":"component---src-pages-develop-reference-javascript-sync-async-md-18335dfde3bd457120b4.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"sync-and-async\"\n    }}>{`Sync and Async`}</h1>\n    <p>{`XD plugin APIs support both synchronous and asynchronous code (commonly referred to as `}<em parentName=\"p\">{`sync`}</em>{` and `}<em parentName=\"p\">{`async`}</em>{`).`}</p>\n    <p>{`Below, we'll talk a little about the difference, and what it means for your XD plugins. `}</p>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` \"Sync vs async\" is a topic frequently covered in JavaScript tutorials and articles around the web. For a broader introduction, consult your favorite search engine.`}</p>\n    <h2 {...{\n      \"id\": \"synchronous-code\"\n    }}>{`Synchronous code`}</h2>\n    <p>{`When you write synchronous code, your code is executed line by line.`}</p>\n    <p>{`Here's an example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const newElement = new Rectangle();\nnewElement.width = 100;\nnewElement.height = 50;\nnewElement.fill = new Color(\"Purple\");\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"asynchronous-code\"\n    }}>{`Asynchronous code`}</h2>\n    <p>{`XD plugins also support `}<em parentName=\"p\">{`asynchronous`}</em>{` code with both Promises and async/await. Some XD plugin APIs are asynchronous in nature. You can also create your own Promises as you would in any JavaScript environment.`}</p>\n    <p>{`Here's an example using `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/reference/uxp/storage-index/\"\n      }}>{`the File API`}</a>{` and Promise syntax:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`function sayHello(selection, documentRoot) {\n    return fs.getFileForSaving().then(file => {\n        return file.write(\"Hello, world!\");\n    });\n}\n`}</code></pre>\n    <p>{`Here's that same example using async/await syntax:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`async function sayHello(selection, documentRoot) {\n    let file = await fs.getFileForSaving();\n    file.write(\"Hello, world!\");\n}\n`}</code></pre>\n    <p>{`We recommend async/await syntax over Promises.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}