(window.webpackJsonp=window.webpackJsonp||[]).push([[162],{"1jV/":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return l})),n.d(t,"default",(function(){return d}));var a=n("wx14"),c=n("zLVn"),m=(n("q1tI"),n("7ljp")),r=n("ndZU"),l=(n("qKvR"),{}),o={_frontmatter:l},p=r.a;function d(e){var t=e.components,n=Object(c.a)(e,["components"]);return Object(m.mdx)(p,Object(a.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(m.mdx)("h1",{id:"network"},"Network"),Object(m.mdx)("h1",{id:"network-io"},"Network I/O"),Object(m.mdx)("p",null,"The Network I/O subsystem mimics the standards found on the web. The following API surfaces are available:"),Object(m.mdx)("ul",null,Object(m.mdx)("li",{parentName:"ul"},"Web Sockets",Object(m.mdx)("ul",{parentName:"li"},Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(a.a)({parentName:"li"},{href:"/uxp-xd/reference/uxp/class/WebSocket/"}),"XD Documentation")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(a.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API"}),"MDN documentation")))),Object(m.mdx)("li",{parentName:"ul"},"XMLHttpRequest",Object(m.mdx)("ul",{parentName:"li"},Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(a.a)({parentName:"li"},{href:"/uxp-xd/reference/uxp/class/XMLHttpRequest/"}),"XD Documentation")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(a.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest"}),"MDN documentation")))),Object(m.mdx)("li",{parentName:"ul"},"Fetch",Object(m.mdx)("ul",{parentName:"li"},Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(a.a)({parentName:"li"},{href:"/uxp-xd/reference/uxp/function/fetch/"}),"XD Documentation")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(a.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"}),"MDN documentation"))))),Object(m.mdx)("h2",{id:"web-socket-support"},"Web Socket Support"),Object(m.mdx)("p",null,"The entire web socket API is supported, ",Object(m.mdx)("em",{parentName:"p"},"except")," for extensions handling."),Object(m.mdx)("h2",{id:"xmlhttprequest-support"},"XMLHttpRequest Support"),Object(m.mdx)("p",null,"Most of the XHR API surface is supported, including:"),Object(m.mdx)("ul",null,Object(m.mdx)("li",{parentName:"ul"},"Setting request headers"),Object(m.mdx)("li",{parentName:"ul"},"Getting response headers"),Object(m.mdx)("li",{parentName:"ul"},"Event handling"),Object(m.mdx)("li",{parentName:"ul"},"Sending text and binary data",Object(m.mdx)("ul",{parentName:"li"},Object(m.mdx)("li",{parentName:"ul"},"Text is expected to be UTF8 encoded."),Object(m.mdx)("li",{parentName:"ul"},"Binary data must use ",Object(m.mdx)("inlineCode",{parentName:"li"},"ArrayBuffer"),", not ",Object(m.mdx)("inlineCode",{parentName:"li"},"Blob"))))),Object(m.mdx)("p",null,"Unsupported portions of the surface:"),Object(m.mdx)("ul",null,Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("inlineCode",{parentName:"li"},"responseURL")),Object(m.mdx)("li",{parentName:"ul"},"Sending / receiving Blobs is not supported"),Object(m.mdx)("li",{parentName:"ul"},"Synchronous XHR will throw an error")),Object(m.mdx)("h2",{id:"fetch-support"},"Fetch Support"),Object(m.mdx)("p",null,"Fetch is polyfilled on top of the XHR implementation using ",Object(m.mdx)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/github/fetch"}),"https://github.com/github/fetch"),"."))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-develop-reference-uxp-network-index-md-a04583e4918442e23230.js.map