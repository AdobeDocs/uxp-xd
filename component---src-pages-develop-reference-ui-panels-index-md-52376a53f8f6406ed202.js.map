{"version":3,"file":"component---src-pages-develop-reference-ui-panels-index-md-52376a53f8f6406ed202.js","mappings":"kQAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGC,GAAK,YAER,OAAO,SAACJ,GAAS,UAAKD,EAAiBK,EAAK,CAAED,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,SAAO,UAEf,2KACA,mBAAG,iBAAMC,WAAW,IAChB,UAAa,4BACb,MAAS,CACP,SAAY,WACZ,QAAW,QACX,WAAc,OACd,YAAe,OACf,SAAY,UACb,YAED,iBAAMA,WAAW,OACf,UAAa,qCACb,MAAS,CACP,cAAiB,UACjB,SAAY,WACZ,OAAU,IACV,KAAQ,IACR,QAAW,QACX,WAAc,oBACd,cAAiB,UAEX,QACd,oBAASA,WAAW,QAAM,gBAClB,mBAAQA,WAAW,UACnB,OAAU,CAAC,wEAAyE,yEACpF,MAAS,kCACT,KAAQ,eACE,gBACV,mBAAQA,WAAW,UACnB,OAAU,CAAC,uEAAwE,wEACnF,MAAS,kCACT,KAAQ,cACE,gBACV,gBAAKA,WAAW,UAChB,UAAa,0BACb,IAAO,kEACP,IAAO,qBACP,MAAS,qBACT,QAAW,OACX,MAAS,CACP,MAAS,OACT,OAAU,OACV,OAAU,IACV,cAAiB,SACjB,SAAY,WACZ,QAAW,IACX,WAAc,eACd,MAAS,UACT,UAAa,+BACb,IAAO,IACP,KAAQ,OAEH,cACC,YAEhB,kTACA,oBACE,eAAIA,WAAW,MAAI,iFACnB,eAAIA,WAAW,MAAI,4HACnB,eAAIA,WAAW,MAAI,8CAA+C,eAAIA,WAAW,MAAI,WAAiB,WAExG,eACE,GAAM,SAAO,UAEf,iGAAkF,cAAGA,WAAW,IAC5F,KAAQ,+CAA6C,sBAC1B,MAC/B,eACE,GAAM,mBAAiB,oBAEzB,wHAAyG,uBAAYA,WAAW,KAAG,0BAAwC,MAAM,uBAAYA,WAAW,KAAG,aAA2B,2CACtO,+EACA,uEACA,6CACA,mBAAG,iBAAMA,WAAW,IAChB,UAAa,4BACb,MAAS,CACP,SAAY,WACZ,QAAW,QACX,WAAc,OACd,YAAe,OACf,SAAY,UACb,YAED,iBAAMA,WAAW,OACf,UAAa,qCACb,MAAS,CACP,cAAiB,qBACjB,SAAY,WACZ,OAAU,IACV,KAAQ,IACR,QAAW,QACX,WAAc,oBACd,cAAiB,UAEX,QACd,oBAASA,WAAW,QAAM,gBAClB,mBAAQA,WAAW,UACnB,OAAU,CAAC,gFAAiF,iFAC5F,MAAS,kCACT,KAAQ,eACE,gBACV,mBAAQA,WAAW,UACnB,OAAU,CAAC,+EAAgF,gFAC3F,MAAS,kCACT,KAAQ,cACE,gBACV,gBAAKA,WAAW,UAChB,UAAa,0BACb,IAAO,0EACP,IAAO,iBACP,MAAS,iBACT,QAAW,OACX,MAAS,CACP,MAAS,OACT,OAAU,OACV,OAAU,IACV,cAAiB,SACjB,SAAY,WACZ,QAAW,IACX,WAAc,eACd,MAAS,UACT,UAAa,+BACb,IAAO,IACP,KAAQ,OAEH,cACC,YAEhB,2CACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,skDA+EhC,yCACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eAAa,i4EAyF9B,oCACA,0KAA2J,cAAGA,WAAW,IACrK,KAAQ,WAAS,kCACkB,uBAAYA,WAAW,KAAG,UAAwB,WAAe,MACxG,eACE,GAAM,6BAA2B,8BAEnC,iFAAkE,uBAAYA,WAAW,KAAG,aAA2B,+CAA+C,uBAAYA,WAAW,KAAG,UAAwB,gDAAgD,uBAAYA,WAAW,KAAG,aAA2B,SAAS,uBAAYA,WAAW,KAAG,QAAsB,4IACtX,kGACA,sDACA,mBAAG,iBAAMA,WAAW,IAChB,UAAa,4BACb,MAAS,CACP,SAAY,WACZ,QAAW,QACX,WAAc,OACd,YAAe,OACf,SAAY,UACb,YAED,iBAAMA,WAAW,OACf,UAAa,qCACb,MAAS,CACP,cAAiB,WACjB,SAAY,WACZ,OAAU,IACV,KAAQ,IACR,QAAW,QACX,WAAc,oBACd,cAAiB,UAEX,QACd,oBAASA,WAAW,QAAM,gBAClB,mBAAQA,WAAW,UACnB,OAAU,CAAC,wEAAyE,yEACpF,MAAS,kCACT,KAAQ,eACE,gBACV,mBAAQA,WAAW,UACnB,OAAU,CAAC,uEAAwE,wEACnF,MAAS,kCACT,KAAQ,cACE,gBACV,gBAAKA,WAAW,UAChB,UAAa,0BACb,IAAO,kEACP,IAAO,gBACP,MAAS,gBACT,QAAW,OACX,MAAS,CACP,MAAS,OACT,OAAU,OACV,OAAU,IACV,cAAiB,SACjB,SAAY,WACZ,QAAW,IACX,WAAc,eACd,MAAS,UACT,UAAa,+BACb,IAAO,IACP,KAAQ,OAEH,cACC,YAEhB,oDACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,skDA+EhC,kDACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eAAa,4nFA6F9B,oCACA,eACE,GAAM,mBAAiB,oBAEzB,2GACA,oBACE,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,WAAS,UAErB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,WAAS,UAErB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,aAAW,YAK7B,CAEAJ,EAAWK,gBAAiB,C","sources":["webpack://uxp-xd/./src/pages/develop/reference/ui/panels/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"panel\"\n    }}>{`Panel`}</h1>\n    <p>{`A panel is used to display information and options that are persistent and can be shown without blocking user interactions with the active document.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"452px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"193.75%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/uxp-xd/static/3909210c9a9ca0fd9bd98b9b7e50c75b/5530d/panel.webp 320w\", \"/uxp-xd/static/3909210c9a9ca0fd9bd98b9b7e50c75b/a0edd/panel.webp 452w\"],\n            \"sizes\": \"(max-width: 452px) 100vw, 452px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/uxp-xd/static/3909210c9a9ca0fd9bd98b9b7e50c75b/dd4a7/panel.png 320w\", \"/uxp-xd/static/3909210c9a9ca0fd9bd98b9b7e50c75b/80d88/panel.png 452w\"],\n            \"sizes\": \"(max-width: 452px) 100vw, 452px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/uxp-xd/static/3909210c9a9ca0fd9bd98b9b7e50c75b/80d88/panel.png\",\n            \"alt\": \"Example of a panel\",\n            \"title\": \"Example of a panel\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`Panels appear on the left-hand side of the app when user clicks on the Plugins icon at the bottom-left side. Panels do not prevent user interaction with the underlying document and can listen for the user's selection changes. Panels are dismissed in any one of the following manners:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The user clicks on the \"back arrow\" button at the top of XD's Plugins panel`}</li>\n      <li parentName=\"ul\">{`The user clicks on one of the other options for the left hand side of the app, such as the Layers panel or Assets panel`}</li>\n      <li parentName=\"ul\">{`The user runs a different plugin from the `}<em parentName=\"li\">{`Plugins`}</em>{` menu`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`Building the user interface for panels is very similar to modals. Refer to `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/ui/dialogs/#usage\"\n      }}>{`Modal dialog usage`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"building-panels\"\n    }}>{`Building Panels`}</h2>\n    <p>{`You can build panels using any method that creates an HTML5 DOM structure. This means you can use `}<inlineCode parentName=\"p\">{`document.createElement`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`innerHTML`}</inlineCode>{`, jQuery, React, and other frameworks.`}</p>\n    <p>{`Let's examine a simple panel and how we might create it:`}</p>\n    <p>{`{% tabs sample=\"Sample\", html=\"HTML\", js=\"JS\" %}`}</p>\n    <p>{`{% content \"sample\" %}`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"502px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"62.18749999999999%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/uxp-xd/static/cc5ff6086dde74ae20300eb231bffc9b/5530d/panel-example.webp 320w\", \"/uxp-xd/static/cc5ff6086dde74ae20300eb231bffc9b/6a9f2/panel-example.webp 502w\"],\n            \"sizes\": \"(max-width: 502px) 100vw, 502px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/uxp-xd/static/cc5ff6086dde74ae20300eb231bffc9b/dd4a7/panel-example.png 320w\", \"/uxp-xd/static/cc5ff6086dde74ae20300eb231bffc9b/c1d3e/panel-example.png 502w\"],\n            \"sizes\": \"(max-width: 502px) 100vw, 502px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/uxp-xd/static/cc5ff6086dde74ae20300eb231bffc9b/c1d3e/panel-example.png\",\n            \"alt\": \"A Simple panel\",\n            \"title\": \"A Simple panel\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`{% content \"html\" %}`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<style>\n  .break {\n    flex-wrap: wrap;\n  }\n  label.row > * {\n    margin: 3px 0;\n  }\n  label.row > span {\n    color: #8e8e8e;\n    width: 20px;\n    text-align: right;\n    font-size: 9px;\n  }\n  label.row input {\n    flex: 1 1 auto;\n  }\n  label.row input[type=\"number\"] {\n    flex-basis: 32px;\n  }\n  div input[type=\"checkbox\"] {\n    flex: 0 0 20px;\n  }\n  form footer > * {\n    position: relative;\n    left: 8px;\n  }\n</style>\n<form method=\"dialog\" id=\"main\">\n  <label class=\"row\" id=\"fldButtonText\">\n    <span>Aa</span>\n    <input\n      type=\"text\"\n      id=\"txtButtonText\"\n      value=\"Text\"\n      placeholder=\"Text\"\n      uxp-quiet=\"true\"\n    />\n  </label>\n  <div class=\"row break\">\n    <label class=\"row\">\n      <span>↕︎</span>\n      <input\n        type=\"number\"\n        uxp-quiet=\"true\"\n        id=\"txtV\"\n        value=\"10\"\n        placeholder=\"Vertical padding\"\n      />\n    </label>\n    <label class=\"row\">\n      <span>↔︎</span>\n      <input\n        type=\"number\"\n        uxp-quiet=\"true\"\n        id=\"txtH\"\n        value=\"10\"\n        placeholder=\"Horizontal padding\"\n      />\n    </label>\n    <div class=\"row\">\n      <input type=\"checkbox\" checked id=\"chkColor\" />\n      <label class=\"row\" id=\"fldColor\">\n        <input\n          type=\"text\"\n          uxp-quiet=\"true\"\n          id=\"txtColor\"\n          value=\"#0000FF\"\n          placeholder=\"CSS Color\"\n        />\n        <span>🎨</span>\n      </label>\n    </div>\n  </div>\n  <footer>\n    <button id=\"ok\" type=\"submit\" uxp-variant=\"cta\">Apply</button>\n  </footer>\n</form>\n`}</code></pre>\n    <p>{`{% content \"js\" %}`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`let panel;\n\nfunction create() {\n  const HTML = \\`<style>\n            .break {\n                flex-wrap: wrap;\n            }\n            label.row > * {\n                margin: 3px 0;\n            }\n            label.row > span {\n                color: #8E8E8E;\n                width: 20px;\n                text-align: right;\n                font-size: 9px;\n            }\n            label.row input {\n                flex: 1 1 auto;\n            }\n            label.row input[type=number] {\n                flex-basis: 32px;\n            }\n            div input[type=checkbox] {\n                flex: 0 0 20px;\n            }\n            form footer > * {\n                position: relative;\n                left: 8px;\n            }\n        </style>\n        <form method=\"dialog\" id=\"main\">\n        <label class=\"row\" id=\"fldButtonText\">\n            <span>Aa</span>\n            <input type=\"text\" id=\"txtButtonText\" value=\"Text\" placeholder=\"Text\" uxp-quiet=\"true\"/>\n        </label>\n        <div class=\"row break\">\n            <label class=\"row\">\n            <span>↕︎</span>\n            <input type=\"number\" uxp-quiet=\"true\" id=\"txtV\" value=\"10\" placeholder=\"Vertical padding\" />\n            </label>\n            <label class=\"row\">\n            <span>↔︎</span>\n            <input type=\"number\" uxp-quiet=\"true\" id=\"txtH\" value=\"10\" placeholder=\"Horizontal padding\" />\n            </label>\n            <div class=\"row\">\n            <input type=\"checkbox\" checked id=\"chkColor\" />\n            <label class=\"row\" id=\"fldColor\">\n                <input type=\"text\" uxp-quiet=\"true\" id=\"txtColor\" value=\"#0000FF\" placeholder=\"CSS Color\" />\n                <span>🎨</span>\n            </label>\n            </div>\n        </div>\n        <footer><button id=\"ok\" type=\"submit\" uxp-variant=\"cta\">Apply</button></footer>\n        </form>\n        \\`;\n\n  panel = document.createElement(\"div\");\n  panel.innerHTML = HTML;\n\n  return panel;\n}\n\nfunction show(event) {\n  // create panel the first time it's shown\n  if (!panel) {\n    panel = create();\n    event.node.appendChild(panel);\n  }\n}\n\nfunction hide(event) {\n  // in this example, we don't need to do anything when XD hides our panel\n}\n\nfunction update(selection, root) {\n  console.log(selection.items);\n}\n\nmodule.exports = {\n  panels: {\n    example: {\n      show,\n      hide,\n      update,\n    },\n  },\n};\n`}</code></pre>\n    <p>{`{% endtabs %}`}</p>\n    <p>{`Note: you can either reuse your panel's UI nodes, or destroy and recreate the panel each time it's closed. For examples of both approaches, see the `}<a parentName=\"p\" {...{\n        \"href\": \"./show/\"\n      }}>{`detailed documentation on the `}<inlineCode parentName=\"a\">{`show()`}</inlineCode>{` method`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"handling-selection-change\"\n    }}>{`Handling Selection Change`}</h2>\n    <p>{`As you can see in the example above, every time the user's `}<inlineCode parentName=\"p\">{`selection`}</inlineCode>{` changes, your (optional) lifecycle method `}<inlineCode parentName=\"p\">{`update`}</inlineCode>{` will trigger. You will have access to both `}<inlineCode parentName=\"p\">{`selection`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`root`}</inlineCode>{` as parameters in the function. This means that your panel can display dynamic content based on what user has selected in the document.`}</p>\n    <p>{`{% tabs sampleselection=\"Sample\", htmlselection=\"HTML\", jsselection=\"JS\" %}`}</p>\n    <p>{`{% content \"sampleselection\" %}`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"462px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"47.1875%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/uxp-xd/static/06951050670fe1493b231d4258d1d6a5/5530d/error.webp 320w\", \"/uxp-xd/static/06951050670fe1493b231d4258d1d6a5/0b6e4/error.webp 462w\"],\n            \"sizes\": \"(max-width: 462px) 100vw, 462px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/uxp-xd/static/06951050670fe1493b231d4258d1d6a5/dd4a7/error.png 320w\", \"/uxp-xd/static/06951050670fe1493b231d4258d1d6a5/a9e02/error.png 462w\"],\n            \"sizes\": \"(max-width: 462px) 100vw, 462px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/uxp-xd/static/06951050670fe1493b231d4258d1d6a5/a9e02/error.png\",\n            \"alt\": \"Error message\",\n            \"title\": \"Error message\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`{% content \"htmlselection\" %}`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<style>\n  .break {\n    flex-wrap: wrap;\n  }\n  label.row > * {\n    margin: 3px 0;\n  }\n  label.row > span {\n    color: #8e8e8e;\n    width: 20px;\n    text-align: right;\n    font-size: 9px;\n  }\n  label.row input {\n    flex: 1 1 auto;\n  }\n  label.row input[type=\"number\"] {\n    flex-basis: 32px;\n  }\n  div input[type=\"checkbox\"] {\n    flex: 0 0 20px;\n  }\n  form footer > * {\n    position: relative;\n    left: 8px;\n  }\n</style>\n<form method=\"dialog\" id=\"main\">\n  <label class=\"row\" id=\"fldButtonText\">\n    <span>Aa</span>\n    <input\n      type=\"text\"\n      id=\"txtButtonText\"\n      value=\"Text\"\n      placeholder=\"Text\"\n      uxp-quiet=\"true\"\n    />\n  </label>\n  <div class=\"row break\">\n    <label class=\"row\">\n      <span>↕︎</span>\n      <input\n        type=\"number\"\n        uxp-quiet=\"true\"\n        id=\"txtV\"\n        value=\"10\"\n        placeholder=\"Vertical padding\"\n      />\n    </label>\n    <label class=\"row\">\n      <span>↔︎</span>\n      <input\n        type=\"number\"\n        uxp-quiet=\"true\"\n        id=\"txtH\"\n        value=\"10\"\n        placeholder=\"Horizontal padding\"\n      />\n    </label>\n    <div class=\"row\">\n      <input type=\"checkbox\" checked id=\"chkColor\" />\n      <label class=\"row\" id=\"fldColor\">\n        <input\n          type=\"text\"\n          uxp-quiet=\"true\"\n          id=\"txtColor\"\n          value=\"#0000FF\"\n          placeholder=\"CSS Color\"\n        />\n        <span>🎨</span>\n      </label>\n    </div>\n  </div>\n  <footer>\n    <button id=\"ok\" type=\"submit\" uxp-variant=\"cta\">Apply</button>\n  </footer>\n</form>\n`}</code></pre>\n    <p>{`{% content \"jsselection\" %}`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`let panel;\n\nfunction create() {\n  const HTML = \\`<style>\n            .break {\n                flex-wrap: wrap;\n            }\n            label.row > * {\n                margin: 3px 0;\n            }\n            label.row > span {\n                color: #8E8E8E;\n                width: 20px;\n                text-align: right;\n                font-size: 9px;\n            }\n            label.row input {\n                flex: 1 1 auto;\n            }\n            label.row input[type=number] {\n                flex-basis: 32px;\n            }\n            div input[type=checkbox] {\n                flex: 0 0 20px;\n            }\n            form footer > * {\n                position: relative;\n                left: 8px;\n            }\n\n        </style>\n        <form method=\"dialog\" id=\"main\">\n            <label class=\"row\" id=\"fldButtonText\">\n                <span>Aa</span>\n                <input type=\"text\" id=\"txtButtonText\" value=\"Text\" placeholder=\"Text\" uxp-quiet=\"true\"/>\n            </label>\n            <div class=\"row break\">\n                <label class=\"row\">\n                    <span>↕︎</span>\n                    <input type=\"number\" uxp-quiet=\"true\" id=\"txtV\" value=\"10\" placeholder=\"Vertical padding\" />\n                </label>\n                <label class=\"row\">\n                    <span>↔︎</span>\n                    <input type=\"number\" uxp-quiet=\"true\" id=\"txtH\" value=\"10\" placeholder=\"Horizontal padding\" />\n                </label>\n                <div class=\"row\">\n                    <input type=\"checkbox\" checked id=\"chkColor\" />\n                    <label class=\"row\" id=\"fldColor\">\n                        <input type=\"text\" uxp-quiet=\"true\" id=\"txtColor\" value=\"#0000FF\" placeholder=\"CSS Color\" />\n                        <span>🎨</span>\n                    </label>\n                </div>\n            </div>\n            <footer><button id=\"ok\" type=\"submit\" uxp-variant=\"cta\">Apply</button></footer>\n        </form>\n        \\`;\n\n  panel = document.createElement(\"div\");\n  panel.innerHTML = HTML;\n\n  return panel;\n}\n\nfunction show(event) {\n  // create panel the first time it's shown\n  if (!panel) {\n    panel = create();\n    event.node.appendChild(panel);\n  }\n}\n\nfunction hide(event) {\n  // in this example, we don't need to do anything when XD hides our panel\n}\n\nfunction update(selection, root) {\n  const { Text } = require(\"scenegraph\");\n  if (!(selection.items[0] instanceof Text)) {\n    panel.innerHTML = \\`<p>Please select a text object.</p>\\`;\n  }\n}\n\nmodule.exports = {\n  panels: {\n    example: {\n      show,\n      hide,\n      update,\n    },\n  },\n};\n`}</code></pre>\n    <p>{`{% endtabs %}`}</p>\n    <h2 {...{\n      \"id\": \"further-reading\"\n    }}>{`Further Reading`}</h2>\n    <p>{`Refer to the panel lifecycle method documentation to learn more about these methods:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./show/\"\n        }}>{`Show`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./hide/\"\n        }}>{`Hide`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./update/\"\n        }}>{`Update`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}