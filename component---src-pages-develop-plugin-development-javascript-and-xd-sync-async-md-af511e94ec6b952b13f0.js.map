{"version":3,"file":"component---src-pages-develop-plugin-development-javascript-and-xd-sync-async-md-af511e94ec6b952b13f0.js","mappings":"wQAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,MACE,GAAM,kBAAgB,mBAExBA,EAAAA,EAAAA,KAAA,oGAA8FA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KAAG,QAAc,SAASH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KAAG,SAAe,OACxKH,EAAAA,EAAAA,KAAA,qGACAA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,SAAmB,yKAC5CH,EAAAA,EAAAA,KAAA,MACE,GAAM,oBAAkB,qBAE1BA,EAAAA,EAAAA,KAAA,kFACAA,EAAAA,EAAAA,KAAA,gCACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,eAAa,qIAM9BH,EAAAA,EAAAA,KAAA,MACE,GAAM,qBAAmB,sBAE3BA,EAAAA,EAAAA,KAAA,qCAA+BA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KAAG,gBAAsB,gLACvEH,EAAAA,EAAAA,KAAA,qCAA+BA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACzC,KAAQ,gDAA8C,gBACjC,yBACzBH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,eAAa,wJAO9BH,EAAAA,EAAAA,KAAA,gEACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,eAAa,wIAM9BH,EAAAA,EAAAA,KAAA,2DAGJ,CAEAN,EAAWU,gBAAiB,C","sources":["webpack://uxp-xd/./src/pages/develop/plugin-development/javascript-and-xd/sync-async.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"sync-and-async\"\n    }}>{`Sync and Async`}</h1>\n    <p>{`XD plugin APIs support both synchronous and asynchronous code (commonly referred to as `}<em parentName=\"p\">{`sync`}</em>{` and `}<em parentName=\"p\">{`async`}</em>{`).`}</p>\n    <p>{`Below, we'll talk a little about the difference, and what it means for your XD plugins.`}</p>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` \"Sync vs async\" is a topic frequently covered in JavaScript tutorials and articles around the web. For a broader introduction, consult your favorite search engine.`}</p>\n    <h2 {...{\n      \"id\": \"synchronous-code\"\n    }}>{`Synchronous code`}</h2>\n    <p>{`When you write synchronous code, your code is executed line by line.`}</p>\n    <p>{`Here's an example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const newElement = new Rectangle();\nnewElement.width = 100;\nnewElement.height = 50;\nnewElement.fill = new Color(\"Purple\");\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"asynchronous-code\"\n    }}>{`Asynchronous code`}</h2>\n    <p>{`XD plugins also support `}<em parentName=\"p\">{`asynchronous`}</em>{` code with both Promises and async/await. Some XD plugin APIs are asynchronous in nature. You can also create your own Promises as you would in any JavaScript environment.`}</p>\n    <p>{`Here's an example using `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/uxp/storage-index/\"\n      }}>{`the File API`}</a>{` and Promise syntax:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`function sayHello(selection, documentRoot) {\n  return fs.getFileForSaving().then((file) => {\n    return file.write(\"Hello, world!\");\n  });\n}\n`}</code></pre>\n    <p>{`Here's that same example using async/await syntax:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`async function sayHello(selection, documentRoot) {\n  let file = await fs.getFileForSaving();\n  file.write(\"Hello, world!\");\n}\n`}</code></pre>\n    <p>{`We recommend async/await syntax over Promises.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}