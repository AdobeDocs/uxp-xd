"use strict";(self.webpackChunkuxp_xd=self.webpackChunkuxp_xd||[]).push([[2265],{95577:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return i},default:function(){return p}});var a=n(87462),r=n(63366),o=(n(15007),n(64983)),s=n(91515),l=["components"],i={},d={_frontmatter:i},u=s.Z;function p(e){var t=e.components,n=(0,r.Z)(e,l);return(0,o.mdx)(u,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"storage"},"Storage"),(0,o.mdx)("h1",{id:"using-the-file-api"},"Using the File API"),(0,o.mdx)("p",null,"XD provides a simple, cross-platform API surface that makes it easy to read and write text and binary files. Three key things to note:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},"Instead of working with string paths, you work with File and Folder objects."),(0,o.mdx)("li",{parentName:"ul"},"Access to the user's files requires showing a file picker UI, but you can access temporary files and any files packaged inside your plugin without needing any user interaction. If you have a File/Folder object, then you have access to the corresponding item on disk."),(0,o.mdx)("li",{parentName:"ul"},"File APIs are asynchronous, returning Promises which you can use with ",(0,o.mdx)("inlineCode",{parentName:"li"},"then()")," or the ",(0,o.mdx)("inlineCode",{parentName:"li"},"async"),"/",(0,o.mdx)("inlineCode",{parentName:"li"},"await")," keywords.")),(0,o.mdx)("h2",{id:"getting-access-to-the-local-file-system"},"Getting access to the local file system"),(0,o.mdx)("p",null,"Start using the file system APIs by obtaining a ",(0,o.mdx)("a",{parentName:"p",href:"/uxp-xd/develop/reference/uxp/module/storage/#filesystemprovider"},"FileSystemProvider")," object (shortened to ",(0,o.mdx)("inlineCode",{parentName:"p"},"fs")," in the code here):"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-js"},'const fs = require("uxp").storage.localFileSystem;\n')),(0,o.mdx)("p",null,"You can use the ",(0,o.mdx)("inlineCode",{parentName:"p"},"fs")," object to access a temporary folder or your plugin's own folder immediately, or request access to user folders by showing a file picker:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-js"},'// These require no user interaction:\nconst tempFolder = await fs.getTemporaryFolder();\nconst pluginFolder = await fs.getPluginFolder(); // read-only access to the plugin\'s install folder\nconst pluginDataFolder = await fs.getDataFolder(); // folder to store settings\n\n// Display file/folder picker UI to access user files:\nconst userFolder = await fs.getFolder(); // folder picker\nconst aFile = await fs.getFileForOpening(); // "Open" file picker, suitable for reading contents\nconst anotherFile = await fs.getFileForSaving("hello.txt"); // "Save" file picker, suitable for writing contents\n')),(0,o.mdx)("p",null,"If you have a ",(0,o.mdx)("a",{parentName:"p",href:"/uxp-xd/develop/reference/uxp/module/storage/#folder"},"Folder"),", you can use ",(0,o.mdx)("a",{parentName:"p",href:"/uxp-xd/develop/reference/uxp/module/storage/#folder-getentries"},(0,o.mdx)("inlineCode",{parentName:"a"},"getEntries()"))," to enumerate the folder's contents:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-js"},"const entries = await folder.getEntries();\nentries.forEach((entry) => console.log(entry.name));\n")),(0,o.mdx)("p",null,"If you have a ",(0,o.mdx)("a",{parentName:"p",href:"/uxp-xd/develop/reference/uxp/module/storage/#file"},"File"),", you can read and write its contents like so:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-js"},"const contents = await aFile.read();\nawait anotherFile.write(contents);\n")),(0,o.mdx)("p",null,"You can create new files inside a folder you have access to:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-js"},'const newFile = await folder.createFile("examples.txt", { overwrite: true });\nnewFile.write("Hello, world!");\n')),(0,o.mdx)("p",null,"See the ",(0,o.mdx)("a",{parentName:"p",href:"/uxp-xd/develop/reference/uxp/module/storage/"},"full reference"),"."))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-develop-reference-uxp-storage-index-md-8b7ef35fc63c0e075c31.js.map