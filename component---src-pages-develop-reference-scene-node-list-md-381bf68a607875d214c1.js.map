{"version":3,"sources":["webpack:///./src/pages/develop/reference/SceneNodeList.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","name","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-develop-reference-scene-node-list-md-381bf68a607875d214c1.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <a name=\"SceneNodeList\"></a>\n    <h2 {...{\n      \"id\": \"scenenodelist\"\n    }}>{`SceneNodeList`}</h2>\n    <p>{`Represents the children of a scenenode. Typically accessed via the `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/reference/scenegraph/#SceneNode-children\"\n      }}>{`SceneNode.children`}</a>{` property.`}</p>\n    <p>{`This is `}<em parentName=\"p\">{`not an Array`}</em>{`, so you must use `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList-at\"\n      }}><inlineCode parentName=\"a\">{`at(i)`}</inlineCode></a>{` instead of `}<inlineCode parentName=\"p\">{`[i]`}</inlineCode>{` to access children by index. It has a\nnumber of Array-like methods such as `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList-forEach\"\n      }}>{`forEach`}</a>{` for convenience, however. For best performance, iterate\nthe list using these methods rather than repeatedly calling `}<inlineCode parentName=\"p\">{`at()`}</inlineCode>{`.`}</p>\n    <p>{`Items in this list are ordered from lowest z order to highest.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: class  `}</p>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`let node = ...;\nconsole.log(\"Node has \" + node.children.length + \" children\");\nconsole.log(\"First child: \" + node.children.at(0));  // do not use \\`[0]\\` - it will not work!\nnode.children.forEach(function (childNode, i) {\n    ...\n});\n`}</code></pre>\n    <p><strong parentName=\"p\">{`See`}</strong>{`: `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/reference/scenegraph/#SceneNode-children\"\n      }}>{`SceneNode.children`}</a>{`  `}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#SceneNodeList\"\n        }}>{`SceneNodeList`}</a>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#SceneNodeList-length\"\n            }}>{`.length`}</a>{` : `}<inlineCode parentName=\"li\">{`number`}</inlineCode></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#SceneNodeList-forEach\"\n            }}>{`.forEach(callback, thisArg)`}</a>{` ⇒ `}<inlineCode parentName=\"li\">{`void`}</inlineCode></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#SceneNodeList-forEachRight\"\n            }}>{`.forEachRight(callback, thisArg)`}</a>{` ⇒ `}<inlineCode parentName=\"li\">{`void`}</inlineCode></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#SceneNodeList-filter\"\n            }}>{`.filter(callback, thisArg)`}</a>{` ⇒ `}<inlineCode parentName=\"li\">{`Array.&lt;!SceneNode&gt;`}</inlineCode></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#SceneNodeList-map\"\n            }}>{`.map(callback, thisArg)`}</a>{` ⇒ `}<inlineCode parentName=\"li\">{`Array.&lt;\\\\*&gt;`}</inlineCode></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#SceneNodeList-some\"\n            }}>{`.some(callback, thisArg)`}</a>{` ⇒ `}<inlineCode parentName=\"li\">{`boolean`}</inlineCode></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#SceneNodeList-at\"\n            }}>{`.at()`}</a>{` ⇒ `}<inlineCode parentName=\"li\">{`SceneNode`}</inlineCode></li>\n        </ul>\n      </li>\n    </ul>\n    <hr></hr>\n    <a name=\"SceneNodeList-length\"></a>\n    <h3 {...{\n      \"id\": \"scenenodelistlength--number\"\n    }}>{`sceneNodeList.length : `}<inlineCode parentName=\"h3\">{`number`}</inlineCode></h3>\n    <p>{`Number of children in the list.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance property of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}><inlineCode parentName=\"a\">{`SceneNodeList`}</inlineCode></a><br parentName=\"p\"></br>{`\n`}<strong parentName=\"p\">{`Read only`}</strong>{`: true  `}</p>\n    <hr></hr>\n    <a name=\"SceneNodeList-forEach\"></a>\n    <h3 {...{\n      \"id\": \"scenenodelistforeachcallback-thisarg-⇒-void\"\n    }}>{`sceneNodeList.forEach(callback, thisArg) ⇒ `}<inlineCode parentName=\"h3\">{`void`}</inlineCode></h3>\n    <p>{`Iterate all children in the list.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance method of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}><inlineCode parentName=\"a\">{`SceneNodeList`}</inlineCode></a>{`  `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`callback`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`!function(!SceneNode, number)`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Callback, passed each child node and its index.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`thisArg`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`?Object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional value for `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` when executing the callback.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <hr></hr>\n    <a name=\"SceneNodeList-forEachRight\"></a>\n    <h3 {...{\n      \"id\": \"scenenodelistforeachrightcallback-thisarg-⇒-void\"\n    }}>{`sceneNodeList.forEachRight(callback, thisArg) ⇒ `}<inlineCode parentName=\"h3\">{`void`}</inlineCode></h3>\n    <p>{`Iterate all children in the list, in reverse order (highest z order to lowest).`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance method of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}><inlineCode parentName=\"a\">{`SceneNodeList`}</inlineCode></a>{`  `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`callback`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`!function(!SceneNode, number)`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Callback, passed each child node and its index.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`thisArg`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`?Object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional value for `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` when executing the callback.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <hr></hr>\n    <a name=\"SceneNodeList-filter\"></a>\n    <h3 {...{\n      \"id\": \"scenenodelistfiltercallback-thisarg-⇒-arrayltscenenodegt\"\n    }}>{`sceneNodeList.filter(callback, thisArg) ⇒ `}<inlineCode parentName=\"h3\">{`Array.&lt;!SceneNode&gt;`}</inlineCode></h3>\n    <p>{`Iterates all children and returns an array of just the children that passed the filter function's test.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance method of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}><inlineCode parentName=\"a\">{`SceneNodeList`}</inlineCode></a>{`  `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`callback`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`!function(!SceneNode, number): boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Filter function, passed each child node and its index.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`thisArg`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`?Object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional value for `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` when executing the callback.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <hr></hr>\n    <a name=\"SceneNodeList-map\"></a>\n    <h3 {...{\n      \"id\": \"scenenodelistmapcallback-thisarg-⇒-arrayltgt\"\n    }}>{`sceneNodeList.map(callback, thisArg) ⇒ `}<inlineCode parentName=\"h3\">{`Array.&lt;\\\\*&gt;`}</inlineCode></h3>\n    <p>{`Iterates all children and returns an array of the map function's result value for each child node.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance method of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}><inlineCode parentName=\"a\">{`SceneNodeList`}</inlineCode></a>{`  `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`callback`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`!function(!SceneNode, number): *`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Map function, passed each child node and its index.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`thisArg`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`?Object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional value for `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` when executing the callback.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <hr></hr>\n    <a name=\"SceneNodeList-some\"></a>\n    <h3 {...{\n      \"id\": \"scenenodelistsomecallback-thisarg-⇒-boolean\"\n    }}>{`sceneNodeList.some(callback, thisArg) ⇒ `}<inlineCode parentName=\"h3\">{`boolean`}</inlineCode></h3>\n    <p>{`Iterates children until the test returns true for at least one child.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance method of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}><inlineCode parentName=\"a\">{`SceneNodeList`}</inlineCode></a><br parentName=\"p\"></br>{`\n`}<strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`boolean`}</inlineCode>{` - True if the test function returned true for at least one child.  `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`callback`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`!function(!SceneNode, number): boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Test function, passed each child node and its index.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`thisArg`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`?Object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional value for `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` when executing the callback.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <hr></hr>\n    <a name=\"SceneNodeList-at\"></a>\n    <h3 {...{\n      \"id\": \"scenenodelistat-⇒-scenenode\"\n    }}>{`sceneNodeList.at() ⇒ `}<inlineCode parentName=\"h3\">{`SceneNode`}</inlineCode></h3>\n    <p>{`Note: calling `}<inlineCode parentName=\"p\">{`at()`}</inlineCode>{` repeatedly (e.g. in a `}<inlineCode parentName=\"p\">{`for`}</inlineCode>{` loop) is not as fast as using SceneNodeList's iteration methods such as `}<inlineCode parentName=\"p\">{`forEach()`}</inlineCode>{`,\n`}<inlineCode parentName=\"p\">{`some()`}</inlineCode>{`, or `}<inlineCode parentName=\"p\">{`map()`}</inlineCode>{`.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance method of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}><inlineCode parentName=\"a\">{`SceneNodeList`}</inlineCode></a><br parentName=\"p\"></br>{`\n`}<strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`?SceneNode`}</inlineCode>{` - Child node at the specified index in the list, or null if index is out of bounds.  `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`index`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <hr></hr>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}