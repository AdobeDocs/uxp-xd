{"version":3,"file":"component---src-pages-develop-tutorials-how-to-export-a-rendition-index-md-93d197b5c1175d3b7f15.js","mappings":"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","sources":["webpack://uxp-xd/./src/pages/develop/tutorials/how-to-export-a-rendition/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"how-to-export-a-rendition\"\n    }}>{`How to export a rendition`}</h1>\n    <p>{`This sample describes how an XD plugin can invoke the default folder picker and generate a rendition of the selected artboard for export.`}</p>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Basic knowledge of HTML, CSS, and JavaScript.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/uxp-xd/develop/tutorials/quick-start/\"\n        }}>{`Quick Start Tutorial`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/uxp-xd/develop/tutorials/debugging/\"\n        }}>{`Debugging Tutorial`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"development-steps\"\n    }}>{`Development Steps`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Info`}</strong>{`\nComplete code for this plugin can be found `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/AdobeXD/Plugin-Samples/tree/master/how-to-export-a-rendition\"\n        }}>{`on GitHub`}</a>{`.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"1-prepare-your-plugin-scaffold\"\n    }}>{`1. Prepare your plugin scaffold`}</h3>\n    <p>{`First, edit the manifest file for the plugin you created in our `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/tutorials/quick-start\"\n      }}>{`Quick Start Tutorial`}</a>{`.`}</p>\n    <p>{`Replace the `}<inlineCode parentName=\"p\">{`uiEntryPoints`}</inlineCode>{` field of the manifest with the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"uiEntryPoints\": [\n    {\n        \"type\": \"menu\",\n        \"label\": \"Export Rendition\",\n        \"commandId\": \"exportRendition\"\n    }\n]\n`}</code></pre>\n    <p>{`If you're curious about what each entry means, `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/plugin-development/plugin-structure/manifest/\"\n      }}>{`see the manifest documentation`}</a>{`, where you can also learn about all manifest requirements for a plugin to be published in the XD Plugin Manager.`}</p>\n    <p>{`Then, update your `}<inlineCode parentName=\"p\">{`main.js`}</inlineCode>{` file, mapping the manifest's `}<inlineCode parentName=\"p\">{`commandId`}</inlineCode>{` to a handler function.`}</p>\n    <p>{`Replace the content of your `}<inlineCode parentName=\"p\">{`main.js`}</inlineCode>{` file with the following code:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`async function exportRendition(selection) {\n  if (selection.items.length > 0) {\n    // The body of this function is added later\n  }\n}\n\nmodule.exports = {\n  commands: {\n    exportRendition,\n  },\n};\n`}</code></pre>\n    <p>{`A couple of notes about the handler function shell above:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`This function will run `}<em parentName=\"li\">{`asynchronously`}</em>{`, as indicated by the `}<inlineCode parentName=\"li\">{`async`}</inlineCode>{` keyword at the beginning of the line. To learn more about what this means, see `}<a parentName=\"li\" {...{\n          \"href\": \"/uxp-xd/develop/plugin-development/javascript-and-xd/sync-async/\"\n        }}>{`our document on sync and async support`}</a>{`.`}</li>\n      <li parentName=\"ol\">{`Since this plugin will require user to select an object, we use an `}<inlineCode parentName=\"li\">{`if`}</inlineCode>{` statement to check if there is an XD object selected.`}</li>\n    </ol>\n    <p>{`The remaining steps in this tutorial describe additional edits to the `}<inlineCode parentName=\"p\">{`main.js`}</inlineCode>{` file.`}</p>\n    <h3 {...{\n      \"id\": \"2-require-in-xd-api-dependencies\"\n    }}>{`2. Require in XD API dependencies`}</h3>\n    <p>{`For this tutorial, we just need access to one XD module and one UXP class.`}</p>\n    <p>{`Add the following lines to the top of your `}<inlineCode parentName=\"p\">{`main.js`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// Add this to the top of your main.js file\nconst application = require(\"application\");\nconst fs = require(\"uxp\").storage.localFileSystem;\n`}</code></pre>\n    <p>{`Now the `}<inlineCode parentName=\"p\">{`application`}</inlineCode>{` module and `}<inlineCode parentName=\"p\">{`localFileSystem`}</inlineCode>{` class are required in and ready to be used. These modules are required to invoke the folder picker and export renditions.`}</p>\n    <h3 {...{\n      \"id\": \"3-invoke-the-folder-picker\"\n    }}>{`3. Invoke the folder picker`}</h3>\n    <p>{`Here, we'll use `}<inlineCode parentName=\"p\">{`uxp.storage.localFileSystem`}</inlineCode>{` (our `}<inlineCode parentName=\"p\">{`fs`}</inlineCode>{` constant) to invoke the folder picker:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const folder = await fs.getFolder();\nconst file = await folder.createFile(\"rendition.png\");\n`}</code></pre>\n    <p>{`This will invoke the default folder picker for user to choose the save directory and create a file named `}<inlineCode parentName=\"p\">{`rendition.png`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"4-define-your-rendition-settings\"\n    }}>{`4. Define your rendition settings`}</h3>\n    <p>{`Next, we'll define the settings for our desired renditions.`}</p>\n    <p>{`Note the data structure in the code below: an array of objects (in this case, one object).`}</p>\n    <p>{`Each of the numbered comments are explained below the code:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`let renditionSettings = [\n  {\n    node: selection.items[0], // [1]\n    outputFile: file, // [2]\n    type: application.RenditionType.PNG, // [3]\n    scale: 2, // [4]\n  },\n];\n`}</code></pre>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`selection.items[0]`}</inlineCode>{` refers to the first user-selected item in the document`}</li>\n      <li parentName=\"ol\">{`Set the `}<inlineCode parentName=\"li\">{`outputFile`}</inlineCode>{` property to the `}<inlineCode parentName=\"li\">{`file`}</inlineCode>{` constant we created in step #3`}</li>\n      <li parentName=\"ol\">{`Set the `}<inlineCode parentName=\"li\">{`type`}</inlineCode>{` property to `}<inlineCode parentName=\"li\">{`application.RenditionType.PNG`}</inlineCode></li>\n      <li parentName=\"ol\">{`Set the desired scale of the exported rendition`}</li>\n    </ol>\n    <p>{`We'll use this data structure containing our settings in the next step.`}</p>\n    <h3 {...{\n      \"id\": \"5-create-renditions\"\n    }}>{`5. Create renditions`}</h3>\n    <p>{`This is where we attempt to create the renditions:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`application\n  .createRenditions(renditionSettings) // [1]\n  .then((results) => {\n    // [2]\n    console.log(\n      \\`PNG rendition has been saved at \\${results[0].outputFile.nativePath}\\`\n    );\n  })\n  .catch((error) => {\n    // [3]\n    console.log(error);\n  });\n`}</code></pre>\n    <ol>\n      <li parentName=\"ol\">{`The `}<inlineCode parentName=\"li\">{`application#createRenditions`}</inlineCode>{` method accepts as an argument the `}<inlineCode parentName=\"li\">{`renditionSettings`}</inlineCode>{` data structure that we created in step #4.`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`createRenditions`}</inlineCode>{` returns a Promise. We log success to the developer console.`}</li>\n      <li parentName=\"ol\">{`Any errors will land in `}<inlineCode parentName=\"li\">{`.catch`}</inlineCode>{`, which we also log to the developer console.`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"6-run-the-plugin\"\n    }}>{`6. Run the plugin`}</h3>\n    <p>{`After saving all of your changes, reload the plugin in XD. Make sure to select an artboard and run the plugin command.`}</p>\n    <p>{`You should see a folder picker like this one:`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"87.5%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/uxp-xd/static/3a2546acc11cbbba17f822289240a2c3/5530d/export-rendition-pick-file.webp 320w\", \"/uxp-xd/static/3a2546acc11cbbba17f822289240a2c3/0c8fb/export-rendition-pick-file.webp 640w\", \"/uxp-xd/static/3a2546acc11cbbba17f822289240a2c3/94b1e/export-rendition-pick-file.webp 1280w\", \"/uxp-xd/static/3a2546acc11cbbba17f822289240a2c3/38bbb/export-rendition-pick-file.webp 1546w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/uxp-xd/static/3a2546acc11cbbba17f822289240a2c3/dd4a7/export-rendition-pick-file.png 320w\", \"/uxp-xd/static/3a2546acc11cbbba17f822289240a2c3/0f09e/export-rendition-pick-file.png 640w\", \"/uxp-xd/static/3a2546acc11cbbba17f822289240a2c3/bbbf7/export-rendition-pick-file.png 1280w\", \"/uxp-xd/static/3a2546acc11cbbba17f822289240a2c3/1855e/export-rendition-pick-file.png 1546w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/uxp-xd/static/3a2546acc11cbbba17f822289240a2c3/bbbf7/export-rendition-pick-file.png\",\n            \"alt\": \"System folder picker screen\",\n            \"title\": \"System folder picker screen\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`The rendition will be saved at the specified location.`}</p>\n    <p>{`Open the developer console to see your success or error message from the previous step.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}