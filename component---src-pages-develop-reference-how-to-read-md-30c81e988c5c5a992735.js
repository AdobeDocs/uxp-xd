"use strict";(self.webpackChunkuxp_xd=self.webpackChunkuxp_xd||[]).push([[6180],{81707:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return l},default:function(){return x}});var a=n(87462),d=n(63366),r=(n(15007),n(64983)),m=n(91515),i=["components"],l={},o={_frontmatter:l},p=m.Z;function x(e){var t=e.components,n=(0,d.Z)(e,i);return(0,r.mdx)(p,(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"how-to-read-the-reference-documentation"},"How to read the reference documentation"),(0,r.mdx)("p",null,"Please take a moment to familiarize yourself with the types of symbols you'll see throughout the technical documentation."),(0,r.mdx)("h2",{id:"type-annotations"},"Type Annotations"),(0,r.mdx)("p",null,"This shorthand is used to indicate the types of arguments, return values, and object properties."),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Annotation"),(0,r.mdx)("th",{parentName:"tr",align:null},"Meaning"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"[day]")),(0,r.mdx)("td",{parentName:"tr",align:null},"The parameter is optional. If it is not supplied, it will be ",(0,r.mdx)("inlineCode",{parentName:"td"},"undefined"),".")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},'[day="Monday"]')),(0,r.mdx)("td",{parentName:"tr",align:null},"The parameter is optional, but will be supplied a default value if not provided.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"?Array")),(0,r.mdx)("td",{parentName:"tr",align:null},"Type can be an Array OR ",(0,r.mdx)("inlineCode",{parentName:"td"},"null"),".")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"!Array")),(0,r.mdx)("td",{parentName:"tr",align:null},"Type must be an Array; ",(0,r.mdx)("em",{parentName:"td"},"cannot")," be ",(0,r.mdx)("inlineCode",{parentName:"td"},"null"),". Primitive types (",(0,r.mdx)("inlineCode",{parentName:"td"},"string"),", ",(0,r.mdx)("inlineCode",{parentName:"td"},"number"),", ",(0,r.mdx)("inlineCode",{parentName:"td"},"boolean"),") imply ",(0,r.mdx)("inlineCode",{parentName:"td"},"!")," unless explicitly denoted otherwise with ",(0,r.mdx)("inlineCode",{parentName:"td"},"?"),".")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"`string"),(0,r.mdx)("td",{parentName:"tr",align:null},"number`")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"{foo:number, bar:string}")),(0,r.mdx)("td",{parentName:"tr",align:null},"Type is an object with two properties: ",(0,r.mdx)("inlineCode",{parentName:"td"},"foo"),", which is type ",(0,r.mdx)("inlineCode",{parentName:"td"},"number"),"; and ",(0,r.mdx)("inlineCode",{parentName:"td"},"bar"),", which is type ",(0,r.mdx)("inlineCode",{parentName:"td"},"string"),".")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"string[]")),(0,r.mdx)("td",{parentName:"tr",align:null},"Type is an array of strings.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"Array<string>")),(0,r.mdx)("td",{parentName:"tr",align:null},"Type is an array of strings.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"Promise<string>")),(0,r.mdx)("td",{parentName:"tr",align:null},"Type is a Promise that is asynchronously fulfilled with a string.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"*")),(0,r.mdx)("td",{parentName:"tr",align:null},"Can be any type. ",(0,r.mdx)("strong",{parentName:"td"},"NOTE:")," In this early stage, ",(0,r.mdx)("inlineCode",{parentName:"td"},"*")," is sometimes used as a placeholder for incomplete documentation.")))))}x.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-develop-reference-how-to-read-md-30c81e988c5c5a992735.js.map