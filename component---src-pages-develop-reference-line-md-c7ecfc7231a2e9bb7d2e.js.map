{"version":3,"file":"component---src-pages-develop-reference-line-md-c7ecfc7231a2e9bb7d2e.js","mappings":"kQAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGC,GAAK,YAER,OAAO,SAACJ,GAAS,UAAKD,EAAiBK,EAAK,CAAED,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,QAAM,SAEd,mBAAG,mBAAQC,WAAW,KAAG,QAAkB,aAC7C,mBAAQA,WAAW,KAAG,WAAqB,MAAM,cAAGA,WAAW,IACzD,KAAQ,yCAAuC,iBAEnD,6EACA,eACE,GAAM,SAAO,UAEf,wBAAS,mBAAQA,WAAW,KAAG,SAAmB,MAAM,cAAGA,WAAW,IAClE,KAAQ,uDAAqD,WAEjE,wGAAyF,cAAGA,WAAW,IACnG,KAAQ,gBAAc,eACF,MACxB,mBAAG,mBAAQA,WAAW,KAAG,QAAkB,2BAA2B,cAAGA,WAAW,IAChF,KAAQ,SAAO,QACF,MACnB,mBAAQA,WAAW,KAAG,aAAuB,WAC3C,eACE,GAAM,OAAK,QAEb,wBAAS,mBAAQA,WAAW,KAAG,OAAiB,MAAM,cAAGA,WAAW,IAChE,KAAQ,uDAAqD,WAEjE,kGAAmF,cAAGA,WAAW,IAC7F,KAAQ,gBAAc,eACF,MACxB,mBAAG,mBAAQA,WAAW,KAAG,QAAkB,2BAA2B,cAAGA,WAAW,IAChF,KAAQ,SAAO,QACF,MACnB,mBAAQA,WAAW,KAAG,aAAuB,WAC3C,eACE,GAAM,eAAa,kBAErB,wBAAS,mBAAQA,WAAW,KAAG,eAAyB,KAAK,uBAAYA,WAAW,KAAG,UAAwB,MAAM,uBAAYA,WAAW,KAAG,UAAwB,MAAM,uBAAYA,WAAW,KAAG,QAAsB,MAAM,uBAAYA,WAAW,KAAG,QAAsB,MACnR,mXAGA,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MAAI,UAEf,eAAIA,WAAW,KACb,MAAS,MAAI,WAInB,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MAAI,WAEf,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAI,aAEhC,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MAAI,WAEf,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAI,aAEhC,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MAAI,SAEf,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAI,aAEhC,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MAAI,SAEf,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAI,eAIpC,mBAAG,mBAAQA,WAAW,KAAG,QAAkB,yBAAyB,cAAGA,WAAW,IAC9E,KAAQ,SAAO,SAIvB,CAEAJ,EAAWK,gBAAiB,C","sources":["webpack://uxp-xd/./src/pages/develop/reference/Line.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"line\"\n    }}>{`Line`}</h1>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: class\n`}<strong parentName=\"p\">{`Extends`}</strong>{`: `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/GraphicNode\"\n      }}>{`GraphicNode`}</a></p>\n    <p>{`Line leaf node shape. Lines have a stroke but no fill.`}</p>\n    <h2 {...{\n      \"id\": \"start\"\n    }}>{`start`}</h2>\n    <p>{`▸ `}<strong parentName=\"p\">{`start`}</strong>{`: `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/scenegraph/#typedef-point\"\n      }}>{`Point`}</a></p>\n    <p>{`Start point of the Line in local coordinate space. To change the start point, use `}<a parentName=\"p\" {...{\n        \"href\": \"#setstartend\"\n      }}>{`setStartEnd`}</a>{`.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance property of `}<a parentName=\"p\" {...{\n        \"href\": \"#line\"\n      }}>{`Line`}</a>{`\n`}<strong parentName=\"p\">{`Read only`}</strong>{`: true`}</p>\n    <h2 {...{\n      \"id\": \"end\"\n    }}>{`end`}</h2>\n    <p>{`▸ `}<strong parentName=\"p\">{`end`}</strong>{`: `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/scenegraph/#typedef-point\"\n      }}>{`Point`}</a></p>\n    <p>{`Endpoint of the Line in local coordinate space. To change the endpoint, use `}<a parentName=\"p\" {...{\n        \"href\": \"#setstartend\"\n      }}>{`setStartEnd`}</a>{`.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance property of `}<a parentName=\"p\" {...{\n        \"href\": \"#line\"\n      }}>{`Line`}</a>{`\n`}<strong parentName=\"p\">{`Read only`}</strong>{`: true`}</p>\n    <h2 {...{\n      \"id\": \"setstartend\"\n    }}>{`setStartEnd()`}</h2>\n    <p>{`▸ `}<strong parentName=\"p\">{`setStartEnd`}</strong>{`(`}<inlineCode parentName=\"p\">{`startX`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`startY`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`endX`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`endY`}</inlineCode>{`)`}</p>\n    <p>{`Set the start and end points of the Line in local coordinate space. The values may be normalized by this setter, shifting the node's\ntranslation and counter-shifting the start/end points. So the start/end getters may return values different from the values you\npassed this setter, even though the line's visual bounds and appearance are the same.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`startX`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`startY`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`endX`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`endY`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance method of `}<a parentName=\"p\" {...{\n        \"href\": \"#line\"\n      }}>{`Line`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}