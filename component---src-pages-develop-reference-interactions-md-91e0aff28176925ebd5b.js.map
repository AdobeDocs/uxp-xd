{"version":3,"file":"component---src-pages-develop-reference-interactions-md-91e0aff28176925ebd5b.js","mappings":"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","sources":["webpack://uxp-xd/./src/pages/develop/reference/interactions.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"interactions\"\n    }}>{`interactions`}</h1>\n    <p><strong parentName=\"p\">{`Since`}</strong>{`: XD 19+ (some APIs added later)`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`interactions`}</inlineCode>{` module and related APIs provide `}<em parentName=\"p\">{`read only`}</em>{` information about the document's interactive prototype mode, including:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The blue \"wires\" seen in XD's prototyping UI, known as \"interactions,\" which specify gestures/events which trigger actions to\noccur in the prototype. Accessible as a single consolidated global listing via this module's `}<a parentName=\"p\" {...{\n            \"href\": \"#allinteractions\"\n          }}>{`allInteractions`}</a>{` API,\nor you can access information from specific nodes in the scenegraph via `}<a parentName=\"p\" {...{\n            \"href\": \"/uxp-xd/develop/reference/SceneNode/#triggeredinteractions\"\n          }}>{`SceneNode.triggeredInteractions`}</a>{`\nand `}<a parentName=\"p\" {...{\n            \"href\": \"/uxp-xd/develop/reference/Artboard/#incominginteractions\"\n          }}>{`Artboard.incomingInteractions`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Designers can author multiple prototype or interaction flows in a single document and publish unique shareable links for each flow. Developers can access all document flows using the `}<a parentName=\"p\" {...{\n            \"href\": \"#flows\"\n          }}>{`flows`}</a>{` API. With multiple flow support the `}<a parentName=\"p\" {...{\n            \"href\": \"#homeartboard\"\n          }}>{`homeArtboard`}</a>{` API is being deprecated as XD no longer has a single home artboard restriction.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Properties that affect Artboard scrolling behavior: Artboard `}<a parentName=\"p\" {...{\n            \"href\": \"/uxp-xd/develop/reference/Artboard/#viewportheight\"\n          }}>{`viewportHeight`}</a>{` and\nnode `}<a parentName=\"p\" {...{\n            \"href\": \"/uxp-xd/develop/reference/SceneNode/#fixedwhenscrolling\"\n          }}>{`fixedWhenScrolling`}</a>{`.`}</p>\n      </li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Tip`}</strong>{`\nInteractions are a `}<strong parentName=\"p\">{`fast-changing area`}</strong>{` in XD. APIs here have a higher likelihood of becoming deprecated, or lagging behind new XD features, than other parts of XD's plugin APIs.`}</p>\n    </blockquote>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// Get all interactions in the entire document (grouped by triggering node)\nvar allInteractions = require(\"interactions\").allInteractions;\n\n// Get interactions triggered by the selected node\nvar nodeInteractions = selection.items[0].triggeredInteractions;\n\n// Get all interactions leading to a particular artboard\nvar artboard = ...\nvar interactionsToArtboard = artboard.incomingInteractions;\n\n// Print out details of one particular interaction\nvar interaction = ...\nconsole.log(\"Trigger: \" + interaction.trigger.type + \" -> Action: \" + interaction.action.type);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"typedefs\"\n    }}>{`Typedefs`}</h2>\n    <h3 {...{\n      \"id\": \"typedef-interaction\"\n    }}>{`Typedef Interaction`}</h3>\n    <p>{`An interaction consists of a Trigger + Action pair and is attached to a single, specific scenenode.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`trigger`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#typedef-trigger\"\n            }}>{`Trigger`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`User gesture or other event which will trigger the action.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`action`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#typedef-action\"\n            }}>{`Action`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Action that occurs.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Example:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`{\n    trigger: {\n        type: \"tap\"\n    },\n    action: {\n        type: \"goToArtboard\",\n        destination: /* Artboard node */,\n        preserveScrollPosition: false,\n        transition: {\n            type: \"dissolve\",\n            duration: 0.4,\n            easing: \"ease-out\"\n        }\n    }\n}\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Tip`}</strong>{`\nNote: Interaction objects are `}<em parentName=\"p\">{`not`}</em>{` plain JSON -- they may reference scenenodes (as seen above) and other strongly-typed objects.`}</p>\n    </blockquote>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"typedef-trigger\"\n    }}>{`Typedef Trigger`}</h3>\n    <p>{`Event which triggers an interaction.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`type`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`One of the trigger types listed below.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Tip`}</strong>{`\nNote: Additional trigger types may be added in the future. Always be sure to have a default case for unknown triggers when\nworking with Interaction objects.`}</p>\n    </blockquote>\n    <h4 {...{\n      \"id\": \"tap\"\n    }}>{`\"tap\"`}</h4>\n    <p>{`When the user clicks or taps on a scenenode.`}</p>\n    <h4 {...{\n      \"id\": \"drag\"\n    }}>{`\"drag\"`}</h4>\n    <p>{`When the user drags or swipes a scenenode. Can only trigger a `}<inlineCode parentName=\"p\">{`goToArtboard`}</inlineCode>{` action with the `}<inlineCode parentName=\"p\">{`autoAnimate`}</inlineCode>{` transition style.`}</p>\n    <h4 {...{\n      \"id\": \"time\"\n    }}>{`\"time\"`}</h4>\n    <p>{`Once a set amount of time elapses (this trigger type only exists on Artboard nodes). Additional Trigger properties:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`delay`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Delay time in ms.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h4 {...{\n      \"id\": \"voice\"\n    }}>{`\"voice\"`}</h4>\n    <p>{`When the user speaks a specific voice command. Additional Trigger properties:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`speechCommand`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Phrase the user speaks to trigger this command.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"typedef-action\"\n    }}>{`Typedef Action`}</h3>\n    <p>{`Action performed when the trigger occurs.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`type`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`One of the action types listed below.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Tip`}</strong>{`\nNote: Additional action types may be added in the future. Always be sure to have a default case for unknown actions when\nworking with Interaction objects.`}</p>\n    </blockquote>\n    <h4 {...{\n      \"id\": \"gotoartboard\"\n    }}>{`\"goToArtboard\"`}</h4>\n    <p>{`Navigate the entire screen to view a different artboard. Additional Action properties:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`destination`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"/uxp-xd/develop/reference/Artboard\"\n            }}>{`Artboard`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Artboard to navigate to.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`transition`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#typedef-transition\"\n            }}>{`Transition`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Animation style with which the view transitions from the old Artboard to the new one.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`preserveScrollPosition`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If both Artboards are `}<a parentName=\"td\" {...{\n              \"href\": \"/uxp-xd/develop/reference/Artboard/#viewportheight\"\n            }}>{`taller than the viewport`}</a>{`, attempts to keep the user's current scroll position the same as in the outgoing artboard.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h4 {...{\n      \"id\": \"overlay\"\n    }}>{`\"overlay\"`}</h4>\n    <p>{`Displays a second artboard overlaid on top of the current one. Additional Action properties:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`overlay`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"/uxp-xd/develop/reference/Artboard\"\n            }}>{`Artboard`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Artboard to show on top.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`transition`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#typedef-transition\"\n            }}>{`Transition`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Animation style in which the second Artboard transitions into view. Only certain transition types are allowed for overlays.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`overlayTopLeft`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`{x:number, y:number}`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Position of the overlay Artboard, in the current/base Artboard's coordinate space.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h4 {...{\n      \"id\": \"goback\"\n    }}>{`\"goBack\"`}</h4>\n    <p>{`Reverse the last `}<inlineCode parentName=\"p\">{`\"goToArtboard\"`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`\"overlay\"`}</inlineCode>{` action, replaying in reverse whatever transition it used.`}</p>\n    <h4 {...{\n      \"id\": \"speak\"\n    }}>{`\"speak\"`}</h4>\n    <p>{`Speak with audio output to the user. Additional Action properties:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`speechOutput`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Phrase to speak to the user.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`locale`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Locale determines the pronounciation and accent of the digital voice. Includes both language `}<em parentName=\"td\">{`and`}</em>{` region (e.g. \"en-us\").`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`voice`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"Persona\" of the digital voice to use. Available personas vary by locale.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"typedef-transition\"\n    }}>{`Typedef Transition`}</h3>\n    <p>{`Animation style with which `}<inlineCode parentName=\"p\">{`\"goToArtboard\"`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`\"overlay\"`}</inlineCode>{` actions transition from/to Artboards.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`type`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`One of: `}<inlineCode parentName=\"td\">{`\"autoAnimate\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"dissolve\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"push\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"slide\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"none\"`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`fromSide`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><em parentName=\"td\">{`(If type = \"push\" or \"slide\").`}</em>{` One of: `}<inlineCode parentName=\"td\">{`\"L\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"R\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"T\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"B\"`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`duration`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Length of animation in seconds.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`easing`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`One of: `}<inlineCode parentName=\"td\">{`\"linear\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"ease-in\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"ease-out\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"ease-in-out\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"wind-up\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"bounce\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"snap\"`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"typedef-flowinfo\"\n    }}>{`Typedef FlowInfo`}</h3>\n    <p>{`Information related to a particular flow`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`name`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Auto-generated or user-defined label for a particular flow.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`homeArtboard`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"/uxp-xd/develop/reference/Artboard\"\n            }}>{`Artboard`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Artboard from which a particular flow or a prototype experience begins.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`url`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`URL is the latest published link associated with a particular flow and can be `}<inlineCode parentName=\"td\">{`null`}</inlineCode>{` in case no link is published for that flow.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`NOTE: All `}<inlineCode parentName=\"p\">{`url`}</inlineCode>{` returned via `}<a parentName=\"p\" {...{\n        \"href\": \"#flows\"\n      }}>{`flows`}</a>{` are related to published flows and are usually a subset of the URLs returned via `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/cloud/#getsharedartifacts\"\n      }}>{`getSharedArtifacts`}</a>{`. However, the reverse may or may not always hold true.`}</p>\n    <h2 {...{\n      \"id\": \"homeartboard\"\n    }}>{`homeArtboard`}</h2>\n    <p>{`▸ homeArtboard: ?`}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/Artboard\"\n      }}>{`Artboard`}</a></p>\n    <p>{`The starting Artboard seen when the interactive prototype is launched.`}</p>\n    <p><strong parentName=\"p\">{`Deprecated`}</strong>{`: XD 33 - Please use `}<a parentName=\"p\" {...{\n        \"href\": \"#flows\"\n      }}>{`flows`}</a>{` which supports multple flows.`}</p>\n    <p><strong parentName=\"p\">{`Since`}</strong>{`: XD 32`}</p>\n    <p>{`In case there are multiple interactive prototype experiences (flows), implying multiple home artboards, this API only returns the top-left artboard among all of those home artboards.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static property of `}<a parentName=\"p\" {...{\n        \"href\": \"#module_interactions\"\n      }}>{`interactions`}</a>{`\n`}<strong parentName=\"p\">{`Read only`}</strong>{`: true`}</p>\n    <p><strong parentName=\"p\">{`See`}</strong>{`: `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/Artboard/#ishomeartboard\"\n      }}>{`Artboard.isHomeArtboard`}</a></p>\n    <h2 {...{\n      \"id\": \"flows\"\n    }}>{`flows`}</h2>\n    <p>{`▸ flows: `}<inlineCode parentName=\"p\">{`Array<`}</inlineCode><a parentName=\"p\" {...{\n        \"href\": \"#typedef-flowinfo\"\n      }}>{`FlowInfo`}</a><inlineCode parentName=\"p\">{`>`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Since`}</strong>{`: XD 33`}</p>\n    <p>{`Returns a collection of information on `}<em parentName=\"p\">{`all`}</em>{` flows across the entire document.`}</p>\n    <p>{`A `}<inlineCode parentName=\"p\">{`flow`}</inlineCode>{` is a series or set of artboards starting from one artboard (called a home artboard), which are connected to other artboards or screens via wires or interactions. A document can have zero or multiple (one or more than one) flows and can therefore have zero or multiple home artboards. Each entry in the return array represents a `}<inlineCode parentName=\"p\">{`FlowInfo`}</inlineCode>{` object.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static property of `}<a parentName=\"p\" {...{\n        \"href\": \"#module_interactions\"\n      }}>{`interactions`}</a>{`\n`}<strong parentName=\"p\">{`Read only`}</strong>{`: true`}</p>\n    <h2 {...{\n      \"id\": \"allinteractions\"\n    }}>{`allInteractions`}</h2>\n    <p>{`▸ allInteractions: `}<inlineCode parentName=\"p\">{`Array<{triggerNode:`}</inlineCode>{` `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/SceneNode\"\n      }}>{`SceneNode`}</a><inlineCode parentName=\"p\">{`, interactions: Array<`}</inlineCode><a parentName=\"p\" {...{\n        \"href\": \"#typedef-interaction\"\n      }}>{`Interaction`}</a><inlineCode parentName=\"p\">{`}>`}</inlineCode></p>\n    <p>{`Returns a collection of `}<em parentName=\"p\">{`all`}</em>{` interactions across the entire document, grouped by triggering scenenode. Each entry in this array\nspecifies a `}<inlineCode parentName=\"p\">{`triggerNode`}</inlineCode>{` and the result of getting `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/SceneNode/#triggeredinteractions\"\n      }}>{`triggerNode.triggeredInteractions`}</a>{`.`}</p>\n    <p>{`May include interactions that are impossible to trigger because the trigger node (or one of its ancestors) has `}<inlineCode parentName=\"p\">{`visible`}</inlineCode>{` = false.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Tip`}</strong>{`\nCurrently, this API excludes some types of interactions: keypress/gamepad, scrolling, hover, component state transitions, or non-speech audio playback.`}</p>\n    </blockquote>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static property of `}<a parentName=\"p\" {...{\n        \"href\": \"#module_interactions\"\n      }}>{`interactions`}</a>{`\n`}<strong parentName=\"p\">{`Read only`}</strong>{`: true`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}