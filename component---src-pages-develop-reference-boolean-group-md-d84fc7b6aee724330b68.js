"use strict";(self.webpackChunkuxp_xd=self.webpackChunkuxp_xd||[]).push([[5494],{4371:function(e,n,o){o.r(n),o.d(n,{_frontmatter:function(){return i},default:function(){return m}});var a=o(87462),t=o(45987),p=(o(15007),o(64983)),r=o(91515);const d=["components"],i={},l={_frontmatter:i},s=r.Z;function m(e){let{components:n}=e,o=(0,t.Z)(e,d);return(0,p.mdx)(s,(0,a.Z)({},l,o,{components:n,mdxType:"MDXLayout"}),(0,p.mdx)("h1",{id:"booleangroup"},"BooleanGroup"),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Kind"),": class\n",(0,p.mdx)("strong",{parentName:"p"},"Extends"),": ",(0,p.mdx)("a",{parentName:"p",href:"/uxp-xd/develop/reference/GraphicNode"},"GraphicNode")),(0,p.mdx)("p",null,"BooleanGroup container node - although it has fill/stroke/etc. properties like a leaf shape node, it is a container\nwith children. Its visual appearance is determined by generating a path via a nondestructive boolean operation on all\nits children's paths."),(0,p.mdx)("p",null,"It is not currently possible for plugins to ",(0,p.mdx)("em",{parentName:"p"},"create")," a new BooleanGroup node, aside from using ",(0,p.mdx)("a",{parentName:"p",href:"/uxp-xd/develop/reference/commands/#duplicate"},"commands.duplicate()"),"\nto clone existing BooleanGroups."),(0,p.mdx)("h2",{id:"pathop"},"pathOp"),(0,p.mdx)("p",null,"â–¸ ",(0,p.mdx)("strong",{parentName:"p"},"pathOp"),": ",(0,p.mdx)("inlineCode",{parentName:"p"},"string")),(0,p.mdx)("p",null,"Which boolean operation is used to generate the path: BooleanGroup.PATH_OP_ADD, PATH_OP_SUBTRACT, PATH_OP_INTERSECT, or PATH_OP_EXCLUDE_OVERLAP."),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,p.mdx)("a",{parentName:"p",href:"#booleangroup"},"BooleanGroup"),"\n",(0,p.mdx)("strong",{parentName:"p"},"Read only"),": true"))}m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-develop-reference-boolean-group-md-d84fc7b6aee724330b68.js.map