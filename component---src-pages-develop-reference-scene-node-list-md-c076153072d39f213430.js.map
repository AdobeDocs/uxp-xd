{"version":3,"file":"component---src-pages-develop-reference-scene-node-list-md-c076153072d39f213430.js","mappings":"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","sources":["webpack://uxp-xd/./src/pages/develop/reference/SceneNodeList.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"scenenodelist\"\n    }}>{`SceneNodeList`}</h1>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: class`}</p>\n    <p>{`Represents the children of a scenenode. Typically accessed via the `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/SceneNode/#children\"\n      }}>{`SceneNode.children`}</a>{` property.`}</p>\n    <p>{`This is `}<em parentName=\"p\">{`not an Array`}</em>{`, so you must use `}<a parentName=\"p\" {...{\n        \"href\": \"#at\"\n      }}>{`.at(i)`}</a>{` instead of `}<inlineCode parentName=\"p\">{`[i]`}</inlineCode>{` to access children by index. It has a\nnumber of Array-like methods such as `}<a parentName=\"p\" {...{\n        \"href\": \"#foreach\"\n      }}>{`forEach`}</a>{` for convenience, however. For best performance, iterate\nthe list using these methods rather than repeatedly calling `}<inlineCode parentName=\"p\">{`at()`}</inlineCode>{`.`}</p>\n    <p>{`Items in this list are ordered from lowest z order to highest.`}</p>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`let node = ...;\nconsole.log(\"Node has \" + node.children.length + \" children\");\nconsole.log(\"First child: \" + node.children.at(0));  // do not use \\`[0]\\` - it will not work!\nnode.children.forEach(function (childNode, i) {\n    ...\n});\n`}</code></pre>\n    <p><strong parentName=\"p\">{`See`}</strong>{`: `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/SceneNode/#children\"\n      }}>{`SceneNode.children`}</a></p>\n    <h2 {...{\n      \"id\": \"length\"\n    }}>{`length`}</h2>\n    <p>{`▸ `}<strong parentName=\"p\">{`length`}</strong>{`: `}<inlineCode parentName=\"p\">{`number`}</inlineCode></p>\n    <p>{`Number of children in the list.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance property of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}>{`SceneNodeList`}</a>{`\n`}<strong parentName=\"p\">{`Read only`}</strong>{`: true`}</p>\n    <h2 {...{\n      \"id\": \"foreach\"\n    }}>{`forEach()`}</h2>\n    <p>{`▸ `}<strong parentName=\"p\">{`forEach`}</strong>{`(`}<inlineCode parentName=\"p\">{`callback`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`thisArg`}</inlineCode>{`)`}</p>\n    <p>{`Iterate all children in the list.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`callback`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function(SceneNode, number)`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Callback, passed each child node and its index.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`thisArg`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`?Object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional value for `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` when executing the callback.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance method of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}>{`SceneNodeList`}</a></p>\n    <h2 {...{\n      \"id\": \"foreachright\"\n    }}>{`forEachRight()`}</h2>\n    <p>{`▸ `}<strong parentName=\"p\">{`forEachRight`}</strong>{`(`}<inlineCode parentName=\"p\">{`callback`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`thisArg`}</inlineCode>{`)`}</p>\n    <p>{`Iterate all children in the list, in reverse order (highest z order to lowest).`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`callback`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function(SceneNode, number)`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Callback, passed each child node and its index.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`thisArg`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`?Object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional value for `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` when executing the callback.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance method of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}>{`SceneNodeList`}</a></p>\n    <h2 {...{\n      \"id\": \"filter\"\n    }}>{`filter()`}</h2>\n    <p>{`▸ `}<strong parentName=\"p\">{`filter`}</strong>{`(`}<inlineCode parentName=\"p\">{`callback`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`thisArg`}</inlineCode>{`): `}<inlineCode parentName=\"p\">{`Array.<`}</inlineCode><a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/SceneNode\"\n      }}>{`SceneNode`}</a><inlineCode parentName=\"p\">{`>`}</inlineCode></p>\n    <p>{`Iterates all children and returns an array of just the children that passed the filter function's test.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`callback`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function(SceneNode, number): boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Filter function, passed each child node and its index.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`thisArg`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`?Object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional value for `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` when executing the callback.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance method of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}>{`SceneNodeList`}</a></p>\n    <h2 {...{\n      \"id\": \"map\"\n    }}>{`map()`}</h2>\n    <p>{`▸ `}<strong parentName=\"p\">{`map`}</strong>{`(`}<inlineCode parentName=\"p\">{`callback`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`thisArg`}</inlineCode>{`): `}<inlineCode parentName=\"p\">{`Array.<*>`}</inlineCode></p>\n    <p>{`Iterates all children and returns an array of the map function's result value for each child node.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`callback`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function(SceneNode, number): *`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Map function, passed each child node and its index.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`thisArg`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`?Object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional value for `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` when executing the callback.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance method of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}>{`SceneNodeList`}</a></p>\n    <h2 {...{\n      \"id\": \"some\"\n    }}>{`some()`}</h2>\n    <p>{`▸ `}<strong parentName=\"p\">{`some`}</strong>{`(`}<inlineCode parentName=\"p\">{`callback`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`thisArg`}</inlineCode>{`): `}<inlineCode parentName=\"p\">{`boolean`}</inlineCode></p>\n    <p>{`Iterates children until the test returns true for at least one child.  Returns true if the test function returned true for at least one child.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`callback`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function(SceneNode, number): boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Test function, passed each child node and its index.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`thisArg`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`?Object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional value for `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` when executing the callback.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance method of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}>{`SceneNodeList`}</a></p>\n    <h2 {...{\n      \"id\": \"at\"\n    }}>{`at()`}</h2>\n    <p>{`▸ `}<strong parentName=\"p\">{`at`}</strong>{`(`}<inlineCode parentName=\"p\">{`index`}</inlineCode>{`): `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/SceneNode\"\n      }}>{`SceneNode`}</a></p>\n    <p>{`Returns the child node at the specified index in the list, or null if index is out of bounds.`}</p>\n    <p>{`Note: calling `}<inlineCode parentName=\"p\">{`at()`}</inlineCode>{` repeatedly (e.g. in a `}<inlineCode parentName=\"p\">{`for`}</inlineCode>{` loop) is not as fast as using SceneNodeList's iteration methods such as `}<inlineCode parentName=\"p\">{`forEach()`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`some()`}</inlineCode>{`, or `}<inlineCode parentName=\"p\">{`map()`}</inlineCode>{`.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`index`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance method of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}>{`SceneNodeList`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}