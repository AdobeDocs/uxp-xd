"use strict";(self.webpackChunkuxp_xd=self.webpackChunkuxp_xd||[]).push([[7336],{29420:function(e,a,r){r.r(a),r.d(a,{_frontmatter:function(){return o},default:function(){return s}});var t=r(87462),n=r(45987),m=(r(15007),r(64983)),d=r(91515);const l=["components"],o={},i={_frontmatter:o},p=d.Z;function s(e){let{components:a}=e,r=(0,n.Z)(e,l);return(0,m.mdx)(p,(0,t.Z)({},i,r,{components:a,mdxType:"MDXLayout"}),(0,m.mdx)("a",{name:"module-storage",id:"module-storage"}),(0,m.mdx)("h2",{id:"storage"},"storage"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Category"),": uxp, io, file"),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage"},"storage"),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry"},".Entry"),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry-name"},".name")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"string")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry-provider"},".provider")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"FileSystemProvider")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry-url"},".url")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"URL")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry-nativepath"},".nativePath")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"string")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry-isentry"},".isEntry")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"boolean")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry-isfile"},".isFile")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"boolean")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry-isfolder"},".isFolder")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"boolean")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry-tostring"},".toString()")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"string")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry-copyto"},".copyTo(folder, options)")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry-moveto"},".moveTo(folder, options)")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry-delete"},".delete()")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry-getmetadata"},".getMetadata()")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise.<EntryMetadata>")))),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entrymetadata"},".EntryMetadata"),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entrymetadata-name"},".name")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"string")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entrymetadata-size"},".size")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"number")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entrymetadata-datecreated"},".dateCreated")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"Date")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entrymetadata-datemodified"},".dateModified")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"Date")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entrymetadata-isfile"},".isFile")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"boolean")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entrymetadata-isfolder"},".isFolder")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"boolean")))),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-file"},".File"),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-file-mode"},".mode")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"Symbol")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-file-read"},".read(options)")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise.<(string\\|ArrayBuffer)>")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-file-write"},".write(data, options)")))),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filesystemprovider"},".FileSystemProvider"),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filesystemprovider-getfileforopening"},".getFileForOpening(options)")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise.<?File>")," ","|"," ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise.<!Array.<File>>")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filesystemprovider-getfileforsaving"},".getFileForSaving(suggestedName, options)")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise.<?File>")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filesystemprovider-getfolder"},".getFolder()")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise.<?Folder>")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filesystemprovider-gettemporaryfolder"},".getTemporaryFolder()")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise.<Folder>")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filesystemprovider-getdatafolder"},".getDataFolder()")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise.<Folder>")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filesystemprovider-getpluginfolder"},".getPluginFolder()")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise.<Folder>")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filesystemprovider-getfsurl"},".getFsUrl(entry)")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"URL")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filesystemprovider-getnativepath"},".getNativePath(entry)")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"string")))),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-folder"},".Folder")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Entry"),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-folder-getentries"},".getEntries()")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise.<Array.<Entry>>")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-folder-createfile"},".createFile(name, options)")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise.<File>")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-folder-createfolder"},".createFolder(name)")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Folder")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-folder-getentry"},".getEntry(filePath)")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise.<(File\\|Folder)>")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-folder-renameentry"},".renameEntry(entry, newName, options)")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise")))),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-localfilesystem"},".localFileSystem")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"LocalFileSystemProvider")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors"},".errors")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"Errors"),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors-abstractmethodinvocationerror"},".AbstractMethodInvocationError")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Error")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors-providermismatcherror"},".ProviderMismatchError")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Error")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors-entryisnotanentryerror"},".EntryIsNotAnEntryError")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Error")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors-entryisnotafoldererror"},".EntryIsNotAFolderError")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Error")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors-entryisnotafileerror"},".EntryIsNotAFileError")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Error")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors-notafilesystemerror"},".NotAFileSystemError")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Error")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors-outofspaceerror"},".OutOfSpaceError")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Error")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors-permissiondeniederror"},".PermissionDeniedError")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Error")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors-entryexistserror"},".EntryExistsError")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Error")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors-fileisreadonlyerror"},".FileIsReadOnlyError")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Error")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors-domainnotsupportederror"},".DomainNotSupportedError")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Error")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors-invalidfilenameerror"},".InvalidFileNameError")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Error")))),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filetypes"},".fileTypes"),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filetypes-text"},".text")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filetypes-images"},".images")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filetypes-all"},".all")))),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-formats"},".formats"),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-formats-utf8"},".utf8")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"Symbol")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-formats-binary"},".binary")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"Symbol")))),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-modes"},".modes"),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-modes-readonly"},".readOnly")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"Symbol")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-modes-readwrite"},".readWrite")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"Symbol")))),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-types"},".types"),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-types-file"},".file")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"Symbol")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-types-folder"},".folder")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"Symbol"))))))),(0,m.mdx)("a",{name:"module-storage-entry",id:"module-storage-entry"}),(0,m.mdx)("h3",{id:"storageentry"},"storage.Entry"),(0,m.mdx)("p",null,"An ",(0,m.mdx)("inlineCode",{parentName:"p"},"Entry")," is the base class for ",(0,m.mdx)("inlineCode",{parentName:"p"},"File")," and ",(0,m.mdx)("inlineCode",{parentName:"p"},"Folder"),". You'll\nnever instantiate an ",(0,m.mdx)("inlineCode",{parentName:"p"},"Entry")," directly, but it provides\nthe common fields and methods that both ",(0,m.mdx)("inlineCode",{parentName:"p"},"File")," and ",(0,m.mdx)("inlineCode",{parentName:"p"},"Folder"),"\nshare."),(0,m.mdx)("blockquote",null,(0,m.mdx)("p",{parentName:"blockquote"},(0,m.mdx)("strong",{parentName:"p"},"Info")),(0,m.mdx)("p",{parentName:"blockquote"},"Important:"),(0,m.mdx)("ul",{parentName:"blockquote"},(0,m.mdx)("li",{parentName:"ul"},"An Entry object may exist even if the corresponding file/folder on disk does not\ncurrently exist."),(0,m.mdx)("li",{parentName:"ul"},"It's possible for multiple Entry objects to represent the same item on disk,\nfor example if the item was picked via multiple separate file picker invocations."))),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage"},(0,m.mdx)("inlineCode",{parentName:"a"},"storage")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry"},".Entry"),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry-name"},".name")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"string")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry-provider"},".provider")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"FileSystemProvider")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry-url"},".url")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"URL")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry-nativepath"},".nativePath")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"string")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry-isentry"},".isEntry")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"boolean")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry-isfile"},".isFile")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"boolean")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry-isfolder"},".isFolder")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"boolean")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry-tostring"},".toString()")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"string")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry-copyto"},".copyTo(folder, options)")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry-moveto"},".moveTo(folder, options)")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry-delete"},".delete()")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entry-getmetadata"},".getMetadata()")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise.<EntryMetadata>"))))),(0,m.mdx)("a",{name:"module-storage-entry-name",id:"module-storage-entry-name"}),(0,m.mdx)("h4",{id:"entryname--string"},"entry.name : ",(0,m.mdx)("inlineCode",{parentName:"h4"},"string")),(0,m.mdx)("p",null,"The name of this entry. Read-only."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-entry"},(0,m.mdx)("inlineCode",{parentName:"a"},"Entry")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Read only"),": true\n",(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13\n",(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},"console.log(anEntry.name);\n")),(0,m.mdx)("a",{name:"module-storage-entry-provider",id:"module-storage-entry-provider"}),(0,m.mdx)("h4",{id:"entryprovider--filesystemprovider"},"entry.provider : ",(0,m.mdx)("inlineCode",{parentName:"h4"},"FileSystemProvider")),(0,m.mdx)("p",null,"The associated provider that services this entry. Read-only."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-entry"},(0,m.mdx)("inlineCode",{parentName:"a"},"Entry")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Read only"),": true\n",(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13\n",(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},'if (entryOne.provider !== entryTwo.provider) {\n    throw new Error("Providers are not the same");\n}\n')),(0,m.mdx)("a",{name:"module-storage-entry-url",id:"module-storage-entry-url"}),(0,m.mdx)("h4",{id:"entryurl--url"},"entry.url : ",(0,m.mdx)("inlineCode",{parentName:"h4"},"URL")),(0,m.mdx)("p",null,"The url of this entry. You can use this url as the ",(0,m.mdx)("inlineCode",{parentName:"p"},"src")," attribute of an ",(0,m.mdx)("inlineCode",{parentName:"p"},"<img>")," tag in the UI. Read-only."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-entry"},(0,m.mdx)("inlineCode",{parentName:"a"},"Entry")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Read only"),": true\n",(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13\n",(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},"console.log(anEntry.url);\n")),(0,m.mdx)("a",{name:"module-storage-entry-nativepath",id:"module-storage-entry-nativepath"}),(0,m.mdx)("h4",{id:"entrynativepath--string"},"entry.nativePath : ",(0,m.mdx)("inlineCode",{parentName:"h4"},"string")),(0,m.mdx)("p",null,"The platform native file-system path of this entry. Read-only"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-entry"},(0,m.mdx)("inlineCode",{parentName:"a"},"Entry")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Read only"),": true\n",(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13\n",(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},"console.log(anEntry.nativePath);\n")),(0,m.mdx)("h4",{id:"entryisentry--boolean"},"entry.isEntry : ",(0,m.mdx)("inlineCode",{parentName:"h4"},"boolean")),(0,m.mdx)("p",null,"Indicates that this instance is an ",(0,m.mdx)("inlineCode",{parentName:"p"},"Entry"),". Useful for type-checking."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-entry"},(0,m.mdx)("inlineCode",{parentName:"a"},"Entry")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},"if (something.isEntry) {\n    return something.getMetadata();\n}\n")),(0,m.mdx)("a",{name:"module-storage-entry-isfile",id:"module-storage-entry-isfile"}),(0,m.mdx)("h4",{id:"entryisfile--boolean"},"entry.isFile : ",(0,m.mdx)("inlineCode",{parentName:"h4"},"boolean")),(0,m.mdx)("p",null,"Indicates that this instance is ",(0,m.mdx)("strong",{parentName:"p"},"not")," a ",(0,m.mdx)("inlineCode",{parentName:"p"},"File"),". Useful for type-\nchecking."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-entry"},(0,m.mdx)("inlineCode",{parentName:"a"},"Entry")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Read only"),": true\n",(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},'if (!anEntry.isFile) {\n    return "This entry is not a file.";\n}\n')),(0,m.mdx)("a",{name:"module-storage-entry-isfolder",id:"module-storage-entry-isfolder"}),(0,m.mdx)("h4",{id:"entryisfolder--boolean"},"entry.isFolder : ",(0,m.mdx)("inlineCode",{parentName:"h4"},"boolean")),(0,m.mdx)("p",null,"Indicates that this instance is ",(0,m.mdx)("strong",{parentName:"p"},"not")," a folder. Useful for type-\nchecking."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-entry"},(0,m.mdx)("inlineCode",{parentName:"a"},"Entry")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Read only"),": true\n",(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},'if (!anEntry.isFolder) {\n    return "This entry is not a folder.";\n}\n')),(0,m.mdx)("a",{name:"module-storage-entry-tostring",id:"module-storage-entry-tostring"}),(0,m.mdx)("h4",{id:"entrytostring--string"},"entry.toString() ⇒ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"string")),(0,m.mdx)("p",null,"Returns the details of the given entry like name, type and native path in a readable string format."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-entry"},(0,m.mdx)("inlineCode",{parentName:"a"},"Entry")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),(0,m.mdx)("a",{name:"module-storage-entry-copyto",id:"module-storage-entry-copyto"}),(0,m.mdx)("h4",{id:"entrycopytofolder-options--promise"},"entry.copyTo(folder, options) ⇒ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Promise")),(0,m.mdx)("p",null,"Copies this entry to the specified ",(0,m.mdx)("inlineCode",{parentName:"p"},"folder"),"."),(0,m.mdx)("p",null,"The Entry object passed to this function will continue to reference the\noriginal item - it is ",(0,m.mdx)("em",{parentName:"p"},"not")," updated to reference the copy."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-entry"},(0,m.mdx)("inlineCode",{parentName:"a"},"Entry")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Throws"),":"),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"EntryExists")," if the attempt would overwrite an entry and ",(0,m.mdx)("inlineCode",{parentName:"li"},"overwrite")," is ",(0,m.mdx)("inlineCode",{parentName:"li"},"false")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"PermissionDenied")," if the underlying file system rejects the attempt"),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"OutOfSpace")," if the file system is out of storage space")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Param"),(0,m.mdx)("th",{parentName:"tr",align:null},"Type"),(0,m.mdx)("th",{parentName:"tr",align:null},"Default"),(0,m.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"folder"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"Folder")),(0,m.mdx)("td",{parentName:"tr",align:null}),(0,m.mdx)("td",{parentName:"tr",align:null},"the folder to which to copy this entry")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"options"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"\\*")),(0,m.mdx)("td",{parentName:"tr",align:null}),(0,m.mdx)("td",{parentName:"tr",align:null})),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"[options.overwrite]"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"boolean")),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"false")),(0,m.mdx)("td",{parentName:"tr",align:null},"if ",(0,m.mdx)("inlineCode",{parentName:"td"},"true"),", allows overwriting existing entries")))),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},"await someFile.copyTo(someFolder);\n")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},"await someFile.copyTo(someFolder, {overwrite: true});\n")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},"await someFolder.copyTo(anotherFolder, {overwrite: true});\n")),(0,m.mdx)("a",{name:"module-storage-entry-moveto",id:"module-storage-entry-moveto"}),(0,m.mdx)("h4",{id:"entrymovetofolder-options--promise"},"entry.moveTo(folder, options) ⇒ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Promise")),(0,m.mdx)("p",null,"Moves this entry to the target folder, optionally specifying a new name."),(0,m.mdx)("p",null,"The Entry object passed to this function is automatically updated to\nreference the new location, however any ",(0,m.mdx)("em",{parentName:"p"},"other")," Entry objects\nreferencing the original item will not be updated, and will thus no\nlonger point to an item that exists on disk."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-entry"},(0,m.mdx)("inlineCode",{parentName:"a"},"Entry")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Param"),(0,m.mdx)("th",{parentName:"tr",align:null},"Type"),(0,m.mdx)("th",{parentName:"tr",align:null},"Default"),(0,m.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"folder"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"Folder")),(0,m.mdx)("td",{parentName:"tr",align:null}),(0,m.mdx)("td",{parentName:"tr",align:null},"the folder to which to move this entry")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"options"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"\\*")),(0,m.mdx)("td",{parentName:"tr",align:null}),(0,m.mdx)("td",{parentName:"tr",align:null})),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"[options.overwrite]"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"boolean")),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"false")),(0,m.mdx)("td",{parentName:"tr",align:null},"If ",(0,m.mdx)("inlineCode",{parentName:"td"},"true")," allows the move to overwrite existing files")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"[options.newName]"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"string")),(0,m.mdx)("td",{parentName:"tr",align:null}),(0,m.mdx)("td",{parentName:"tr",align:null},"If specified, the entry is renamed to this name")))),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},"await someFile.moveTo(someFolder);\n")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},"await someFile.moveTo(someFolder, {overwrite: true});\n")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},"await someFolder.moveTo(anotherFolder, {overwrite: true});\n")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},"await someFile.moveTo(someFolder, {newName: 'masterpiece.txt'})\n")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},"await someFile.moveTo(someFolder, {newName: 'novel.txt', {overwrite: true})\n")),(0,m.mdx)("a",{name:"module-storage-entry-delete",id:"module-storage-entry-delete"}),(0,m.mdx)("h4",{id:"entrydelete--promise"},"entry.delete() ⇒ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Promise")),(0,m.mdx)("p",null,"Removes this entry from the file system. If the entry is a folder, you must remove the files inside before removing the folder."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-entry"},(0,m.mdx)("inlineCode",{parentName:"a"},"Entry")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13\n",(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},"await aFile.delete();\n")),(0,m.mdx)("a",{name:"module-storage-entry-getmetadata",id:"module-storage-entry-getmetadata"}),(0,m.mdx)("h4",{id:"entrygetmetadata--promiseentrymetadata"},"entry.getMetadata() ⇒ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Promise.<EntryMetadata>")),(0,m.mdx)("p",null,"Returns this entry's metadata."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-entry"},(0,m.mdx)("inlineCode",{parentName:"a"},"Entry")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13\n",(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},"const metadata = await aFile.getMetadata();\n")),(0,m.mdx)("a",{name:"module-storage-entrymetadata",id:"module-storage-entrymetadata"}),(0,m.mdx)("h3",{id:"storageentrymetadata"},"storage.EntryMetadata"),(0,m.mdx)("p",null,"Metadata for an entry. It includes useful information such as:"),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},"size of the file (if a file)"),(0,m.mdx)("li",{parentName:"ul"},"date created"),(0,m.mdx)("li",{parentName:"ul"},"date modified"),(0,m.mdx)("li",{parentName:"ul"},"name")),(0,m.mdx)("p",null,"You'll never instantiate an ",(0,m.mdx)("inlineCode",{parentName:"p"},"EntryMetadata")," directly; instead use\n",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-entry-getmetadata"},"getMetadata")," to get metadata for a\nspecific File or Folder entry."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage"},(0,m.mdx)("inlineCode",{parentName:"a"},"storage"))),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entrymetadata"},".EntryMetadata"),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entrymetadata-name"},".name")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"string")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entrymetadata-size"},".size")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"number")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entrymetadata-datecreated"},".dateCreated")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"Date")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entrymetadata-datemodified"},".dateModified")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"Date")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entrymetadata-isfile"},".isFile")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"boolean")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-entrymetadata-isfolder"},".isFolder")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"boolean"))))),(0,m.mdx)("a",{name:"module-storage-entrymetadata-name",id:"module-storage-entrymetadata-name"}),(0,m.mdx)("h4",{id:"entrymetadataname--string"},"entryMetadata.name : ",(0,m.mdx)("inlineCode",{parentName:"h4"},"string")),(0,m.mdx)("p",null,"The name of the entry."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-entrymetadata"},(0,m.mdx)("inlineCode",{parentName:"a"},"EntryMetadata"))),(0,m.mdx)("a",{name:"module-storage-entrymetadata-size",id:"module-storage-entrymetadata-size"}),(0,m.mdx)("h4",{id:"entrymetadatasize--number"},"entryMetadata.size : ",(0,m.mdx)("inlineCode",{parentName:"h4"},"number")),(0,m.mdx)("p",null,"The size of the entry, if a file. Zero if a folder."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-entrymetadata"},(0,m.mdx)("inlineCode",{parentName:"a"},"EntryMetadata"))),(0,m.mdx)("a",{name:"module-storage-entrymetadata-datecreated",id:"module-storage-entrymetadata-datecreated"}),(0,m.mdx)("h4",{id:"entrymetadatadatecreated--date"},"entryMetadata.dateCreated : ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Date")),(0,m.mdx)("p",null,"The date this entry was created."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-entrymetadata"},(0,m.mdx)("inlineCode",{parentName:"a"},"EntryMetadata"))),(0,m.mdx)("a",{name:"module-storage-entrymetadata-datemodified",id:"module-storage-entrymetadata-datemodified"}),(0,m.mdx)("h4",{id:"entrymetadatadatemodified--date"},"entryMetadata.dateModified : ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Date")),(0,m.mdx)("p",null,"The date this entry was modified."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-entrymetadata"},(0,m.mdx)("inlineCode",{parentName:"a"},"EntryMetadata"))),(0,m.mdx)("a",{name:"module-storage-entrymetadata-isfile",id:"module-storage-entrymetadata-isfile"}),(0,m.mdx)("h4",{id:"entrymetadataisfile--boolean"},"entryMetadata.isFile : ",(0,m.mdx)("inlineCode",{parentName:"h4"},"boolean")),(0,m.mdx)("p",null,"Indicates if the entry is a file"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-entrymetadata"},(0,m.mdx)("inlineCode",{parentName:"a"},"EntryMetadata"))),(0,m.mdx)("a",{name:"module-storage-entrymetadata-isfolder",id:"module-storage-entrymetadata-isfolder"}),(0,m.mdx)("h4",{id:"entrymetadataisfolder--boolean"},"entryMetadata.isFolder : ",(0,m.mdx)("inlineCode",{parentName:"h4"},"boolean")),(0,m.mdx)("p",null,"Indicates if the entry is a folder"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-entrymetadata"},(0,m.mdx)("inlineCode",{parentName:"a"},"EntryMetadata"))),(0,m.mdx)("a",{name:"module-storage-file",id:"module-storage-file"}),(0,m.mdx)("h3",{id:"storagefile"},"storage.File"),(0,m.mdx)("p",null,"Represents a file on a file system. Provides methods for reading from and\nwriting to the file. You'll never instantiate a ",(0,m.mdx)("inlineCode",{parentName:"p"},"File")," directly; instead\nyou'll get access via a ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-filesystemprovider"},"FileSystemProvider"),".\nmethod such as ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-filesystemprovider-getfileforopening"},(0,m.mdx)("inlineCode",{parentName:"a"},"getFileForOpening()")),"."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage"},(0,m.mdx)("inlineCode",{parentName:"a"},"storage")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),(0,m.mdx)("blockquote",null,(0,m.mdx)("p",{parentName:"blockquote"},(0,m.mdx)("strong",{parentName:"p"},"Info")),(0,m.mdx)("p",{parentName:"blockquote"},"Important:"),(0,m.mdx)("ul",{parentName:"blockquote"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("p",{parentName:"li"},"A File object may exist even if the corresponding file on disk does not currently exist.")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("p",{parentName:"li"},"It's possible for multiple File objects to represent the same file on disk,\nfor example if the file was picked via multiple separate file picker invocations.")))),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-file"},".File"),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-file-mode"},".mode")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"Symbol")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-file-read"},".read(options)")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise.<(string\\|ArrayBuffer)>")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-file-write"},".write(data, options)"))))),(0,m.mdx)("a",{name:"module-storage-file-mode",id:"module-storage-file-mode"}),(0,m.mdx)("h4",{id:"filemode--symbol"},"file.mode : ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Symbol")),(0,m.mdx)("p",null,"Indicates whether this File object supports read-only or read-write\naccess. See ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-modes-readonly"},"readOnly")," and ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-modes-readwrite"},"readWrite"),"."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-file"},(0,m.mdx)("inlineCode",{parentName:"a"},"File")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13\n",(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},'if (aFile.mode === modes.readOnly) {\n    throw new Error("Can\'t write to a file opened as read-only.");\n}\n')),(0,m.mdx)("a",{name:"module-storage-file-read",id:"module-storage-file-read"}),(0,m.mdx)("h4",{id:"filereadoptions--promisestringarraybuffer"},"file.read(options) ⇒ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Promise.<(string\\|ArrayBuffer)>")),(0,m.mdx)("p",null,"Reads data from the file and returns it. The file format can be specified\nwith the ",(0,m.mdx)("inlineCode",{parentName:"p"},"format")," option. If a format is not supplied, the file is assumed\nto be a text file using UTF8 encoding."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-file"},(0,m.mdx)("inlineCode",{parentName:"a"},"File")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Returns"),": ",(0,m.mdx)("inlineCode",{parentName:"p"},"Promise.<(string\\|ArrayBuffer)>")," - the contents of the file\n",(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Param"),(0,m.mdx)("th",{parentName:"tr",align:null},"Type"),(0,m.mdx)("th",{parentName:"tr",align:null},"Default"),(0,m.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"options"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"Object")),(0,m.mdx)("td",{parentName:"tr",align:null}),(0,m.mdx)("td",{parentName:"tr",align:null})),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"[options.format]"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"Symbol")),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"formats.utf8")),(0,m.mdx)("td",{parentName:"tr",align:null},"Optional. Format to read: one of ",(0,m.mdx)("a",{parentName:"td",href:"#module-storage-formats-utf8"},(0,m.mdx)("inlineCode",{parentName:"a"},"storage.formats.utf8"))," or ",(0,m.mdx)("a",{parentName:"td",href:"#module-storage-formats-binary"},(0,m.mdx)("inlineCode",{parentName:"a"},"storage.formats.binary")),".")))),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},"const text = await myNovel.read(); // 'text' is a string\n")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},'const data = await myNovel.read({format: formats.binary}); // \'data\' is an ArrayBuffer\nconsole.log("File is " + data.byteLength + " bytes long.");\n')),(0,m.mdx)("a",{name:"module-storage-file-write",id:"module-storage-file-write"}),(0,m.mdx)("h4",{id:"filewritedata-options"},"file.write(data, options)"),(0,m.mdx)("p",null,"Writes data to a file, appending if desired. The format of the file\nis controlled via the ",(0,m.mdx)("inlineCode",{parentName:"p"},"format")," option, and defaults to UTF8."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-file"},(0,m.mdx)("inlineCode",{parentName:"a"},"File")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Throws"),":"),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"FileIsReadOnly")," if writing to a read-only file"),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"OutOfSpace")," If writing to the file causes the file system to exceed the available space (or quota)")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Param"),(0,m.mdx)("th",{parentName:"tr",align:null},"Type"),(0,m.mdx)("th",{parentName:"tr",align:null},"Default"),(0,m.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"data"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,m.mdx)("inlineCode",{parentName:"td"},"ArrayBuffer")),(0,m.mdx)("td",{parentName:"tr",align:null}),(0,m.mdx)("td",{parentName:"tr",align:null},"Data to write to the file")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"options"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"Object")),(0,m.mdx)("td",{parentName:"tr",align:null}),(0,m.mdx)("td",{parentName:"tr",align:null})),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"[options.format]"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"Symbol")),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"formats.utf8")),(0,m.mdx)("td",{parentName:"tr",align:null},"Optional. Format to write: ",(0,m.mdx)("a",{parentName:"td",href:"#module-storage-formats-utf8"},(0,m.mdx)("inlineCode",{parentName:"a"},"storage.formats.utf8"))," or ",(0,m.mdx)("a",{parentName:"td",href:"#module-storage-formats-binary"},(0,m.mdx)("inlineCode",{parentName:"a"},"storage.formats.binary")),".")))),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},'await myNovel.write("It was a dark and stormy night.\\n");\n')),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},"const data = new Uint8Array([0xFF, 0xA1]);\nawait aDataFile.write(data, {format: formats.binary});  // writes a 2-byte file\n")),(0,m.mdx)("a",{name:"module-storage-filesystemprovider",id:"module-storage-filesystemprovider"}),(0,m.mdx)("h3",{id:"storagefilesystemprovider"},"storage.FileSystemProvider"),(0,m.mdx)("p",null,"Provides access to files and folders on a file system. You don't instantiate\nthis directly; instead you'll use an instance that has already been created for\nyou."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage"},(0,m.mdx)("inlineCode",{parentName:"a"},"storage")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filesystemprovider"},".FileSystemProvider"),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filesystemprovider-getfileforopening"},".getFileForOpening(options)")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise.<?File>")," ","|"," ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise.<!Array.<File>>")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filesystemprovider-getfileforsaving"},".getFileForSaving(suggestedName, options)")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise.<?File>")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filesystemprovider-getfolder"},".getFolder()")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise.<?Folder>")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filesystemprovider-gettemporaryfolder"},".getTemporaryFolder()")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise.<Folder>")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filesystemprovider-getdatafolder"},".getDataFolder()")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise.<Folder>")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filesystemprovider-getpluginfolder"},".getPluginFolder()")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise.<Folder>")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filesystemprovider-getfsurl"},".getFsUrl(entry)")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"URL")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filesystemprovider-getnativepath"},".getNativePath(entry)")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"string"))))),(0,m.mdx)("a",{name:"module-storage-filesystemprovider-getfileforopening",id:"module-storage-filesystemprovider-getfileforopening"}),(0,m.mdx)("h4",{id:"filesystemprovidergetfileforopeningoptions--promisefile--promisearrayfile"},"fileSystemProvider.getFileForOpening(options) ⇒ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Promise.<File>")," ","|"," ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Promise.<Array.<File>>")),(0,m.mdx)("p",null,'Gets a file (or files) suitable for reading by displaying an "Open" file\npicker dialog to the user. File entries returned by this API are read-only -\nuse ',(0,m.mdx)("a",{parentName:"p",href:"#module-storage-filesystemprovider-getfileforsaving"},"getFileForSaving"),"\nto get a File entry you can write to."),(0,m.mdx)("p",null,"The user can select multiple files only if the ",(0,m.mdx)("inlineCode",{parentName:"p"},"allowMultiple")," option is ",(0,m.mdx)("inlineCode",{parentName:"p"},"true"),"."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-filesystemprovider"},(0,m.mdx)("inlineCode",{parentName:"a"},"FileSystemProvider")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Returns"),": ",(0,m.mdx)("inlineCode",{parentName:"p"},"Promise.<?File>")," ","|"," ",(0,m.mdx)("inlineCode",{parentName:"p"},"Promise.<!Array.<File>>")," - ",(0,m.mdx)("inlineCode",{parentName:"p"},"?File")," if ",(0,m.mdx)("inlineCode",{parentName:"p"},"allowMultiple")," is false (null if picker canceled); or ",(0,m.mdx)("inlineCode",{parentName:"p"},"!Array<File>")," if ",(0,m.mdx)("inlineCode",{parentName:"p"},"allowMultiple")," is true (length 0 if picker canceled)\n",(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Param"),(0,m.mdx)("th",{parentName:"tr",align:null},"Type"),(0,m.mdx)("th",{parentName:"tr",align:null},"Default"),(0,m.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"options"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"Object")),(0,m.mdx)("td",{parentName:"tr",align:null}),(0,m.mdx)("td",{parentName:"tr",align:null})),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"[options.types]"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"Array.<string>")),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"[&#x27;*&#x27;]")),(0,m.mdx)("td",{parentName:"tr",align:null},'Optional. Allowed file extensions, with no "." prefix; use ',(0,m.mdx)("a",{parentName:"td",href:"#module-storage-filetypes-all"},(0,m.mdx)("inlineCode",{parentName:"a"},"storage.fileTypes.all"))," to allow any file to be picked")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"[options.allowMultiple]"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"boolean")),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"false")),(0,m.mdx)("td",{parentName:"tr",align:null},"Optional. If true, multiple files can be selected and this API returns ",(0,m.mdx)("inlineCode",{parentName:"td"},"Array<File>"),".",(0,m.mdx)("br",null),(0,m.mdx)("br",null),"If false, only one file can be selected and this API returns a ",(0,m.mdx)("inlineCode",{parentName:"td"},"File")," directly.")))),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},"const file = await fs.getFileForOpening();\nif (!file) {\n    // file picker dialog was canceled\n    return;\n}\nconst text = await file.read();\n")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},"const files = await fs.getFileForOpening({allowMultiple: true, types: fileTypes.images});\nif (files.length === 0) {\n    // no files selected\n}\n")),(0,m.mdx)("a",{name:"module-storage-filesystemprovider-getfileforsaving",id:"module-storage-filesystemprovider-getfileforsaving"}),(0,m.mdx)("h4",{id:"filesystemprovidergetfileforsavingsuggestedname-options--promisefile"},"fileSystemProvider.getFileForSaving(suggestedName, options) ⇒ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Promise.<?File>")),(0,m.mdx)("p",null,'Gets a file reference suitable for read-write by displaying a "Save" file\npicker dialog to the user.'),(0,m.mdx)("p",null,"If the act of writing to the file would overwrite it, the file picker\nwill prompt the user to confirm before returning a result to you."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-filesystemprovider"},(0,m.mdx)("inlineCode",{parentName:"a"},"FileSystemProvider")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Returns"),": ",(0,m.mdx)("inlineCode",{parentName:"p"},"Promise.<?File>")," - returns the selected file, or ",(0,m.mdx)("inlineCode",{parentName:"p"},"null")," if canceled\n",(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Param"),(0,m.mdx)("th",{parentName:"tr",align:null},"Type"),(0,m.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"suggestedName"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"string")),(0,m.mdx)("td",{parentName:"tr",align:null},"Required. The file extension should match one of the options specified in the ",(0,m.mdx)("inlineCode",{parentName:"td"},"types")," option.")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"options"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"Object")),(0,m.mdx)("td",{parentName:"tr",align:null})),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"[options.types]"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"Array.<string>")),(0,m.mdx)("td",{parentName:"tr",align:null},'Required. Allowed file extensions, with no "." prefix.')))),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},'const file = await fs.getFileForSaving("output.txt", { types: [ "txt" ]});\nif (!file) {\n    // file picker was cancelled\n    return;\n}\nawait file.write("It was a dark and stormy night");\n')),(0,m.mdx)("a",{name:"module-storage-filesystemprovider-getfolder",id:"module-storage-filesystemprovider-getfolder"}),(0,m.mdx)("h4",{id:"filesystemprovidergetfolder--promisefolder"},"fileSystemProvider.getFolder() ⇒ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Promise.<?Folder>")),(0,m.mdx)("p",null,"Gets a folder from the file system via a folder picker dialog. The files\nand folders within can be accessed via ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-folder-getentries"},"getEntries"),". Any\nfiles within are read-write."),(0,m.mdx)("p",null,"If the user cancels the picker, ",(0,m.mdx)("inlineCode",{parentName:"p"},"null")," is returned instead."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-filesystemprovider"},(0,m.mdx)("inlineCode",{parentName:"a"},"FileSystemProvider")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Returns"),": ",(0,m.mdx)("inlineCode",{parentName:"p"},"Promise.<?Folder>")," - the selected folder or ",(0,m.mdx)("inlineCode",{parentName:"p"},"null")," if picker is canceled.\n",(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13\n",(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},"const folder = await fs.getFolder();\nconst myNovel = (await fs.getEntries()).find(entry => entry.name.includes('novel'));\nconst text = await myNovel.read();\n")),(0,m.mdx)("a",{name:"module-storage-filesystemprovider-gettemporaryfolder",id:"module-storage-filesystemprovider-gettemporaryfolder"}),(0,m.mdx)("h4",{id:"filesystemprovidergettemporaryfolder--promisefolder"},"fileSystemProvider.getTemporaryFolder() ⇒ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Promise.<Folder>")),(0,m.mdx)("p",null,"Returns a temporary folder. The contents of the folder may be lost when\nthe host application is closed."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-filesystemprovider"},(0,m.mdx)("inlineCode",{parentName:"a"},"FileSystemProvider")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13\n",(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},"const temp = await fs.getTemporaryFolder();\n")),(0,m.mdx)("a",{name:"module-storage-filesystemprovider-getdatafolder",id:"module-storage-filesystemprovider-getdatafolder"}),(0,m.mdx)("h4",{id:"filesystemprovidergetdatafolder--promisefolder"},"fileSystemProvider.getDataFolder() ⇒ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Promise.<Folder>")),(0,m.mdx)("p",null,"Returns a folder that can be used for storing plugin-specific data without needing user\ninteraction though a file picker. Its contents remain persistent when the host\napplication is updated ",(0,m.mdx)("em",{parentName:"p"},"and")," when your plugin is updated."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-filesystemprovider"},(0,m.mdx)("inlineCode",{parentName:"a"},"FileSystemProvider")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),(0,m.mdx)("a",{name:"module-storage-filesystemprovider-getpluginfolder",id:"module-storage-filesystemprovider-getpluginfolder"}),(0,m.mdx)("h4",{id:"filesystemprovidergetpluginfolder--promisefolder"},"fileSystemProvider.getPluginFolder() ⇒ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Promise.<Folder>")),(0,m.mdx)("p",null,"Returns an plugin's folder – this folder and everything within it are read only.\nThis contains all the Plugin related packaged assets."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-filesystemprovider"},(0,m.mdx)("inlineCode",{parentName:"a"},"FileSystemProvider")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),(0,m.mdx)("a",{name:"module-storage-filesystemprovider-getfsurl",id:"module-storage-filesystemprovider-getfsurl"}),(0,m.mdx)("h4",{id:"filesystemprovidergetfsurlentry--url"},"fileSystemProvider.getFsUrl(entry) ⇒ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"URL")),(0,m.mdx)("p",null,"Returns the fs url of given entry."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-filesystemprovider"},(0,m.mdx)("inlineCode",{parentName:"a"},"FileSystemProvider"))),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Param"),(0,m.mdx)("th",{parentName:"tr",align:null},"Type"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"entry"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"Entry"))))),(0,m.mdx)("a",{name:"module-storage-filesystemprovider-getnativepath",id:"module-storage-filesystemprovider-getnativepath"}),(0,m.mdx)("h4",{id:"filesystemprovidergetnativepathentry--string"},"fileSystemProvider.getNativePath(entry) ⇒ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"string")),(0,m.mdx)("p",null,"Returns the platform native file system path of given entry."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-filesystemprovider"},(0,m.mdx)("inlineCode",{parentName:"a"},"FileSystemProvider"))),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Param"),(0,m.mdx)("th",{parentName:"tr",align:null},"Type"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"entry"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"Entry"))))),(0,m.mdx)("a",{name:"module-storage-folder",id:"module-storage-folder"}),(0,m.mdx)("h3",{id:"storagefolder--entry"},"storage.Folder ⇐ ",(0,m.mdx)("inlineCode",{parentName:"h3"},"Entry")),(0,m.mdx)("p",null,"Represents a folder on a file system. You'll never instantiate this directly,\nbut will get it by calling ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-filesystemprovider-gettemporaryfolder"},"getTemporaryFolder"),",\n",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-filesystemprovider-getfolder"},"getFolder"),", or via\n",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-folder-getentries"},"getEntries"),"."),(0,m.mdx)("blockquote",null,(0,m.mdx)("p",{parentName:"blockquote"},(0,m.mdx)("strong",{parentName:"p"},"Info")),(0,m.mdx)("p",{parentName:"blockquote"},"Important:"),(0,m.mdx)("ul",{parentName:"blockquote"},(0,m.mdx)("li",{parentName:"ul"},"A Folder object may exist even if the corresponding folder on disk does not currently\nexist."),(0,m.mdx)("li",{parentName:"ul"},"It's possible for multiple Folder objects to represent the same folder on disk,\nfor example if the folder was picked via multiple separate folder picker invocations."))),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage"},(0,m.mdx)("inlineCode",{parentName:"a"},"storage")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Extends"),": ",(0,m.mdx)("inlineCode",{parentName:"p"},"Entry"),"\n",(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-folder"},".Folder")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Entry"),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-folder-getentries"},".getEntries()")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise.<Array.<Entry>>")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-folder-createfile"},".createFile(name, options)")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise.<File>")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-folder-createfolder"},".createFolder(name)")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Folder")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-folder-getentry"},".getEntry(filePath)")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise.<(File\\|Folder)>")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-folder-renameentry"},".renameEntry(entry, newName, options)")," ⇒ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Promise"))))),(0,m.mdx)("a",{name:"module-storage-folder-getentries",id:"module-storage-folder-getentries"}),(0,m.mdx)("h4",{id:"foldergetentries--promisearrayentry"},"folder.getEntries() ⇒ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Promise.<Array.<Entry>>")),(0,m.mdx)("p",null,"Returns an array of entries contained within this folder."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-folder"},(0,m.mdx)("inlineCode",{parentName:"a"},"Folder")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Returns"),": ",(0,m.mdx)("inlineCode",{parentName:"p"},"Promise.<Array.<Entry>>")," - The entries within the folder.\n",(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13\n",(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},"const entries = await aFolder.getEntries();\nconst allFiles = entries.filter(entry => entry.isFile);\n")),(0,m.mdx)("a",{name:"module-storage-folder-createfile",id:"module-storage-folder-createfile"}),(0,m.mdx)("h4",{id:"foldercreatefilename-options--promisefile"},"folder.createFile(name, options) ⇒ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Promise.<File>")),(0,m.mdx)("p",null,"Creates a File object within this folder, which need not correspond to a file that exists on disk\nyet."),(0,m.mdx)("blockquote",null,(0,m.mdx)("p",{parentName:"blockquote"},(0,m.mdx)("strong",{parentName:"p"},"Info")),(0,m.mdx)("p",{parentName:"blockquote"},"Important:"),(0,m.mdx)("ul",{parentName:"blockquote"},(0,m.mdx)("li",{parentName:"ul"},"If the file already exists on disk (and ",(0,m.mdx)("inlineCode",{parentName:"li"},"overwrite")," is true), creates a File object but does not\nmodify the existing file on disk in any way."),(0,m.mdx)("li",{parentName:"ul"},"If the file does not exist yet, creates a File object but does ",(0,m.mdx)("em",{parentName:"li"},"not")," create the file on disk yet.\nYou can then use ",(0,m.mdx)("a",{parentName:"li",href:"#module-storage-file-write"},"write")," to create the file and give it\ncontent."))),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-folder"},(0,m.mdx)("inlineCode",{parentName:"a"},"Folder")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Returns"),": ",(0,m.mdx)("inlineCode",{parentName:"p"},"Promise.<File>")," - the created file entry\n",(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Param"),(0,m.mdx)("th",{parentName:"tr",align:null},"Type"),(0,m.mdx)("th",{parentName:"tr",align:null},"Default"),(0,m.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"name"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"string")),(0,m.mdx)("td",{parentName:"tr",align:null}),(0,m.mdx)("td",{parentName:"tr",align:null},"the name of the file to create.")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"options"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"Object")),(0,m.mdx)("td",{parentName:"tr",align:null}),(0,m.mdx)("td",{parentName:"tr",align:null})),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"[options.overwrite]"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"boolean")),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"false")),(0,m.mdx)("td",{parentName:"tr",align:null},"If ",(0,m.mdx)("inlineCode",{parentName:"td"},"false"),", the call will fail if the file already exists. If ",(0,m.mdx)("inlineCode",{parentName:"td"},"true"),", the call will succeed regardless of whether the file currently exists on disk.")))),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},'const myNovelTxtFile = await aFolder.createFile("mynovel.txt");\n')),(0,m.mdx)("a",{name:"module-storage-folder-createfolder",id:"module-storage-folder-createfolder"}),(0,m.mdx)("h4",{id:"foldercreatefoldername--folder"},"folder.createFolder(name) ⇒ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Folder")),(0,m.mdx)("p",null,"Creates a Folder object within this folder ",(0,m.mdx)("em",{parentName:"p"},"and")," creates the folder on disk. Unlike ",(0,m.mdx)("inlineCode",{parentName:"p"},"createFile()"),",\nthis call ",(0,m.mdx)("em",{parentName:"p"},"does")," modify the disk, and it cannot be used if the folder already exists\n(use ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-folder-getentry"},"getEntry")," in that case)."),(0,m.mdx)("blockquote",null,(0,m.mdx)("p",{parentName:"blockquote"},(0,m.mdx)("strong",{parentName:"p"},"Info")),(0,m.mdx)("p",{parentName:"blockquote"},"Important:"),(0,m.mdx)("ul",{parentName:"blockquote"},(0,m.mdx)("li",{parentName:"ul"},"If the folder already exists on disk, fails with an error."),(0,m.mdx)("li",{parentName:"ul"},"If the folder does not exist yet, immediately creates it on disk and then returns a Folder object\nfor it."))),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-folder"},(0,m.mdx)("inlineCode",{parentName:"a"},"Folder")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Returns"),": ",(0,m.mdx)("inlineCode",{parentName:"p"},"Folder")," - the created folder entry object\n",(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Param"),(0,m.mdx)("th",{parentName:"tr",align:null},"Type"),(0,m.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"name"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"string")),(0,m.mdx)("td",{parentName:"tr",align:null},"the name of the folder to create.")))),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},'const myCollectionsFolder = await aFolder.createFolder("collections");\n')),(0,m.mdx)("a",{name:"module-storage-folder-getentry",id:"module-storage-folder-getentry"}),(0,m.mdx)("h4",{id:"foldergetentryfilepath--promisefilefolder"},"folder.getEntry(filePath) ⇒ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Promise.<(File\\|Folder)>")),(0,m.mdx)("p",null,"Returns a File or Folder entry for an item that already exists on disk within this folder or\nits hierarchy of subfolders. Fails if no entry with the given name/path currently exists on disk."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-folder"},(0,m.mdx)("inlineCode",{parentName:"a"},"Folder")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Returns"),": ",(0,m.mdx)("inlineCode",{parentName:"p"},"Promise.<(File\\|Folder)>")," - the fetched entry.\n",(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Param"),(0,m.mdx)("th",{parentName:"tr",align:null},"Type"),(0,m.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"filePath"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"string")),(0,m.mdx)("td",{parentName:"tr",align:null},"Name, with optional relative path prefix, of an existing entry within this folder")))),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},'const myNovel = await aFolder.getEntry("mynovel.txt");\n')),(0,m.mdx)("a",{name:"module-storage-folder-renameentry",id:"module-storage-folder-renameentry"}),(0,m.mdx)("h4",{id:"folderrenameentryentry-newname-options--promise"},"folder.renameEntry(entry, newName, options) ⇒ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Promise")),(0,m.mdx)("p",null,"Renames an item on disk to a new name within the same folder. The Entry object passed to this\nfunction is automatically updated to reference the new name, however any ",(0,m.mdx)("em",{parentName:"p"},"other")," Entry objects\nreferencing the original item will not be updated, and will thus no longer point to an item that\nexists on disk."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-folder"},(0,m.mdx)("inlineCode",{parentName:"a"},"Folder")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Param"),(0,m.mdx)("th",{parentName:"tr",align:null},"Type"),(0,m.mdx)("th",{parentName:"tr",align:null},"Default"),(0,m.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"entry"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"Entry")),(0,m.mdx)("td",{parentName:"tr",align:null}),(0,m.mdx)("td",{parentName:"tr",align:null},"entry to rename (File or Folder). Must exist.")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"newName"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"string")),(0,m.mdx)("td",{parentName:"tr",align:null}),(0,m.mdx)("td",{parentName:"tr",align:null},"the new name to assign")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"options"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"any")),(0,m.mdx)("td",{parentName:"tr",align:null}),(0,m.mdx)("td",{parentName:"tr",align:null})),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"[options.overwrite]"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"boolean")),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"false")),(0,m.mdx)("td",{parentName:"tr",align:null},"if ",(0,m.mdx)("inlineCode",{parentName:"td"},"true"),", renaming can overwrite an existing entry")))),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Example")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-js"},'await myNovels.rename(myNovel, "myFantasticNovel.txt");\n')),(0,m.mdx)("a",{name:"module-storage-localfilesystem",id:"module-storage-localfilesystem"}),(0,m.mdx)("h3",{id:"storagelocalfilesystem--localfilesystemprovider"},"storage.localFileSystem : ",(0,m.mdx)("inlineCode",{parentName:"h3"},"LocalFileSystemProvider")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static property of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage"},(0,m.mdx)("inlineCode",{parentName:"a"},"storage"))),(0,m.mdx)("a",{name:"module-storage-errors",id:"module-storage-errors"}),(0,m.mdx)("h3",{id:"storageerrors--errors"},"storage.errors : ",(0,m.mdx)("inlineCode",{parentName:"h3"},"Errors")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static property of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage"},(0,m.mdx)("inlineCode",{parentName:"a"},"storage"))),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors"},".errors")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"Errors"),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors-abstractmethodinvocationerror"},".AbstractMethodInvocationError")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Error")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors-providermismatcherror"},".ProviderMismatchError")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Error")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors-entryisnotanentryerror"},".EntryIsNotAnEntryError")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Error")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors-entryisnotafoldererror"},".EntryIsNotAFolderError")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Error")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors-entryisnotafileerror"},".EntryIsNotAFileError")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Error")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors-notafilesystemerror"},".NotAFileSystemError")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Error")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors-outofspaceerror"},".OutOfSpaceError")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Error")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors-permissiondeniederror"},".PermissionDeniedError")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Error")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors-entryexistserror"},".EntryExistsError")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Error")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors-fileisreadonlyerror"},".FileIsReadOnlyError")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Error")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors-domainnotsupportederror"},".DomainNotSupportedError")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Error")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-errors-invalidfilenameerror"},".InvalidFileNameError")," ⇐ ",(0,m.mdx)("inlineCode",{parentName:"li"},"Error"))))),(0,m.mdx)("a",{name:"module-storage-errors-abstractmethodinvocationerror",id:"module-storage-errors-abstractmethodinvocationerror"}),(0,m.mdx)("h4",{id:"errorsabstractmethodinvocationerror--error"},"errors.AbstractMethodInvocationError ⇐ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Error")),(0,m.mdx)("p",null,"Attempted to invoke an abstract method."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-errors"},(0,m.mdx)("inlineCode",{parentName:"a"},"errors")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Extends"),": ",(0,m.mdx)("inlineCode",{parentName:"p"},"Error")),(0,m.mdx)("a",{name:"module-storage-errors-providermismatcherror",id:"module-storage-errors-providermismatcherror"}),(0,m.mdx)("h4",{id:"errorsprovidermismatcherror--error"},"errors.ProviderMismatchError ⇐ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Error")),(0,m.mdx)("p",null,"Attempted to execute a command that required the providers of all\nentries to match."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-errors"},(0,m.mdx)("inlineCode",{parentName:"a"},"errors")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Extends"),": ",(0,m.mdx)("inlineCode",{parentName:"p"},"Error")),(0,m.mdx)("a",{name:"module-storage-errors-entryisnotanentryerror",id:"module-storage-errors-entryisnotanentryerror"}),(0,m.mdx)("h4",{id:"errorsentryisnotanentryerror--error"},"errors.EntryIsNotAnEntryError ⇐ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Error")),(0,m.mdx)("p",null,"The object passed as an entry is not actually an ",(0,m.mdx)("inlineCode",{parentName:"p"},"Entry"),"."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-errors"},(0,m.mdx)("inlineCode",{parentName:"a"},"errors")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Extends"),": ",(0,m.mdx)("inlineCode",{parentName:"p"},"Error")),(0,m.mdx)("a",{name:"module-storage-errors-entryisnotafoldererror",id:"module-storage-errors-entryisnotafoldererror"}),(0,m.mdx)("h4",{id:"errorsentryisnotafoldererror--error"},"errors.EntryIsNotAFolderError ⇐ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Error")),(0,m.mdx)("p",null,"The entry is not a folder, but was expected to be a folder."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-errors"},(0,m.mdx)("inlineCode",{parentName:"a"},"errors")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Extends"),": ",(0,m.mdx)("inlineCode",{parentName:"p"},"Error")),(0,m.mdx)("a",{name:"module-storage-errors-entryisnotafileerror",id:"module-storage-errors-entryisnotafileerror"}),(0,m.mdx)("h4",{id:"errorsentryisnotafileerror--error"},"errors.EntryIsNotAFileError ⇐ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Error")),(0,m.mdx)("p",null,"The entry is not a file, but was expected to be."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-errors"},(0,m.mdx)("inlineCode",{parentName:"a"},"errors")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Extends"),": ",(0,m.mdx)("inlineCode",{parentName:"p"},"Error")),(0,m.mdx)("a",{name:"module-storage-errors-notafilesystemerror",id:"module-storage-errors-notafilesystemerror"}),(0,m.mdx)("h4",{id:"errorsnotafilesystemerror--error"},"errors.NotAFileSystemError ⇐ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Error")),(0,m.mdx)("p",null,"The instance was expected to be a file system, but wasn't."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-errors"},(0,m.mdx)("inlineCode",{parentName:"a"},"errors")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Extends"),": ",(0,m.mdx)("inlineCode",{parentName:"p"},"Error")),(0,m.mdx)("a",{name:"module-storage-errors-outofspaceerror",id:"module-storage-errors-outofspaceerror"}),(0,m.mdx)("h4",{id:"errorsoutofspaceerror--error"},"errors.OutOfSpaceError ⇐ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Error")),(0,m.mdx)("p",null,"The file system is out of space (or quota has been exceeded)"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-errors"},(0,m.mdx)("inlineCode",{parentName:"a"},"errors")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Extends"),": ",(0,m.mdx)("inlineCode",{parentName:"p"},"Error")),(0,m.mdx)("a",{name:"module-storage-errors-permissiondeniederror",id:"module-storage-errors-permissiondeniederror"}),(0,m.mdx)("h4",{id:"errorspermissiondeniederror--error"},"errors.PermissionDeniedError ⇐ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Error")),(0,m.mdx)("p",null,"The file system revoked permission to complete the requested\naction."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-errors"},(0,m.mdx)("inlineCode",{parentName:"a"},"errors")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Extends"),": ",(0,m.mdx)("inlineCode",{parentName:"p"},"Error")),(0,m.mdx)("a",{name:"module-storage-errors-entryexistserror",id:"module-storage-errors-entryexistserror"}),(0,m.mdx)("h4",{id:"errorsentryexistserror--error"},"errors.EntryExistsError ⇐ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Error")),(0,m.mdx)("p",null,"An attempt was made to overwrite an entry without indicating\nthat it was safe to do so via ",(0,m.mdx)("inlineCode",{parentName:"p"},"overwrite: true"),"."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-errors"},(0,m.mdx)("inlineCode",{parentName:"a"},"errors")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Extends"),": ",(0,m.mdx)("inlineCode",{parentName:"p"},"Error")),(0,m.mdx)("a",{name:"module-storage-errors-fileisreadonlyerror",id:"module-storage-errors-fileisreadonlyerror"}),(0,m.mdx)("h4",{id:"errorsfileisreadonlyerror--error"},"errors.FileIsReadOnlyError ⇐ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Error")),(0,m.mdx)("p",null,"An attempt was made to write to a file that was opened as\nread-only."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-errors"},(0,m.mdx)("inlineCode",{parentName:"a"},"errors")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Extends"),": ",(0,m.mdx)("inlineCode",{parentName:"p"},"Error")),(0,m.mdx)("a",{name:"module-storage-errors-domainnotsupportederror",id:"module-storage-errors-domainnotsupportederror"}),(0,m.mdx)("h4",{id:"errorsdomainnotsupportederror--error"},"errors.DomainNotSupportedError ⇐ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Error")),(0,m.mdx)("p",null,"Domain is not supported by the current FileSystemProvider\ninstance."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-errors"},(0,m.mdx)("inlineCode",{parentName:"a"},"errors")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Extends"),": ",(0,m.mdx)("inlineCode",{parentName:"p"},"Error")),(0,m.mdx)("a",{name:"module-storage-errors-invalidfilenameerror",id:"module-storage-errors-invalidfilenameerror"}),(0,m.mdx)("h4",{id:"errorsinvalidfilenameerror--error"},"errors.InvalidFileNameError ⇐ ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Error")),(0,m.mdx)("p",null,"The file name contains invalid characters"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-errors"},(0,m.mdx)("inlineCode",{parentName:"a"},"errors")),"\n",(0,m.mdx)("strong",{parentName:"p"},"Extends"),": ",(0,m.mdx)("inlineCode",{parentName:"p"},"Error")),(0,m.mdx)("a",{name:"module-storage-filetypes",id:"module-storage-filetypes"}),(0,m.mdx)("h3",{id:"storagefiletypes"},"storage.fileTypes"),(0,m.mdx)("p",null,"This namespace describes the various file type extensions that can used be used in some FS file open methods."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static constant of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage"},(0,m.mdx)("inlineCode",{parentName:"a"},"storage"))),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filetypes"},".fileTypes"),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filetypes-text"},".text")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filetypes-images"},".images")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-filetypes-all"},".all"))))),(0,m.mdx)("a",{name:"module-storage-filetypes-text",id:"module-storage-filetypes-text"}),(0,m.mdx)("h4",{id:"filetypestext"},"fileTypes.text"),(0,m.mdx)("p",null,"Text file extensions"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static property of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-filetypes"},(0,m.mdx)("inlineCode",{parentName:"a"},"fileTypes"))),(0,m.mdx)("a",{name:"module-storage-filetypes-images",id:"module-storage-filetypes-images"}),(0,m.mdx)("h4",{id:"filetypesimages"},"fileTypes.images"),(0,m.mdx)("p",null,"Image file extensions"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static property of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-filetypes"},(0,m.mdx)("inlineCode",{parentName:"a"},"fileTypes"))),(0,m.mdx)("a",{name:"module-storage-filetypes-all",id:"module-storage-filetypes-all"}),(0,m.mdx)("h4",{id:"filetypesall"},"fileTypes.all"),(0,m.mdx)("p",null,"All file types"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static property of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-filetypes"},(0,m.mdx)("inlineCode",{parentName:"a"},"fileTypes"))),(0,m.mdx)("a",{name:"module-storage-formats",id:"module-storage-formats"}),(0,m.mdx)("h3",{id:"storageformats"},"storage.formats"),(0,m.mdx)("p",null,"This namespace describes the file content formats supported in FS methods like read and write."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static constant of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage"},(0,m.mdx)("inlineCode",{parentName:"a"},"storage"))),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-formats"},".formats"),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-formats-utf8"},".utf8")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"Symbol")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-formats-binary"},".binary")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"Symbol"))))),(0,m.mdx)("a",{name:"module-storage-formats-utf8",id:"module-storage-formats-utf8"}),(0,m.mdx)("h4",{id:"formatsutf8--symbol"},"formats.utf8 : ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Symbol")),(0,m.mdx)("p",null,"UTF8 File encoding"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static property of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-formats"},(0,m.mdx)("inlineCode",{parentName:"a"},"formats"))),(0,m.mdx)("a",{name:"module-storage-formats-binary",id:"module-storage-formats-binary"}),(0,m.mdx)("h4",{id:"formatsbinary--symbol"},"formats.binary : ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Symbol")),(0,m.mdx)("p",null,"Binary file encoding"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static property of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-formats"},(0,m.mdx)("inlineCode",{parentName:"a"},"formats"))),(0,m.mdx)("a",{name:"module-storage-modes",id:"module-storage-modes"}),(0,m.mdx)("h3",{id:"storagemodes"},"storage.modes"),(0,m.mdx)("p",null,"This namespace describes the access modes that can be supported by a given File entry."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static constant of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage"},(0,m.mdx)("inlineCode",{parentName:"a"},"storage"))),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-modes"},".modes"),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-modes-readonly"},".readOnly")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"Symbol")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-modes-readwrite"},".readWrite")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"Symbol"))))),(0,m.mdx)("a",{name:"module-storage-modes-readonly",id:"module-storage-modes-readonly"}),(0,m.mdx)("h4",{id:"modesreadonly--symbol"},"modes.readOnly : ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Symbol")),(0,m.mdx)("p",null,"The file is read-only; attempts to write will fail."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static property of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-modes"},(0,m.mdx)("inlineCode",{parentName:"a"},"modes"))),(0,m.mdx)("a",{name:"module-storage-modes-readwrite",id:"module-storage-modes-readwrite"}),(0,m.mdx)("h4",{id:"modesreadwrite--symbol"},"modes.readWrite : ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Symbol")),(0,m.mdx)("p",null,"The file is read-write."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static property of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-modes"},(0,m.mdx)("inlineCode",{parentName:"a"},"modes"))),(0,m.mdx)("a",{name:"module-storage-types",id:"module-storage-types"}),(0,m.mdx)("h3",{id:"storagetypes"},"storage.types"),(0,m.mdx)("p",null,"This namespace describes the type of the entry. Whether file or folder etc."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static constant of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage"},(0,m.mdx)("inlineCode",{parentName:"a"},"storage"))),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-types"},".types"),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-types-file"},".file")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"Symbol")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#module-storage-types-folder"},".folder")," : ",(0,m.mdx)("inlineCode",{parentName:"li"},"Symbol"))))),(0,m.mdx)("a",{name:"module-storage-types-file",id:"module-storage-types-file"}),(0,m.mdx)("h4",{id:"typesfile--symbol"},"types.file : ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Symbol")),(0,m.mdx)("p",null,"A file; used when creating an entity"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static property of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-types"},(0,m.mdx)("inlineCode",{parentName:"a"},"types"))),(0,m.mdx)("a",{name:"module-storage-types-folder",id:"module-storage-types-folder"}),(0,m.mdx)("h4",{id:"typesfolder--symbol"},"types.folder : ",(0,m.mdx)("inlineCode",{parentName:"h4"},"Symbol")),(0,m.mdx)("p",null,"A folder; used when creating an entity"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Kind"),": static property of ",(0,m.mdx)("a",{parentName:"p",href:"#module-storage-types"},(0,m.mdx)("inlineCode",{parentName:"a"},"types"))))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-develop-reference-uxp-module-storage-md-14b8f8527d54773be452.js.map