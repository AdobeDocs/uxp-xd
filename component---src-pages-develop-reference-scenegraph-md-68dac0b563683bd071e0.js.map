{"version":3,"sources":["webpack://uxp-xd/./src/pages/develop/reference/scenegraph.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-develop-reference-scenegraph-md-68dac0b563683bd071e0.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"scenegraph\"\n    }}>{`scenegraph`}</h1>\n    <p>{`The scenegraph is a node tree which represents the structure of the XD document. It closely matches the hierarchy seen in the Layers panel\ninside XD. Some scenenodes may contain children (e.g., a Group or Artboard), while others are leaf nodes (e.g., a Rectangle or Text node).\nThe root of the scenegraph contains all Artboards that exist in the document, as well as all `}<em parentName=\"p\">{`pasteboard`}</em>{` content (nodes that are not\ncontained by any artboard).`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"896px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"36.5625%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/uxp-xd/static/4c632cd690f96df72a0b904732027279/cb523/scenegraphExample.webp 320w\", \"/uxp-xd/static/4c632cd690f96df72a0b904732027279/797b9/scenegraphExample.webp 640w\", \"/uxp-xd/static/4c632cd690f96df72a0b904732027279/38f06/scenegraphExample.webp 896w\"],\n            \"sizes\": \"(max-width: 896px) 100vw, 896px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/uxp-xd/static/4c632cd690f96df72a0b904732027279/72799/scenegraphExample.png 320w\", \"/uxp-xd/static/4c632cd690f96df72a0b904732027279/6af66/scenegraphExample.png 640w\", \"/uxp-xd/static/4c632cd690f96df72a0b904732027279/4c42d/scenegraphExample.png 896w\"],\n            \"sizes\": \"(max-width: 896px) 100vw, 896px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/uxp-xd/static/4c632cd690f96df72a0b904732027279/4c42d/scenegraphExample.png\",\n            \"alt\": \"example of scenegraph tree\",\n            \"title\": \"example of scenegraph tree\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`You can modify properties on any scenenodes within the current `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/plugin-development/xd-concepts/edit-context/\"\n      }}><em parentName=\"a\">{`edit context`}</em></a>{`,\nand add leaf nodes to the current edit context, but you cannot make structural changes directly to the scenegraph tree. Instead, use\n`}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/commands/\"\n      }}>{`commands`}</a>{`.`}</p>\n    <p>{`Typically, you access scenegraph nodes via the `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/selection/\"\n      }}>{`selection`}</a>{` argument that is passed to your plugin command, or by\ntraversing the entire document tree using the `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/RootNode\"\n      }}>{`documentRoot`}</a>{` argument that is passed to your plugin command. These\nobjects are also accessible on the scenegraph module for convenience.`}</p>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`function myCommand(selection) {\n  let node = selection.items[0];\n\n  console.log(\"The selected node is a: \" + node.constructor.name);\n\n  // Print out types of all child nodes (if any)\n  node.children.forEach(function (childNode, i) {\n    console.log(\"Child \" + i + \" is a \" + childNode.constructor.name);\n  });\n}\n`}</code></pre>\n    <p>{`To create new scenenodes, load this `}<inlineCode parentName=\"p\">{`scenegraph`}</inlineCode>{` module directly and use the node constructor functions:`}</p>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`let scenegraph = require(\"scenegraph\");\nfunction myCommand(selection) {\n  let newShape = new scenegraph.Rectangle();\n  newShape.width = 100;\n  newShape.height = 50;\n  newShape.fill = new Color(\"red\");\n  selection.insertionParent.addChild(newShape);\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"class-hierarchy\"\n    }}>{`Class hierarchy`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Tip`}</strong>{`\nAdditional subclasses may be added in the future. Always be sure to have a default case for unknown scenenode classes\nwhen traversing the scenegraph.`}</p>\n    </blockquote>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/uxp-xd/develop/reference/SceneNode\"\n        }}>{`SceneNode`}</a>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"/uxp-xd/develop/reference/GraphicNode\"\n            }}>{`GraphicNode`}</a>\n            <ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"/uxp-xd/develop/reference/Artboard\"\n                }}>{`Artboard`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"/uxp-xd/develop/reference/Rectangle\"\n                }}>{`Rectangle`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"/uxp-xd/develop/reference/Ellipse\"\n                }}>{`Ellipse`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"/uxp-xd/develop/reference/Polygon\"\n                }}>{`Polygon`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"/uxp-xd/develop/reference/Line\"\n                }}>{`Line`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"/uxp-xd/develop/reference/Path\"\n                }}>{`Path`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"/uxp-xd/develop/reference/BooleanGroup\"\n                }}>{`BooleanGroup`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"/uxp-xd/develop/reference/Text\"\n                }}>{`Text`}</a></li>\n            </ul>\n          </li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"/uxp-xd/develop/reference/Lottie\"\n            }}>{`Lottie`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"/uxp-xd/develop/reference/Video\"\n            }}>{`Video`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"/uxp-xd/develop/reference/Group\"\n            }}>{`Group`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"/uxp-xd/develop/reference/SymbolInstance\"\n            }}>{`SymbolInstance`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"/uxp-xd/develop/reference/RepeatGrid\"\n            }}>{`RepeatGrid`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"/uxp-xd/develop/reference/ScrollableGroup\"\n            }}>{`ScrollableGroup`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"/uxp-xd/develop/reference/LinkedGraphic\"\n            }}>{`LinkedGraphic`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"/uxp-xd/develop/reference/RootNode\"\n            }}>{`RootNode`}</a></li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"typedefs\"\n    }}>{`Typedefs`}</h2>\n    <h3 {...{\n      \"id\": \"typedef-point\"\n    }}>{`Typedef Point`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Point: `}<inlineCode parentName=\"li\">{`{x:number, y:number}`}</inlineCode></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"typedef-bounds\"\n    }}>{`Typedef Bounds`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Bounds: `}<inlineCode parentName=\"li\">{`{x:number, y:number, width:number, height:number}`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"selection\"\n    }}>{`selection`}</h2>\n    <p>{`▸ `}<strong parentName=\"p\">{`selection`}</strong>{`: `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/selection\"\n      }}>{`selection`}</a></p>\n    <p><strong parentName=\"p\">{`Since`}</strong>{`: XD 14`}</p>\n    <p>{`Object representing the current selection state and `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/plugin-development/xd-concepts/edit-context/\"\n      }}>{`edit context`}</a>{`. Also available as the first argument passed to your plugin command handler function.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static property of `}<a parentName=\"p\" {...{\n        \"href\": \"#scenegraph\"\n      }}>{`scenegraph`}</a>{`\n`}<strong parentName=\"p\">{`Read only`}</strong>{`: true`}</p>\n    <h2 {...{\n      \"id\": \"root\"\n    }}>{`root`}</h2>\n    <p>{`▸ `}<strong parentName=\"p\">{`root`}</strong>{`: `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/RootNode\"\n      }}>{`RootNode`}</a></p>\n    <p><strong parentName=\"p\">{`Since`}</strong>{`: XD 14`}</p>\n    <p>{`Root node of the current document's scenegraph. Also available as the second argument passed to your plugin command handler function.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static property of `}<a parentName=\"p\" {...{\n        \"href\": \"#scenegraph\"\n      }}>{`scenegraph`}</a>{`\n`}<strong parentName=\"p\">{`Read only`}</strong>{`: true`}</p>\n    <h2 {...{\n      \"id\": \"getnodebyguid\"\n    }}>{`getNodeByGUID()`}</h2>\n    <p>{`▸ `}<strong parentName=\"p\">{`getNodeByGUID`}</strong>{`(`}<inlineCode parentName=\"p\">{`guid`}</inlineCode>{`): `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/SceneNode\"\n      }}>{`SceneNode`}</a></p>\n    <p><strong parentName=\"p\">{`Since`}</strong>{`: XD 28`}</p>\n    <p>{`Returns the scenenode in this document that has the given `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/SceneNode/#guid\"\n      }}>{`node GUID`}</a>{`. Returns undefined if no such node exists connected\nto the scenegraph tree (detached/orphan nodes will not be found). This provides a fast way of persistently remembering a node across plugin\noperations and even across document open/closes.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`guid`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`SceneNode GUID -- must be all lowercase, as returned by the `}<a parentName=\"td\" {...{\n              \"href\": \"/uxp-xd/develop/reference/SceneNode/#guid\"\n            }}>{`guid getter`}</a></td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`let node = scenegraph.selection.items[0];\nlet guid = node.guid;\n\n// ...later on:\nlet sameNode = scenegraph.getNodeByGUID(guid);\nif (sameNode) {\n  // ^ Always check if node still exists - user may have deleted it\n  console.log(\"Found node again!\", sameNode);\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static method of `}<a parentName=\"p\" {...{\n        \"href\": \"#scenegraph\"\n      }}>{`scenegraph`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}