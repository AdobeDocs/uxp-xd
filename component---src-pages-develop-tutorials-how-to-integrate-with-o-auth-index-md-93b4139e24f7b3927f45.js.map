{"version":3,"file":"component---src-pages-develop-tutorials-how-to-integrate-with-o-auth-index-md-93b4139e24f7b3927f45.js","mappings":"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","sources":["webpack://uxp-xd/./src/pages/develop/tutorials/how-to-integrate-with-OAuth/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"how-to-integrate-with-oauth\"\n    }}>{`How to Integrate with OAuth`}</h1>\n    <p>{`This tutorial will show you how to implement the OAuth workflow in an XD plugin, using the Dropbox API as an example.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`info`}</strong>{`\nAuth workflows are necessarily complex, so this tutorial will be on the longer side and make use of some advanced concepts. Please read the each section carefully, especially the Prerequisites and Configuration sections.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Basic knowledge of HTML, CSS, and JavaScript.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"/uxp-xd/develop/tutorials/quick-start/\"\n          }}>{`Quick Start Tutorial`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"/uxp-xd/develop/tutorials/debugging/\"\n          }}>{`Debugging Tutorial`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Familiarity with your OS's command line application`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Familiarity with `}<a parentName=\"p\" {...{\n            \"href\": \"https://oauth.net/2/\"\n          }}>{`OAuth`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"https://www.dropbox.com/developers/apps/create\"\n          }}>{`A registered app on Dropbox`}</a>{` with the following settings:`}</p>\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`Choose \"Dropbox API\"`}</li>\n          <li parentName=\"ol\">{`Choose \"Full Dropbox\" for the access type`}</li>\n          <li parentName=\"ol\">{`In `}<inlineCode parentName=\"li\">{`Redirect URIs`}</inlineCode>{`, add your own `}<inlineCode parentName=\"li\">{`https`}</inlineCode>{` `}<inlineCode parentName=\"li\">{`ngrok`}</inlineCode>{` URL (example: \"`}<a parentName=\"li\" {...{\n              \"href\": \"https://476322de.ngrok.io/callback%22\"\n            }}>{`https://476322de.ngrok.io/callback\"`}</a>{`) or a secure public URL if you have one`}</li>\n        </ol>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"technology-used\"\n    }}>{`Technology Used`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`[Install required][Node.js]`}{`(`}<a parentName=\"li\" {...{\n          \"href\": \"https://nodejs.org/en/\"\n        }}>{`https://nodejs.org/en/`}</a>{`) and the `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.npmjs.com\"\n        }}><inlineCode parentName=\"a\">{`npm`}</inlineCode>{` package manager`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://oauth.net/2/\"\n        }}>{`OAuth`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://ngrok.com/\"\n        }}>{`ngrok`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.dropbox.com/developers/documentation/http/overview\"\n        }}>{`Dropbox API`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"overview-of-the-oauth-workflow\"\n    }}>{`Overview of the OAuth workflow`}</h2>\n    <p>{`There are three parts of this workflow:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Your XD plugin`}</li>\n      <li parentName=\"ul\">{`Your server endpoints (for this development example, we'll create a local Node.js server)`}</li>\n      <li parentName=\"ul\">{`The service providers OAuth endpoints (for this example, the Dropbox API)`}</li>\n    </ul>\n    <p>{`The high-level workflow is as follows:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`The XD plugin pings the server to get the session ID`}</li>\n      <li parentName=\"ol\">{`The server returns a unique ID for the user's XD session`}</li>\n      <li parentName=\"ol\">{`Plugin opens a tab in user's default browser with a URL pointing to an endpoint on the server`}</li>\n      <li parentName=\"ol\">{`The server handles the entire OAuth code grant workflow`}</li>\n      <li parentName=\"ol\">{`The user gives necessary permissions to the plugin`}</li>\n      <li parentName=\"ol\">{`The server saves the access token paired with the session ID`}</li>\n      <li parentName=\"ol\">{`The plugin polls the server to check if the access token is available for the session ID. If the token is available, the server sends the access token back`}</li>\n      <li parentName=\"ol\">{`The plugin uses the access token to make API calls to the service API`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"configuration\"\n    }}>{`Configuration`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Info`}</strong>{`\nComplete code for this plugin can be found `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/AdobeXD/Plugin-Samples/tree/master/how-to-integrate-with-OAuth\"\n        }}>{`on GitHub`}</a>{`.`}</p>\n    </blockquote>\n    <p>{`The following steps will help you get the sample code from our GitHub repo up and running.`}</p>\n    <h3 {...{\n      \"id\": \"1-install-nodejs-packages\"\n    }}>{`1. Install Node.js packages`}</h3>\n    <p>{`Inside the sample repo's `}<inlineCode parentName=\"p\">{`server`}</inlineCode>{` folder, there is a `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file that contains a list of dependencies. Run the following command from the top level directory of the repo to install the dependencies:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ cd server\n$ npm install\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"2-use-ngrok-to-create-a-public-ssl-url\"\n    }}>{`2. Use `}<inlineCode parentName=\"h3\">{`ngrok`}</inlineCode>{` to create a public SSL URL`}</h3>\n    <p>{`You can use either `}<a parentName=\"p\" {...{\n        \"href\": \"https://ngrok.com/\"\n      }}>{`ngrok`}</a>{` to create a public SSL endpoint, or use your own public URL.`}</p>\n    <p>{`To use `}<inlineCode parentName=\"p\">{`ngrok`}</inlineCode>{`, first `}<a parentName=\"p\" {...{\n        \"href\": \"https://ngrok.com/download\"\n      }}>{`download it to your machine`}</a>{`.`}</p>\n    <p>{`You can run `}<inlineCode parentName=\"p\">{`ngrok`}</inlineCode>{` from anywhere on your machine, but since we're already in the `}<inlineCode parentName=\"p\">{`server`}</inlineCode>{` folder, we'll move `}<inlineCode parentName=\"p\">{`ngrok`}</inlineCode>{` there for convenience.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`mv ~/Downloads/ngrok ./\n`}</code></pre>\n    <p>{`Then we run it:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`./ngrok http 8000\n`}</code></pre>\n    <p>{`Now `}<inlineCode parentName=\"p\">{`ngrok`}</inlineCode>{` is forwarding all HTTP requests from port `}<inlineCode parentName=\"p\">{`8000`}</inlineCode>{` to a public SSL endpoint.`}</p>\n    <p>{`You can see the forwarding endpoint currently being used in the `}<inlineCode parentName=\"p\">{`ngrok`}</inlineCode>{` terminal output. Note the forwarding endpoint; we'll use it in the next step.`}</p>\n    <h3 {...{\n      \"id\": \"3-set-your-api-credentials-and-public-url\"\n    }}>{`3. Set your API credentials and public URL`}</h3>\n    <p>{`Enter the required credentials in `}<inlineCode parentName=\"p\">{`public/config.js`}</inlineCode>{`. You'll need:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Your Dropbox API key`}</li>\n      <li parentName=\"ul\">{`Your Dropbox API secret`}</li>\n      <li parentName=\"ul\">{`Your `}<inlineCode parentName=\"li\">{`ngrok`}</inlineCode>{` public URL`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const dropboxApiKey = \"YOUR-DROPBOX-API-KEY\";\nconst dropboxApiSecret = \"YOUR-DROPBOX-SECRET\";\nconst publicUrl = \"YOUR-PUBLIC-URL\"; // e.g. https://476322de.ngrok.io/\n\ntry {\n  if (module) {\n    module.exports = {\n      dropboxApiKey: dropboxApiKey,\n      dropboxApiSecret: dropboxApiSecret,\n      publicUrl: publicUrl,\n    };\n  }\n} catch (err) {\n  console.log(err);\n}\n`}</code></pre>\n    <p>{`Our server will make use of these settings in a later step.`}</p>\n    <h3 {...{\n      \"id\": \"4-start-the-server\"\n    }}>{`4. Start the server`}</h3>\n    <p>{`After completing the configuration steps, start the server from the `}<inlineCode parentName=\"p\">{`server`}</inlineCode>{` folder:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$ npm start\n`}</code></pre>\n    <p>{`Now you have a running server with an HTTPS endpoint and your Dropbox credentials ready to go.`}</p>\n    <h2 {...{\n      \"id\": \"development-steps\"\n    }}>{`Development Steps`}</h2>\n    <p>{`Now we can get back to the XD plugin side of things!`}</p>\n    <h3 {...{\n      \"id\": \"1-create-plugin-scaffold\"\n    }}>{`1. Create plugin scaffold`}</h3>\n    <p>{`First, edit the manifest file for the plugin you created in our `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/tutorials/quick-start\"\n      }}>{`Quick Start Tutorial`}</a>{`.`}</p>\n    <p>{`Replace the `}<inlineCode parentName=\"p\">{`uiEntryPoints`}</inlineCode>{` field of the manifest with the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"uiEntryPoints\": [\n        {\n                \"type\": \"menu\",\n                \"label\": \"How to Integrate with OAuth (Must run Server first)\",\n                \"commandId\": \"launchOAuth\"\n        }\n]\n`}</code></pre>\n    <p>{`If you're curious about what each entry means, `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/plugin-development/plugin-structure/manifest/\"\n      }}>{`see the manifest documentation`}</a>{`, where you can also learn about all manifest requirements for a plugin to be published in the XD Plugin Manager.`}</p>\n    <p>{`Then, update your `}<inlineCode parentName=\"p\">{`main.js`}</inlineCode>{` file, mapping the manifest's `}<inlineCode parentName=\"p\">{`commandId`}</inlineCode>{` to a handler function.`}</p>\n    <p>{`Replace the content of your `}<inlineCode parentName=\"p\">{`main.js`}</inlineCode>{` file with the following code (note the presence of the `}<inlineCode parentName=\"p\">{`async`}</inlineCode>{` keyword, which we'll look at in a later step):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`async function launchOAuth(selection) {\n  // The body of this function is added later\n}\n\nmodule.exports = {\n  commands: {\n    launchOAuth,\n  },\n};\n`}</code></pre>\n    <p>{`The remaining steps in this tutorial describe additional edits to the `}<inlineCode parentName=\"p\">{`main.js`}</inlineCode>{` file.`}</p>\n    <h3 {...{\n      \"id\": \"2-require-in-xd-api-dependencies\"\n    }}>{`2. Require in XD API dependencies`}</h3>\n    <p>{`For this tutorial, we just need access to two XD scenegraph classes.`}</p>\n    <p>{`Add the following lines to the top of your plugin's top-level `}<inlineCode parentName=\"p\">{`main.js`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const { Text, Color } = require(\"scenegraph\");\n`}</code></pre>\n    <p>{`Now the `}<inlineCode parentName=\"p\">{`Text`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Color`}</inlineCode>{` classes are required in and ready to be used.`}</p>\n    <h3 {...{\n      \"id\": \"3-store-the-public-url\"\n    }}>{`3. Store the public URL`}</h3>\n    <p>{`Your plugin will also need to know your public URL. Since we used `}<inlineCode parentName=\"p\">{`ngrok`}</inlineCode>{` earlier, we'll make a constant with that URL:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const publicUrl = \"YOUR-PUBLIC-URL\"; // e.g. https://476322de.ngrok.io/\n`}</code></pre>\n    <p>{`This url will be used to send requests to your server.`}</p>\n    <h3 {...{\n      \"id\": \"4-create-a-variable-to-store-the-access-token\"\n    }}>{`4. Create a variable to store the access token`}</h3>\n    <p>{`Once you receive the access token from your server, you can use the token for API calls as long as the token is stored in memory and the XD session is alive.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`let accessToken;\n`}</code></pre>\n    <p>{`We'll assign the value later.`}</p>\n    <h3 {...{\n      \"id\": \"5-write-a-helper-function-for-xhr-requests\"\n    }}>{`5. Write a helper function for XHR requests`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// XHR helper function\nfunction xhrRequest(url, method) {\n  return new Promise((resolve, reject) => {\n    // [1]\n    const req = new XMLHttpRequest();\n    req.timeout = 6000; // [2]\n    req.onload = () => {\n      if (req.status === 200) {\n        try {\n          resolve(req.response); // [3]\n        } catch (err) {\n          reject(\\`Couldn't parse response. \\${err.message}, \\${req.response}\\`);\n        }\n      } else {\n        reject(\\`Request had an error: \\${req.status}\\`);\n      }\n    };\n    req.ontimeout = () => {\n      console.log(\"polling..\"); // [4]\n      resolve(xhrRequest(url, method));\n    };\n    req.onerror = (err) => {\n      console.log(err);\n      reject(err);\n    };\n    req.open(method, url, true); // [5]\n    req.responseType = \"json\";\n    req.send();\n  });\n}\n`}</code></pre>\n    <ol>\n      <li parentName=\"ol\">{`This helper function returns a promise object`}</li>\n      <li parentName=\"ol\">{`Request timeout is set to 6000 miliseconds`}</li>\n      <li parentName=\"ol\">{`On a successful request, the promise is resolved with `}<inlineCode parentName=\"li\">{`req.response`}</inlineCode>{`. In any other scenarios, the promise is rejected`}</li>\n      <li parentName=\"ol\">{`If the request was timed out after 6000 miliseconds, the function loops and keeps sending XHR request until the response is received`}</li>\n      <li parentName=\"ol\">{`The function sends the request to the specified `}<inlineCode parentName=\"li\">{`url`}</inlineCode>{` with the specified `}<inlineCode parentName=\"li\">{`method`}</inlineCode></li>\n    </ol>\n    <h3 {...{\n      \"id\": \"6-get-the-session-id\"\n    }}>{`6. Get the session ID`}</h3>\n    <p>{`We'll make an XHR request.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const rid = await xhrRequest(\\`\\${publicUrl}/getRequestId\\`, \"GET\").then(\n  (response) => {\n    return response.id;\n  }\n);\n`}</code></pre>\n    <p>{`This part of the function sends a `}<inlineCode parentName=\"p\">{`GET`}</inlineCode>{` request to your server's `}<inlineCode parentName=\"p\">{`getRequestId`}</inlineCode>{` endpoint and returns `}<inlineCode parentName=\"p\">{`response.id`}</inlineCode>{`.`}</p>\n    <p>{`Let's take a look at the code on the server side:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`/* Authorized Request IDs (simulating database) */\nconst requestIds = {}; // [1]\n\napp.get(\"/getRequestId\", function (req, res) {\n  /* Simulating writing to a database */\n  for (let i = 1; i < 100; i++) {\n    // [2]\n    if (!(i in requestIds)) {\n      requestIds[i] = {};\n      console.log(i);\n      res.json({ id: i });\n      break;\n    }\n  }\n});\n`}</code></pre>\n    <ol>\n      <li parentName=\"ol\">{`Note that there is a global variable, `}<inlineCode parentName=\"li\">{`requestIDs`}</inlineCode>{`, which is an empty JavaScript object. For the sake of simplicity, we are using this object to simulate a database`}</li>\n      <li parentName=\"ol\">{`This loop function simulates writing to a database by creating a new id, save the id in the global object, and `}<inlineCode parentName=\"li\">{`res.json`}</inlineCode>{` with the id`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"7-open-the-default-browser-with-the-url-pointing-to-your-server\"\n    }}>{`7. Open the default browser with the URL pointing to your server`}</h3>\n    <p>{`To open the machine's default browser from an XD plugin, we can use UXP's `}<inlineCode parentName=\"p\">{`shell`}</inlineCode>{` module:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`require(\"uxp\").shell.openExternal(\\`\\${publicUrl}/login?requestId=\\${rid}\\`);\n`}</code></pre>\n    <p>{`This will open the browser with the url pointing to an endpoint on your server.`}</p>\n    <p>{`Let's take a look at the code on the server side.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`app.get(\"/login\", function (req, res) {\n  let requestId = req.query.requestId; // [1]\n  /* This will prompt user with the Dropbox auth screen */\n  res.redirect(\n    \\`https://www.dropbox.com/oauth2/authorize?response_type=code&client_id=\\${dropboxApiKey}&redirect_uri=\\${publicUrl}/callback&state=\\${requestId}\\`\n  ); // [2]\n});\n\napp.get(\"/callback\", function (req, res) {\n  /* Retrieve authorization code from request */\n  let code = req.query.code; // [3]\n  let requestId = req.query.state;\n\n  /* Set options with required paramters */\n  let requestOptions = {\n    // [4]\n    uri: \\`https://api.dropboxapi.com/oauth2/token?grant_type=authorization_code&code=\\${code}&client_id=\\${dropboxApiKey}&client_secret=\\${dropboxApiSecret}&redirect_uri=\\${publicUrl}/callback\\`,\n    method: \"POST\",\n    json: true,\n  };\n\n  /* Send a POST request using the request library */\n  request(requestOptions) // [5]\n    .then(function (response) {\n      /* Store the token in req.session.token */\n      req.session.token = response.access_token; // [6]\n\n      /* Simulating writing to a database */\n      requestIds[requestId][\"accessToken\"] = response.access_token; // [7]\n      res.end();\n    })\n    .catch(function (error) {\n      res.json({ response: \"Log in failed!\" });\n    });\n});\n`}</code></pre>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`/login`}</inlineCode>{` route grabs the `}<inlineCode parentName=\"li\">{`requestId`}</inlineCode>{` from the query parameter`}</li>\n      <li parentName=\"ol\">{`and redirects to the Dropbox's `}<inlineCode parentName=\"li\">{`authorize`}</inlineCode>{` endpoint and pass the `}<inlineCode parentName=\"li\">{`requestId`}</inlineCode>{` to the optional parameter, `}<inlineCode parentName=\"li\">{`state`}</inlineCode>{`. This redirect will prompt the login screen on the user's browser`}</li>\n      <li parentName=\"ol\">{`Once the dropbox API returns the `}<inlineCode parentName=\"li\">{`code`}</inlineCode>{` to the specified callback endpoint, `}<inlineCode parentName=\"li\">{`/callback`}</inlineCode>{`, which then parses the `}<inlineCode parentName=\"li\">{`code`}</inlineCode>{` and the `}<inlineCode parentName=\"li\">{`requestId`}</inlineCode></li>\n      <li parentName=\"ol\">{`Set `}<inlineCode parentName=\"li\">{`requestOptions`}</inlineCode>{` object with Dropbox's token URI`}</li>\n      <li parentName=\"ol\">{`Use the `}<inlineCode parentName=\"li\">{`request`}</inlineCode>{` library to send the `}<inlineCode parentName=\"li\">{`POST`}</inlineCode>{` request`}</li>\n      <li parentName=\"ol\">{`Store the access token received from Dropbox in the session object`}</li>\n      <li parentName=\"ol\">{`Simulate writing to a database by paring the access token with `}<inlineCode parentName=\"li\">{`requestId`}</inlineCode>{` and storing it to `}<inlineCode parentName=\"li\">{`requestIds`}</inlineCode>{` global object`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"8-poll-the-server-until-access-token-is-received\"\n    }}>{`8. Poll the server until access token is received`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`accessToken = await xhrRequest(\n  \\`\\${publicUrl}/getCredentials?requestId=\\${rid}\\`,\n  \"GET\"\n).then((tokenResponse) => {\n  return tokenResponse.accessToken;\n});\n`}</code></pre>\n    <p>{`As noted in step #4, the `}<inlineCode parentName=\"p\">{`xhrRequest`}</inlineCode>{` helper function is designed to poll the server if the initial request is not responded in 6000 miliseconds. Once the user completes the OAuth workflow in the browser, polling should stop and this request should be returned with the access token.`}</p>\n    <h3 {...{\n      \"id\": \"9-show-a-dialog-indicating-the-token-has-been-received\"\n    }}>{`9. Show a dialog indicating the token has been received`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// create the dialog\nlet dialog = document.createElement(\"dialog\"); // [1]\n\n// main container\nlet container = document.createElement(\"div\"); // [2]\ncontainer.style.minWidth = 400;\ncontainer.style.padding = 40;\n\n// add content\nlet title = document.createElement(\"h3\"); // [3]\ntitle.style.padding = 20;\ntitle.textContent = \\`XD and Dropbox are now connected\\`;\ncontainer.appendChild(title);\n\n// close button\nlet closeButton = document.createElement(\"button\"); // [4]\ncloseButton.textContent = \"Got it!\";\ncontainer.appendChild(closeButton);\n\ncloseButton.onclick = (e) => {\n  // [5]\n  dialog.close();\n};\n\ndocument.body.appendChild(dialog); // [6]\ndialog.appendChild(container);\ndialog.showModal();\n`}</code></pre>\n    <p>{`Just like HTML DOM APIs, you can use `}<inlineCode parentName=\"p\">{`document.createElement`}</inlineCode>{` method to create UI objects. Elements have the `}<inlineCode parentName=\"p\">{`style`}</inlineCode>{` property which contains metrics properties you can set`}</p>\n    <ol>\n      <li parentName=\"ol\">{`The `}<inlineCode parentName=\"li\">{`dialog`}</inlineCode>{` element is the modal window that pops down in XD`}</li>\n      <li parentName=\"ol\">{`Create a container `}<inlineCode parentName=\"li\">{`div`}</inlineCode>{` element`}</li>\n      <li parentName=\"ol\">{`Create a `}<inlineCode parentName=\"li\">{`h3`}</inlineCode>{` element to let the user know the auth workflow has been completed`}</li>\n      <li parentName=\"ol\">{`You need at least one exit point. Create a close button and add it to the container`}</li>\n      <li parentName=\"ol\">{`Create a listener for the click event and close the dialog`}</li>\n      <li parentName=\"ol\">{`Attach the dialog to the document, add the container, and use `}<inlineCode parentName=\"li\">{`showModal`}</inlineCode>{` method to show the modal`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"10-make-an-api-call-to-dropbox\"\n    }}>{`10. Make an API call to Dropbox`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const dropboxProfileUrl = \\`https://api.dropboxapi.com/2/users/get_current_account?authorization=Bearer%20\\${accessToken}\\`; // [1]\nconst dropboxProfile = await xhrRequest(dropboxProfileUrl, \"POST\"); // [2]\n`}</code></pre>\n    <ol>\n      <li parentName=\"ol\">{`Note that received `}<inlineCode parentName=\"li\">{`accessToken`}</inlineCode>{` is included in this Dropbox API call to retrieve the current account's profile`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`xhrRequest`}</inlineCode>{` helper function is used again to make this `}<inlineCode parentName=\"li\">{`POST`}</inlineCode>{` call`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"10-create-a-text-element-to-show-the-profile-information-inside-the-current-artboard\"\n    }}>{`10. Create a text element to show the profile information inside the current artboard`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const text = new Text(); // [1]\ntext.text = JSON.stringify(dropboxProfile); // [2]\ntext.styleRanges = [\n  // [3]\n  {\n    length: text.text.length,\n    fill: new Color(\"#0000ff\"),\n    fontSize: 10,\n  },\n];\nselection.insertionParent.addChild(text); // [4]\ntext.moveInParentCoordinates(100, 100); // [5]\n`}</code></pre>\n    <ol>\n      <li parentName=\"ol\">{`Create a new `}<inlineCode parentName=\"li\">{`Text`}</inlineCode>{` instance in XD`}</li>\n      <li parentName=\"ol\">{`Populate the text with the stringified version of the profile `}<inlineCode parentName=\"li\">{`json`}</inlineCode>{` object`}</li>\n      <li parentName=\"ol\">{`Add the `}<inlineCode parentName=\"li\">{`styleRanges`}</inlineCode>{` for the text`}</li>\n      <li parentName=\"ol\">{`Insert the text`}</li>\n      <li parentName=\"ol\">{`Move the text inside the artboard to make it visible`}</li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}