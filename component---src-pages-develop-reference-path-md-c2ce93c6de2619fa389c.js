"use strict";(self.webpackChunkuxp_xd=self.webpackChunkuxp_xd||[]).push([[9253],{5265:function(t,e,a){a.r(e),a.d(e,{_frontmatter:function(){return i},default:function(){return h}});var n=a(87462),p=a(63366),r=(a(15007),a(64983)),o=a(91515),d=["components"],i={},s={_frontmatter:i},m=o.Z;function h(t){var e=t.components,a=(0,p.Z)(t,d);return(0,r.mdx)(m,(0,n.Z)({},s,a,{components:e,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"path"},"Path"),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Kind"),": class\n",(0,r.mdx)("strong",{parentName:"p"},"Extends"),": ",(0,r.mdx)("a",{parentName:"p",href:"/uxp-xd/develop/reference/GraphicNode"},"GraphicNode")),(0,r.mdx)("p",null,'Arbitrary vector Path leaf node shape. Paths can be open or closed, and a Path may include multiple disjoint sections (a.k.a. a "compound\npath"). Even open Paths may have a fill - the fill is drawn as if the Path were closed with a final "Z" segment.'),(0,r.mdx)("p",null,'The path may not start at (0,0) in local coordinates, for example if it starts with a move ("M") segment.'),(0,r.mdx)("h2",{id:"pathdata"},"pathData"),(0,r.mdx)("p",null,"â–¸ ",(0,r.mdx)("strong",{parentName:"p"},"pathData"),": ",(0,r.mdx)("inlineCode",{parentName:"p"},"string")),(0,r.mdx)("p",null,"Representation of the path outline in SVG ",(0,r.mdx)("inlineCode",{parentName:"p"},"<path>")," syntax. Unlike other node types, pathData is writable here. Syntax is\nautomatically normalized, so the getter may return a slightly different string than what you passed to the setter."),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,r.mdx)("a",{parentName:"p",href:"#path"},"Path")))}h.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-develop-reference-path-md-c2ce93c6de2619fa389c.js.map