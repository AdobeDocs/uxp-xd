{"version":3,"file":"component---src-pages-develop-reference-uxp-class-xml-http-request-md-a208118706e27cad47be.js","mappings":"mQAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,cAAGC,KAAK,+BAA+BC,GAAG,kCAC1C,eACE,GAAM,kBADR,mBAGA,oBACE,eAAIC,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,iCADQ,oBAGlB,eAAIA,WAAW,OACb,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,yCADQ,0BAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,6CADQ,kBAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,4CADQ,iBAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,8CADQ,mBAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,6CADQ,kBAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,0CADQ,eAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,wCADQ,aAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,4CADQ,iBAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,yCADQ,cAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,yCADQ,cAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,8CADQ,mBAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,8CADQ,mBAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,iDADQ,sBAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,iDADQ,sBAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,wCADQ,aAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,uCADQ,cAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,uDADQ,8BAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,mDADQ,8BAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,sCADQ,qDAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,kDADQ,iCAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,kDADQ,qCAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,sCADQ,sBAM1B,cAAGF,KAAK,uCAAuCC,GAAG,0CAClD,eACE,GAAM,sBADR,yBAGA,sHACA,cAAGD,KAAK,2CAA2CC,GAAG,8CACtD,eACE,GAAM,6BADR,+BAGA,kCACA,mBAAG,mBAAQC,WAAW,KAAnB,eACH,cAAGF,KAAK,0CAA0CC,GAAG,6CACrD,eACE,GAAM,4BADR,8BAGA,2EACA,mBAAG,mBAAQC,WAAW,KAAnB,WAAH,MAAoD,uBAAYA,WAAW,KAAvB,OAApD,uDACA,mBAAG,mBAAQA,WAAW,KAAnB,eACH,cAAGF,KAAK,4CAA4CC,GAAG,+CACvD,eACE,GAAM,8BADR,gCAGA,+JACA,mBAAG,mBAAQC,WAAW,KAAnB,WAAH,MAAoD,uBAAYA,WAAW,KAAvB,UAApD,2CACA,mBAAG,mBAAQA,WAAW,KAAnB,eACH,cAAGF,KAAK,2CAA2CC,GAAG,8CACtD,eACE,GAAM,6BADR,+BAGA,sKAEA,mBAAG,mBAAQC,WAAW,KAAnB,WAAH,MAAoD,uBAAYA,WAAW,KAAvB,UAApD,0CACA,mBAAG,mBAAQA,WAAW,KAAnB,UAAH,MACA,oBACE,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,kBACP,uBAAYA,WAAW,KAAvB,iBAFL,6DAIF,mBAAG,mBAAQA,WAAW,KAAnB,eACH,cAAGF,KAAK,wCAAwCC,GAAG,2CACnD,eACE,GAAM,0BADR,4BAGA,0IAEA,mBAAG,mBAAQC,WAAW,KAAnB,WAAH,MAAoD,uBAAYA,WAAW,KAAvB,UAApD,aAAqH,uBAAYA,WAAW,KAAvB,eAArH,aAA2L,uBAAYA,WAAW,KAAvB,QAA3L,aAA0P,uBAAYA,WAAW,KAAvB,UAA1P,kLAEA,mBAAG,mBAAQA,WAAW,KAAnB,eACH,cAAGF,KAAK,sCAAsCC,GAAG,yCACjD,eACE,GAAM,wBADR,0BAGA,mBAAG,mBAAQC,WAAW,KAAnB,WAAH,MAAoD,uBAAYA,WAAW,KAAvB,UAApD,8DACA,mBAAG,mBAAQA,WAAW,KAAnB,eACH,cAAGF,KAAK,0CAA0CC,GAAG,6CACrD,eACE,GAAM,4BADR,8BAGA,mBAAG,mBAAQC,WAAW,KAAnB,WAAH,MAAoD,uBAAYA,WAAW,KAAvB,UAApD,2GACA,mBAAG,mBAAQA,WAAW,KAAnB,eACH,cAAGF,KAAK,uCAAuCC,GAAG,0CAClD,eACE,GAAM,yBADR,2BAGA,qKAEA,cAAGD,KAAK,uCAAuCC,GAAG,0CAClD,eACE,GAAM,2BADR,2BAGA,mHACA,mBAAG,mBAAQC,WAAW,KAAnB,UAAH,MACA,oBACE,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,kBACP,uBAAYA,WAAW,KAAvB,iBAFL,yCAIF,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,UAGA,eAAIA,WAAW,KACb,MAAS,MADX,SAGA,eAAIA,WAAW,KACb,MAAS,MADX,kBAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,UAGA,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,YACH,eAAIA,WAAW,KACb,MAAS,MADX,iFAMN,cAAGF,KAAK,4CAA4CC,GAAG,+CACvD,eACE,GAAM,8BADR,gCAGA,mBAAG,mBAAQC,WAAW,KAAnB,WAAH,MAAoD,uBAAYA,WAAW,KAAvB,UAApD,kIAEA,cAAGF,KAAK,4CAA4CC,GAAG,+CACvD,eACE,GAAM,gCADR,gCAGA,uBACE,kBAAOC,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,UAGA,eAAIA,WAAW,KACb,MAAS,MADX,SAGA,eAAIA,WAAW,KACb,MAAS,MADX,kBAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,UAGA,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,YACH,eAAIA,WAAW,KACb,MAAS,MADX,2IAMN,cAAGF,KAAK,+CAA+CC,GAAG,kDAC1D,eACE,GAAM,iCADR,mCAGA,0KAEA,cAAGD,KAAK,+CAA+CC,GAAG,kDAC1D,eACE,GAAM,mCADR,mCAGA,mBAAG,mBAAQC,WAAW,KAAnB,UAAH,MACA,oBACE,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,kBACP,uBAAYA,WAAW,KAAvB,iBAFL,iDAIF,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,UAGA,eAAIA,WAAW,KACb,MAAS,MADX,SAGA,eAAIA,WAAW,KACb,MAAS,MADX,YAGA,eAAIA,WAAW,KACb,MAAS,MADX,kBAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,YAGA,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,aACH,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,UACH,eAAIA,WAAW,KACb,MAAS,MADX,kDAMN,cAAGF,KAAK,sCAAsCC,GAAG,yCACjD,eACE,GAAM,wBADR,0BAGA,yIACA,mBAAG,mBAAQC,WAAW,KAAnB,WAAH,MAAoD,uBAAYA,WAAW,KAAvB,6BAApD,iDACA,mBAAG,mBAAQA,WAAW,KAAnB,eACH,cAAGF,KAAK,qCAAqCC,GAAG,wCAChD,eACE,GAAM,uBADR,2BAGA,sEACA,cAAGD,KAAK,qDAAqDC,GAAG,wDAChE,eACE,GAAM,uCADR,2CAGA,8MAEA,mBAAG,mBAAQC,WAAW,KAAnB,WAAH,MAAoD,uBAAYA,WAAW,KAAvB,UAApD,uCACA,mBAAG,mBAAQA,WAAW,KAAnB,eACH,cAAGF,KAAK,iDAAiDC,GAAG,oDAC5D,eACE,GAAM,uCADR,2CAGA,yIAEA,mBAAG,mBAAQC,WAAW,KAAnB,WAAH,MAAoD,uBAAYA,WAAW,KAAvB,UAApD,sEACA,mBAAG,mBAAQA,WAAW,KAAnB,eACH,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,UAGA,eAAIA,WAAW,KACb,MAAS,MADX,SAGA,eAAIA,WAAW,KACb,MAAS,MADX,kBAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,SAGA,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,YACH,eAAIA,WAAW,KACb,MAAS,MADX,qDAMN,cAAGF,KAAK,oCAAoCC,GAAG,uCAC/C,eACE,GAAM,oDADR,oFAGA,+OAEA,uBACE,kBAAOC,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,UAGA,eAAIA,WAAW,KACb,MAAS,MADX,SAGA,eAAIA,WAAW,KACb,MAAS,MADX,YAGA,eAAIA,WAAW,KACb,MAAS,MADX,kBAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,WAGA,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,YACH,eAAIA,WAAW,KACb,MAAS,QAEX,eAAIA,WAAW,KACb,MAAS,MADX,gHAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,QAGA,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,YACH,eAAIA,WAAW,KACb,MAAS,QAEX,eAAIA,WAAW,KACb,MAAS,MADX,8DAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,YAGA,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,aACH,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,UACH,eAAIA,WAAW,KACb,MAAS,MADX,ydAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,WAGA,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,YACH,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,UACH,eAAIA,WAAW,KACb,MAAS,MADX,oGAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,eAGA,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,YACH,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,UACH,eAAIA,WAAW,KACb,MAAS,MADX,qGAMN,cAAGF,KAAK,gDAAgDC,GAAG,mDAC3D,eACE,GAAM,0CADR,8CAGA,2OAEA,mBAAG,mBAAQC,WAAW,KAAnB,UAAH,MACA,oBACE,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,kBACP,uBAAYA,WAAW,KAAvB,iBAFL,kCAIF,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,UAGA,eAAIA,WAAW,KACb,MAAS,MADX,SAGA,eAAIA,WAAW,KACb,MAAS,MADX,kBAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,aAGA,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,YACH,eAAIA,WAAW,KACb,MAAS,MADX,6JAMN,cAAGF,KAAK,gDAAgDC,GAAG,mDAC3D,eACE,GAAM,6CADR,kDAGA,iIACA,uBACE,kBAAOC,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,UAGA,eAAIA,WAAW,KACb,MAAS,MADX,SAGA,eAAIA,WAAW,KACb,MAAS,MADX,kBAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,WAGA,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,YACH,eAAIA,WAAW,KACb,MAAS,MADX,sDAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,SAGA,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,YACH,eAAIA,WAAW,KACb,MAAS,MADX,mDAMN,cAAGF,KAAK,oCAAoCC,GAAG,uCAC/C,eACE,GAAM,0BADR,sCAGA,oJACA,uBACE,kBAAOC,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,UAGA,eAAIA,WAAW,KACb,MAAS,MADX,SAGA,eAAIA,WAAW,KACb,MAAS,MADX,YAGA,eAAIA,WAAW,KACb,MAAS,MADX,kBAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,WAGA,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,SACH,eAAIA,WAAW,KACb,MAAS,MADX,OAGA,eAAIA,WAAW,KACb,MAAS,MADX,y3BAQT,CAEDN,EAAWO,gBAAiB,C","sources":["webpack://uxp-xd/./src/pages/develop/reference/uxp/class/XMLHttpRequest.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <a name=\"module-global-xmlhttprequest\" id=\"module-global-xmlhttprequest\"></a>\n    <h2 {...{\n      \"id\": \"xmlhttprequest\"\n    }}>{`XMLHttpRequest`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#module-global-xmlhttprequest\"\n        }}>{`~XMLHttpRequest`}</a>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#new-module-global-xmlhttprequest-new\"\n            }}>{`new XMLHttpRequest()`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#module-global-xmlhttprequest-responseurl\"\n            }}>{`.responseURL`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#module-global-xmlhttprequest-readystate\"\n            }}>{`.readyState`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#module-global-xmlhttprequest-responsetext\"\n            }}>{`.responseText`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#module-global-xmlhttprequest-responsexml\"\n            }}>{`.responseXML`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#module-global-xmlhttprequest-response\"\n            }}>{`.response`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#module-global-xmlhttprequest-status\"\n            }}>{`.status`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#module-global-xmlhttprequest-statustext\"\n            }}>{`.statusText`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#module-global-xmlhttprequest-timeout\"\n            }}>{`.timeout`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#module-global-xmlhttprequest-timeout\"\n            }}>{`.timeout`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#module-global-xmlhttprequest-responsetype\"\n            }}>{`.responseType`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#module-global-xmlhttprequest-responsetype\"\n            }}>{`.responseType`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#module-global-xmlhttprequest-withcredentials\"\n            }}>{`.withCredentials`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#module-global-xmlhttprequest-withcredentials\"\n            }}>{`.withCredentials`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#module-global-xmlhttprequest-upload\"\n            }}>{`.upload`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#module-global-xmlhttprequest-abort\"\n            }}>{`.abort()`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#module-global-xmlhttprequest-getallresponseheaders\"\n            }}>{`.getAllResponseHeaders()`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#module-global-xmlhttprequest-getresponseheader\"\n            }}>{`.getResponseHeader(name)`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#module-global-xmlhttprequest-open\"\n            }}>{`.open(method, url, [async], [user], [password])`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#module-global-xmlhttprequest-overridemimetype\"\n            }}>{`.overrideMimeType(mimetype)`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#module-global-xmlhttprequest-setrequestheader\"\n            }}>{`.setRequestHeader(header, data)`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#module-global-xmlhttprequest-send\"\n            }}>{`.send([data])`}</a></li>\n        </ul>\n      </li>\n    </ul>\n    <a name=\"new-module-global-xmlhttprequest-new\" id=\"new-module-global-xmlhttprequest-new\"></a>\n    <h3 {...{\n      \"id\": \"new-xmlhttprequest\"\n    }}>{`new XMLHttpRequest()`}</h3>\n    <p>{`The constructor initializes an XMLHttpRequest. It must be called before any other method calls.`}</p>\n    <a name=\"module-global-xmlhttprequest-responseurl\" id=\"module-global-xmlhttprequest-responseurl\"></a>\n    <h3 {...{\n      \"id\": \"xmlhttprequestresponseurl\"\n    }}>{`xmlHttpRequest.responseURL`}</h3>\n    <p>{`Unsupported`}</p>\n    <p><strong parentName=\"p\">{`Read only`}</strong></p>\n    <a name=\"module-global-xmlhttprequest-readystate\" id=\"module-global-xmlhttprequest-readystate\"></a>\n    <h3 {...{\n      \"id\": \"xmlhttprequestreadystate\"\n    }}>{`xmlHttpRequest.readyState`}</h3>\n    <p>{`Returns an unsigned short, the state of the request.`}</p>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`int`}</inlineCode>{` - returns the state of the XMLHttpRequest client.`}</p>\n    <p><strong parentName=\"p\">{`Read only`}</strong></p>\n    <a name=\"module-global-xmlhttprequest-responsetext\" id=\"module-global-xmlhttprequest-responsetext\"></a>\n    <h3 {...{\n      \"id\": \"xmlhttprequestresponsetext\"\n    }}>{`xmlHttpRequest.responseText`}</h3>\n    <p>{`Returns a DOMString that contains the response to the request as text, or null if the request was unsuccessful or has not yet been sent.`}</p>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`string`}</inlineCode>{` - returns the received text response.`}</p>\n    <p><strong parentName=\"p\">{`Read only`}</strong></p>\n    <a name=\"module-global-xmlhttprequest-responsexml\" id=\"module-global-xmlhttprequest-responsexml\"></a>\n    <h3 {...{\n      \"id\": \"xmlhttprequestresponsexml\"\n    }}>{`xmlHttpRequest.responseXML`}</h3>\n    <p>{`Returns the XML document that supports W3C DOM level2 specification.\nThe XML document is constructed with received bytes using XMLHttpRequest.`}</p>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`object`}</inlineCode>{` - returns the XML document response.`}</p>\n    <p><strong parentName=\"p\">{`Throws`}</strong>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#domexception\"\n        }}><inlineCode parentName=\"a\">{`DOMException`}</inlineCode></a>{` if responseType is not the empty string or \"document\".`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Read only`}</strong></p>\n    <a name=\"module-global-xmlhttprequest-response\" id=\"module-global-xmlhttprequest-response\"></a>\n    <h3 {...{\n      \"id\": \"xmlhttprequestresponse\"\n    }}>{`xmlHttpRequest.response`}</h3>\n    <p>{`Returns the response from the server in the type specified by responseType.\nOnly valid after the load event fires.`}</p>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`string`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"p\">{`ArrayBuffer`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"p\">{`Blob`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"p\">{`Object`}</inlineCode>{` - returns an ArrayBuffer, Blob, Document, JavaScript object, or a DOMString, depending on the value of;\nXMLHttpRequest.responseType that contains the response entity body.`}</p>\n    <p><strong parentName=\"p\">{`Read only`}</strong></p>\n    <a name=\"module-global-xmlhttprequest-status\" id=\"module-global-xmlhttprequest-status\"></a>\n    <h3 {...{\n      \"id\": \"xmlhttprequeststatus\"\n    }}>{`xmlHttpRequest.status`}</h3>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`string`}</inlineCode>{` - returns the HTTP status code received from the server.`}</p>\n    <p><strong parentName=\"p\">{`Read only`}</strong></p>\n    <a name=\"module-global-xmlhttprequest-statustext\" id=\"module-global-xmlhttprequest-statustext\"></a>\n    <h3 {...{\n      \"id\": \"xmlhttprequeststatustext\"\n    }}>{`xmlHttpRequest.statusText`}</h3>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`string`}</inlineCode>{` - returns the response's status message with regard to the HTTP status code received from the server.`}</p>\n    <p><strong parentName=\"p\">{`Read only`}</strong></p>\n    <a name=\"module-global-xmlhttprequest-timeout\" id=\"module-global-xmlhttprequest-timeout\"></a>\n    <h3 {...{\n      \"id\": \"xmlhttprequesttimeout\"\n    }}>{`xmlHttpRequest.timeout`}</h3>\n    <p>{`The number of milliseconds a request can take before automatically being terminated.\nThe default value is 0, which means there is no timeout.`}</p>\n    <a name=\"module-global-xmlhttprequest-timeout\" id=\"module-global-xmlhttprequest-timeout\"></a>\n    <h3 {...{\n      \"id\": \"xmlhttprequesttimeout-1\"\n    }}>{`xmlHttpRequest.timeout`}</h3>\n    <p>{`Terminates a request and a timeout event will be dispatched after the given time has passed.`}</p>\n    <p><strong parentName=\"p\">{`Throws`}</strong>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#domexception\"\n        }}><inlineCode parentName=\"a\">{`DOMException`}</inlineCode></a>{` if called for synchronous request.`}</li>\n    </ul>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`value`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number of milliseconds a request can take automatically being terminated.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <a name=\"module-global-xmlhttprequest-responsetype\" id=\"module-global-xmlhttprequest-responsetype\"></a>\n    <h3 {...{\n      \"id\": \"xmlhttprequestresponsetype\"\n    }}>{`xmlHttpRequest.responseType`}</h3>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`string`}</inlineCode>{` - returns a string taken from the XMLHttpRequestResponseType enum which specifies;\nwhat type of data the response contains.`}</p>\n    <a name=\"module-global-xmlhttprequest-responsetype\" id=\"module-global-xmlhttprequest-responsetype\"></a>\n    <h3 {...{\n      \"id\": \"xmlhttprequestresponsetype-1\"\n    }}>{`xmlHttpRequest.responseType`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`value`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A string indicating the type of data contained in the response. This should be \"arraybuffer\", \"blob\", \"document\", \"json\" or \"text\".`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <a name=\"module-global-xmlhttprequest-withcredentials\" id=\"module-global-xmlhttprequest-withcredentials\"></a>\n    <h3 {...{\n      \"id\": \"xmlhttprequestwithcredentials\"\n    }}>{`xmlHttpRequest.withCredentials`}</h3>\n    <p>{`Indicates whether to send cookies on a HTTP request.\nWhen the value is set to true, XMLHttpRequest sends cookies. Otherwise, cookies are not sent.`}</p>\n    <a name=\"module-global-xmlhttprequest-withcredentials\" id=\"module-global-xmlhttprequest-withcredentials\"></a>\n    <h3 {...{\n      \"id\": \"xmlhttprequestwithcredentials-1\"\n    }}>{`xmlHttpRequest.withCredentials`}</h3>\n    <p><strong parentName=\"p\">{`Throws`}</strong>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#domexception\"\n        }}><inlineCode parentName=\"a\">{`DOMException`}</inlineCode></a>{` when set if state is not unsent or opened.`}</li>\n    </ul>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[value]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`whether to send cookies on a HTTP request.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <a name=\"module-global-xmlhttprequest-upload\" id=\"module-global-xmlhttprequest-upload\"></a>\n    <h3 {...{\n      \"id\": \"xmlhttprequestupload\"\n    }}>{`xmlHttpRequest.upload`}</h3>\n    <p>{`If XMLHttpRequest has data in the body to upload, upload related event will be notified via XMLHttpRequest.upload.`}</p>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`XMLHttpRequestEventUpload`}</inlineCode>{` - returns XMLHttpRequestEventUpload object.`}</p>\n    <p><strong parentName=\"p\">{`Read only`}</strong></p>\n    <a name=\"module-global-xmlhttprequest-abort\" id=\"module-global-xmlhttprequest-abort\"></a>\n    <h3 {...{\n      \"id\": \"xmlhttprequestabort\"\n    }}>{`xmlHttpRequest.abort()`}</h3>\n    <p>{`Aborts the request if it has already been sent.`}</p>\n    <a name=\"module-global-xmlhttprequest-getallresponseheaders\" id=\"module-global-xmlhttprequest-getallresponseheaders\"></a>\n    <h3 {...{\n      \"id\": \"xmlhttprequestgetallresponseheaders\"\n    }}>{`xmlHttpRequest.getAllResponseHeaders()`}</h3>\n    <p>{`Returns sorted and combined response’s header list.\nEach header field is defined by a group of `}{`[lower cased name]`}{`\": \"`}{`[value]`}{`\"\\\\r\\\\n\". Combined value is separated by \", \".`}</p>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`string`}</inlineCode>{` - returns response’s header list.`}</p>\n    <p><strong parentName=\"p\">{`Read only`}</strong></p>\n    <a name=\"module-global-xmlhttprequest-getresponseheader\" id=\"module-global-xmlhttprequest-getresponseheader\"></a>\n    <h3 {...{\n      \"id\": \"xmlhttprequestgetresponseheadername\"\n    }}>{`xmlHttpRequest.getResponseHeader(name)`}</h3>\n    <p>{`Returns the matching value of the given field name in response's header.\nThe search key value is case-insensitive`}</p>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{`: `}<inlineCode parentName=\"p\">{`string`}</inlineCode>{` - returns the value of the given name in response's header list.`}</p>\n    <p><strong parentName=\"p\">{`Read only`}</strong></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`name`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The name to search in response's header list.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <a name=\"module-global-xmlhttprequest-open\" id=\"module-global-xmlhttprequest-open\"></a>\n    <h3 {...{\n      \"id\": \"xmlhttprequestopenmethod-url-async-user-password\"\n    }}>{`xmlHttpRequest.open(method, url, `}{`[async]`}{`, `}{`[user]`}{`, `}{`[password]`}{`)`}</h3>\n    <p>{`Initializes a request. This method is to be used from JavaScript code; to initialize a request from native code, use openRequest() instead.\nSelf-signed certificates are not currently supported for HTTPS connections.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`method`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The HTTP request method to use, such as \"GET\", \"POST\", \"PUT\", \"DELETE\", etc. Ignored for non-HTTP(S) URLs.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`url`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A DOMString representing the URL to send the request to.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[async]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An optional Boolean parameter, defaulting to true, indicating whether or not to perform the operation asynchronously.                               If this value is false, the send() method does not return until the response is received.                               If true, notification of a completed transaction is provided using event listeners.                               This must be true if the multipart attribute is true, or an exception will be thrown.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[user]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`null`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The optional user name to use for authentication purposes; by default, this is the null value.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[password]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`null`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The optional password to use for authentication purposes; by default, this is the null value.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <a name=\"module-global-xmlhttprequest-overridemimetype\" id=\"module-global-xmlhttprequest-overridemimetype\"></a>\n    <h3 {...{\n      \"id\": \"xmlhttprequestoverridemimetypemimetype\"\n    }}>{`xmlHttpRequest.overrideMimeType(mimetype)`}</h3>\n    <p>{`Use a MIME type other than the one provided by the server when interpreting the data being transferred in a request.\nIf parsing the MIME type fails, \"application/octet-stream\" will be used to interpret the data.`}</p>\n    <p><strong parentName=\"p\">{`Throws`}</strong>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#domexception\"\n        }}><inlineCode parentName=\"a\">{`DOMException`}</inlineCode></a>{` if state is loading or done`}</li>\n    </ul>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`mimetype`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`MIME type Since Only UTF-8 is supported for charset of text encoding, MIME type’s parameters \"charset\" with other values than 'UTF-8' is not valid.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <a name=\"module-global-xmlhttprequest-setrequestheader\" id=\"module-global-xmlhttprequest-setrequestheader\"></a>\n    <h3 {...{\n      \"id\": \"xmlhttprequestsetrequestheaderheader-data\"\n    }}>{`xmlHttpRequest.setRequestHeader(header, data)`}</h3>\n    <p>{`Sets the value of an HTTP request header. You must call setRequestHeader()after open(), but before send().`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`header`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The name of the header whose value is to be set.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`data`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The value to set as the body of the header.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <a name=\"module-global-xmlhttprequest-send\" id=\"module-global-xmlhttprequest-send\"></a>\n    <h3 {...{\n      \"id\": \"xmlhttprequestsenddata\"\n    }}>{`xmlHttpRequest.send(`}{`[data]`}{`)`}</h3>\n    <p>{`Sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[data]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`\\\\*`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\\`\\``}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A body of data to be sent in the XHR request. This can be: A Document, in which case it is serialized before being sent. A BodyInit, which as per the Fetch spec can be a Blob, BufferSource, FormData, URLSearchParams, ReadableStream, or USVString object. If no value is specified for the body, a default value of null is used. The best way to send binary content (e.g. in file uploads) is by using an ArrayBufferView or Blob in conjunction with the send() method. There is a caveat for sending a FormData object. The files in the FormData object are being read after calling this method. To ensure uploading files as-is, the file contents or files shouldn't be changed until uploading files to the server is done. @see XMLHttpRequest.upload. If there is a problem during reading files, the XMLHttpRequest transaction initiated by this method can be aborted with an error event fired.`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","name","id","parentName","isMDXComponent"],"sourceRoot":""}