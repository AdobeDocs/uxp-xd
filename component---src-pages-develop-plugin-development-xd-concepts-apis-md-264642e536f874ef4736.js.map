{"version":3,"file":"component---src-pages-develop-plugin-development-xd-concepts-apis-md-264642e536f874ef4736.js","mappings":"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","sources":["webpack://uxp-xd/./src/pages/develop/plugin-development/xd-concepts/apis.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"available-apis\"\n    }}>{`Available APIs`}</h1>\n    <p>{`Adobe XD provides several categories of APIs:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\"><a parentName=\"strong\" {...{\n              \"href\": \"#xd-specific-apis\"\n            }}>{`APIs for interacting with XD itself`}</a></strong>{`, especially its document model, the `}<strong parentName=\"p\">{`scenegraph`}</strong></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The `}<strong parentName=\"p\">{`UXP runtime`}</strong>{`, which provides all the capabilities that aren't XD-specific:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`A `}<a parentName=\"li\" {...{\n              \"href\": \"/uxp-xd/develop/reference/uxp/ui-index\"\n            }}><em parentName=\"a\">{`browser-like`}</em>{` HTML and CSS engine`}</a>{` which drives actual XD `}<em parentName=\"li\">{`native UI components`}</em>{` -- it is `}<strong parentName=\"li\">{`not`}</strong>{` a complete browser engine, but lets you build your UI using familiar web APIs and frameworks.`}</li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"/uxp-xd/develop/reference/uxp/network-index/\"\n            }}>{`Network APIs`}</a>{` similar to the web standard XHR, `}<inlineCode parentName=\"li\">{`fetch`}</inlineCode>{`, and WebSocket found in browsers.`}</li>\n          <li parentName=\"ul\">{`The `}<a parentName=\"li\" {...{\n              \"href\": \"/uxp-xd/develop/reference/uxp/storage-index/\"\n            }}><inlineCode parentName=\"a\">{`storage`}</inlineCode>{` API`}</a>{`, offering sandboxed filesystem access.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The usual `}<strong parentName=\"p\"><a parentName=\"strong\" {...{\n              \"href\": \"/uxp-xd/develop/plugin-development/javascript-and-xd/javascript-support\"\n            }}>{`core JavaScript language APIs`}</a></strong>{` you see in all JS runtimes, such as `}<inlineCode parentName=\"p\">{`setTimeout()`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Date`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`A simple `}<strong parentName=\"p\"><a parentName=\"strong\" {...{\n              \"href\": \"/uxp-xd/develop/plugin-development/javascript-and-xd/javascript-support/#can-i-use-require\"\n            }}>{`module-loader `}<inlineCode parentName=\"a\">{`require()`}</inlineCode>{` API`}</a></strong></p>\n      </li>\n    </ul>\n    <p>{`Read below for `}<strong parentName=\"p\">{`how to access`}</strong>{` XD and UXP APIs...`}</p>\n    <h2 {...{\n      \"id\": \"xd-specific-apis\"\n    }}>{`XD-specific APIs`}</h2>\n    <p>{`Most XD APIs are accessed by loading a module via `}<inlineCode parentName=\"p\">{`require()`}</inlineCode>{`, but some are passed directly to your plugin's handler functions. See the `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/xd-index\"\n      }}>{`XD specific APIs page`}</a>{` for a full list of modules. Below are some examples of modules available via the API:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/uxp-xd/develop/reference/selection/\"\n        }}>{`selection`}</a>{` - Indicates the selected nodes and related context`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`This object is passed as an argument to your command handler function (see above)`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/uxp-xd/develop/reference/scenegraph/\"\n        }}>{`scenegraph`}</a>{` - APIs available on document nodes`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Typically you use scenegraph objects by simply accessing the arguments passed to your command's handler function\n(`}<inlineCode parentName=\"li\">{`selection`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`documentRoot`}</inlineCode>{`).`}</li>\n          <li parentName=\"ul\">{`To create `}<em parentName=\"li\">{`new`}</em>{` nodes in the document, load this module explicitly to access the constructor functions:`}\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-js\"\n              }}>{`let Rectangle = require(\"scenegraph\").Rectangle;\nlet node = new Rectangle();\n`}</code></pre>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/uxp-xd/develop/reference/commands/\"\n        }}>{`commands`}</a>{` - Invoke commands to change the document structure and perform other complex operations.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`let commands = require(\"commands\");`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/uxp-xd/develop/reference/interactions/\"\n        }}>{`interactions`}</a>{` - Data model for interactive prototyping features (also accessible from scenegraph nodes).`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`let interactions = require(\"interactions\");`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/uxp-xd/develop/reference/application/\"\n        }}>{`application`}</a>{` - APIs for exporting content, initiating edits from panel UI, and getting version / locale info.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`let application = require(\"application\");`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/uxp-xd/develop/reference/clipboard/\"\n        }}>{`clipboard`}</a>{` - Copy text to the clipboard.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`let clipboard = require(\"clipboard\");`}</inlineCode></li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"uxp\"\n    }}>{`UXP`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`HTML DOM APIs -- access just as in a browser, via the global `}<inlineCode parentName=\"p\">{`document`}</inlineCode>{`. Each plugin in XD gets its own `}<inlineCode parentName=\"p\">{`document`}</inlineCode>{` tree.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Network APIs -- access just as in a browser, via the global classes `}<inlineCode parentName=\"p\">{`XMLHttpRequest`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`WebSocket`}</inlineCode>{`, and the global function `}<inlineCode parentName=\"p\">{`fetch()`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Storage APIs -- access via `}<inlineCode parentName=\"p\">{`const fs = require(\"uxp\").storage.localFileSystem;`}</inlineCode></p>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}