(window.webpackJsonp=window.webpackJsonp||[]).push([[190],{"7gyb":function(e,t,n){e.exports=n.p+"static/on-canvas-f1b1c06a88c73d52fa8897069f8397fd.png"},Mafk:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return r})),n.d(t,"default",(function(){return d}));var a=n("wx14"),l=n("zLVn"),o=(n("q1tI"),n("7ljp")),i=n("ndZU"),r=(n("qKvR"),{}),c={_frontmatter:r},m=i.a;function d(e){var t=e.components,i=Object(l.a)(e,["components"]);return Object(o.mdx)(m,Object(a.a)({},c,i,{components:t,mdxType:"MDXLayout"}),Object(o.mdx)("h1",{id:"quick-start-make-your-first-xd-plugin"},"Quick Start: Make your first XD plugin"),Object(o.mdx)("p",null,"Let’s walk through creating your first Adobe XD plugin together."),Object(o.mdx)("p",null,"We'll keep things simple in this Quick Start tutorial. Once you're done, you'll have a solid grasp of the steps to take when starting to create your own XD plugin."),Object(o.mdx)("p",null,"At the end of the tutorial, we'll suggest some next steps for going deeper with the XD plugin APIs."),Object(o.mdx)("h2",{id:"prerequisites"},"Prerequisites"),Object(o.mdx)("ul",null,Object(o.mdx)("li",{parentName:"ul"},"Basic knowledge of HTML, CSS, and JavaScript"),Object(o.mdx)("li",{parentName:"ul"},"A text editor to write your code in (like VSCode, Sublime Text, Brackets, Atom, etc)")),Object(o.mdx)("h2",{id:"development-steps"},"Development Steps"),Object(o.mdx)("blockquote",null,Object(o.mdx)("p",{parentName:"blockquote"},Object(o.mdx)("strong",{parentName:"p"},"Info"),"\nComplete code for this plugin can be found ",Object(o.mdx)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/AdobeXD/Plugin-Samples/tree/master/quick-start"}),"on GitHub"),".")),Object(o.mdx)("h3",{id:"0-get-a-plugin-id-from-the-adobe-developer-console"},"0. Get a plugin ID from the Adobe Developer Console"),Object(o.mdx)("p",null,"Before you start, you'll want to create a plugin project on the Adobe Developer Console."),Object(o.mdx)("ol",null,Object(o.mdx)("li",{parentName:"ol"},Object(o.mdx)("a",Object(a.a)({parentName:"li"},{href:"https://console.adobe.io/projects"}),"Go to the Adobe Developer Console and sign in or sign up")),Object(o.mdx)("li",{parentName:"ol"},'Click "Create Empty Project"'),Object(o.mdx)("li",{parentName:"ol"},'Create a plugin project by clicking "Add XD Plugin"'),Object(o.mdx)("li",{parentName:"ol"},"Give it a project name. Note that this project name is not public; it is only visible to you and can be changed directly on the Console later."),Object(o.mdx)("li",{parentName:"ol"},'On the following page, get the 8-character unique plugin ID in the "Plugin Details" section.'),Object(o.mdx)("li",{parentName:"ol"},"Optionally on the same page, download the starter project, which contains a functioning Hello, World sample plugin.")),Object(o.mdx)("p",null,"We'll use your plugin ID in one of the next steps."),Object(o.mdx)("h3",{id:"1-identify-where-your-plugins-are-located"},"1. Identify where your plugins are located"),Object(o.mdx)("p",null,"Adobe XD loads plugins that are in development from a ",Object(o.mdx)("inlineCode",{parentName:"p"},"develop")," folder in a specific location on your machine. To get to that folder, simply go to this menu item: ",Object(o.mdx)("em",{parentName:"p"},"Plugins > Development > Show Develop Folder"),"."),Object(o.mdx)("p",null,"This will open the ",Object(o.mdx)("inlineCode",{parentName:"p"},"develop")," folder, which we'll use in the next step."),Object(o.mdx)("h3",{id:"2-create-your-plugin-scaffold"},"2. Create your plugin scaffold"),Object(o.mdx)("p",null,"Next, you'll need to make a new folder within the ",Object(o.mdx)("inlineCode",{parentName:"p"},"develop")," folder to store the plugin files that you'll create below. Name your new plugin folder anything you like."),Object(o.mdx)("p",null,"Now, let's create your plugin files. Open your favorite text editor and create two files inside of your new plugin folder with these ",Object(o.mdx)("em",{parentName:"p"},"exact")," names:"),Object(o.mdx)("ol",null,Object(o.mdx)("li",{parentName:"ol"},Object(o.mdx)("inlineCode",{parentName:"li"},"manifest.json"))),Object(o.mdx)("p",null,"This file includes information about the plugin, such as its name, the menu item(s) it adds to XD, and so on."),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(a.a)({parentName:"p"},{href:"/uxp-xd/guides/uxp-misc/manifest-v4/"}),"Learn about the manifest here"),"."),Object(o.mdx)("ol",{start:2},Object(o.mdx)("li",{parentName:"ol"},Object(o.mdx)("inlineCode",{parentName:"li"},"main.js"))),Object(o.mdx)("p",null,"This file contains your JavaScript code that implements your plugin's functionality."),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(a.a)({parentName:"p"},{href:"/uxp-xd/reference/structure/handlers/"}),"Learn more about ",Object(o.mdx)("inlineCode",{parentName:"a"},"main.js")," here"),"."),Object(o.mdx)("p",null,"These two files go into your plugin's parent directory. When you have the right structure, it will look like this:"),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(a.a)({parentName:"pre"},{}),"my-plugin-folder\n├── main.js\n└── manifest.json\n")),Object(o.mdx)("p",null,"It's possible to have more files if you want, but these files are the bare minimum requirement for your plugin to work, and are all we'll need for this Quick Start tutorial."),Object(o.mdx)("h3",{id:"3-create-your-plugins-manifest"},"3. Create your plugin’s manifest"),Object(o.mdx)("p",null,"In the previous step, you created a file named ",Object(o.mdx)("inlineCode",{parentName:"p"},"manifest.json"),". Open that file and paste in this JSON object:"),Object(o.mdx)("p",null,Object(o.mdx)("strong",{parentName:"p"},"TODO")," Fix this manifest"),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "YOUR_ID_HERE",\n  "name": "Hello World sample plugin",\n  "version": "0.0.1",\n  "description": "Description of your plugin.",\n  "summary": "Summary of your plugin",\n  "languages": ["en"],\n  "author": "Your Name",\n  "helpUrl": "https://mywebsite.com/help",\n  "host": {\n    "app": "XD",\n    "minVersion": "13.0"\n  },\n  "uiEntryPoints": [\n    {\n      "type": "menu",\n      "label": "Create Rectangle",\n      "commandId": "createRectangle"\n    }\n  ]\n}\n')),Object(o.mdx)("p",null,"Be sure to replace the ",Object(o.mdx)("inlineCode",{parentName:"p"},"id")," value with the unique plugin ID you got from the Adobe Developer Console in the first step:"),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'"id": "1234ABCD",\n')),Object(o.mdx)("p",null,"If you're curious about what each entry means, ",Object(o.mdx)("a",Object(a.a)({parentName:"p"},{href:"/uxp-xd/reference/structure/manifest/"}),"see the manifest documentation"),", where you can also learn about all manifest requirements for a plugin to be published in the XD Plugin Manager."),Object(o.mdx)("p",null,"The value of the ",Object(o.mdx)("inlineCode",{parentName:"p"},"commandId")," property may be any string; in this case, it's ",Object(o.mdx)("inlineCode",{parentName:"p"},"createRectangle"),". In the next section, we will see how this string is associated with the code for our plugin."),Object(o.mdx)("h3",{id:"4-create-your-plugins-code"},"4. Create your plugin’s code"),Object(o.mdx)("p",null,"Next, we need to create the JavaScript code for our plugin. The code lives in a file named ",Object(o.mdx)("inlineCode",{parentName:"p"},"main.js"),", which we created in step #2."),Object(o.mdx)("p",null,"Paste this code into ",Object(o.mdx)("inlineCode",{parentName:"p"},"main.js"),":"),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'// [1]\nconst { Rectangle, Color } = require("scenegraph");\n\n// [2]\nfunction rectangleHandlerFunction(selection) {\n  // [3]\n  const newElement = new Rectangle();\n  newElement.width = 100;\n  newElement.height = 50;\n  newElement.fill = new Color("Purple");\n\n  // [4]\n  selection.insertionParent.addChild(newElement);\n  // [5]\n  newElement.moveInParentCoordinates(100, 100);\n}\n\n// [6]\nmodule.exports = {\n  commands: {\n    createRectangle: rectangleHandlerFunction,\n  },\n};\n')),Object(o.mdx)("p",null,"This code does the following:"),Object(o.mdx)("ol",null,Object(o.mdx)("li",{parentName:"ol"},"Gets references to the ",Object(o.mdx)("inlineCode",{parentName:"li"},"Rectangle")," and ",Object(o.mdx)("inlineCode",{parentName:"li"},"Color")," classes from XD’s ",Object(o.mdx)("inlineCode",{parentName:"li"},"scenegraph")," module. There are several different ",Object(o.mdx)("a",Object(a.a)({parentName:"li"},{href:"/uxp-xd/reference/core/apis.html"}),"API modules you can load using ",Object(o.mdx)("inlineCode",{parentName:"a"},"require()")),"."),Object(o.mdx)("li",{parentName:"ol"},"Defines our handler function. The handler function will run when the user selects the ",Object(o.mdx)("em",{parentName:"li"},"Plugins > Create Rectangle")," menu item."),Object(o.mdx)("li",{parentName:"ol"},"Creates a new ",Object(o.mdx)("inlineCode",{parentName:"li"},"Rectangle")," object with width, height, and color properties."),Object(o.mdx)("li",{parentName:"ol"},"Adds the ",Object(o.mdx)("inlineCode",{parentName:"li"},"Rectangle")," object to the scenegraph at the top-left (coordinates ",Object(o.mdx)("inlineCode",{parentName:"li"},"0, 0"),")."),Object(o.mdx)("li",{parentName:"ol"},"Puts the ",Object(o.mdx)("inlineCode",{parentName:"li"},"Rectangle")," object at coordinates ",Object(o.mdx)("inlineCode",{parentName:"li"},"100, 100")," within the parent element."),Object(o.mdx)("li",{parentName:"ol"},"Exports an object, with a ",Object(o.mdx)("inlineCode",{parentName:"li"},"commands")," property. The value of ",Object(o.mdx)("inlineCode",{parentName:"li"},"commands")," is an object which associates the JavaScript handler function (",Object(o.mdx)("inlineCode",{parentName:"li"},"rectangleHandlerFunction"),") with your manifest's ",Object(o.mdx)("inlineCode",{parentName:"li"},"commandId")," property. The command ID property name (here, ",Object(o.mdx)("inlineCode",{parentName:"li"},"createRectangle"),") must match the ",Object(o.mdx)("inlineCode",{parentName:"li"},"commandId")," value declared in your manifest exactly.")),Object(o.mdx)("h3",{id:"5-run-your-plugin"},"5. Run your plugin"),Object(o.mdx)("p",null,"So you’ve written a plugin! How do we run it?"),Object(o.mdx)("p",null,"If you haven’t already done so, launch XD and open a new document. Then navigate to the ",Object(o.mdx)("em",{parentName:"p"},"Plugins > Create Rectangle")," menu item."),Object(o.mdx)("p",null,"Alternatively, if XD was already open, select ",Object(o.mdx)("em",{parentName:"p"},"Plugins > Development > Reload Plugins"),"."),Object(o.mdx)("p",null,Object(o.mdx)("img",{alt:"A rectangle on the artboard",src:n("7gyb")})),Object(o.mdx)("p",null,"Congratulations! You’ve built your first plugin for Adobe XD!"))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-develop-tutorials-quick-start-index-md-f670a7063f8bbef199f4.js.map