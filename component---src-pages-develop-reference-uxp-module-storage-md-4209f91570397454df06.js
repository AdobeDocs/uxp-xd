(window.webpackJsonp=window.webpackJsonp||[]).push([[166],{bv71:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return l})),a.d(t,"default",(function(){return c}));var r=a("wx14"),n=a("zLVn"),m=(a("q1tI"),a("7ljp")),d=a("ndZU"),l=(a("qKvR"),{}),o={_frontmatter:l},i=d.a;function c(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(m.mdx)(i,Object(r.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(m.mdx)("a",{name:"module-storage",id:"module-storage"}),Object(m.mdx)("h2",{id:"storage"},"storage"),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Category"),": uxp, io, file"),Object(m.mdx)("ul",null,Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage"}),"storage"),Object(m.mdx)("ul",{parentName:"li"},Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry"}),".Entry"),Object(m.mdx)("ul",{parentName:"li"},Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry-name"}),".name")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"string")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry-provider"}),".provider")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"FileSystemProvider")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry-url"}),".url")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"URL")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry-nativepath"}),".nativePath")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"string")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry-isentry"}),".isEntry")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"boolean")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry-isfile"}),".isFile")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"boolean")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry-isfolder"}),".isFolder")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"boolean")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry-tostring"}),".toString()")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"string")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry-copyto"}),".copyTo(folder, options)")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry-moveto"}),".moveTo(folder, options)")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry-delete"}),".delete()")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry-getmetadata"}),".getMetadata()")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise.<EntryMetadata>")))),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entrymetadata"}),".EntryMetadata"),Object(m.mdx)("ul",{parentName:"li"},Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entrymetadata-name"}),".name")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"string")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entrymetadata-size"}),".size")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"number")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entrymetadata-datecreated"}),".dateCreated")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"Date")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entrymetadata-datemodified"}),".dateModified")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"Date")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entrymetadata-isfile"}),".isFile")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"boolean")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entrymetadata-isfolder"}),".isFolder")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"boolean")))),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-file"}),".File"),Object(m.mdx)("ul",{parentName:"li"},Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-file-mode"}),".mode")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"Symbol")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-file-read"}),".read(options)")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise.<(string\\|ArrayBuffer)>")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-file-write"}),".write(data, options)")))),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filesystemprovider"}),".FileSystemProvider"),Object(m.mdx)("ul",{parentName:"li"},Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filesystemprovider-getfileforopening"}),".getFileForOpening(options)")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise.<?File>")," ","|"," ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise.<!Array.<File>>")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filesystemprovider-getfileforsaving"}),".getFileForSaving(suggestedName, options)")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise.<?File>")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filesystemprovider-getfolder"}),".getFolder()")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise.<?Folder>")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filesystemprovider-gettemporaryfolder"}),".getTemporaryFolder()")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise.<Folder>")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filesystemprovider-getdatafolder"}),".getDataFolder()")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise.<Folder>")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filesystemprovider-getpluginfolder"}),".getPluginFolder()")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise.<Folder>")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filesystemprovider-getfsurl"}),".getFsUrl(entry)")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"URL")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filesystemprovider-getnativepath"}),".getNativePath(entry)")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"string")))),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-folder"}),".Folder")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Entry"),Object(m.mdx)("ul",{parentName:"li"},Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-folder-getentries"}),".getEntries()")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise.<Array.<Entry>>")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-folder-createfile"}),".createFile(name, options)")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise.<File>")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-folder-createfolder"}),".createFolder(name)")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Folder")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-folder-getentry"}),".getEntry(filePath)")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise.<(File\\|Folder)>")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-folder-renameentry"}),".renameEntry(entry, newName, options)")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise")))),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-localfilesystem"}),".localFileSystem")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"LocalFileSystemProvider")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors"}),".errors")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"Errors"),Object(m.mdx)("ul",{parentName:"li"},Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors-abstractmethodinvocationerror"}),".AbstractMethodInvocationError")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Error")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors-providermismatcherror"}),".ProviderMismatchError")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Error")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors-entryisnotanentryerror"}),".EntryIsNotAnEntryError")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Error")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors-entryisnotafoldererror"}),".EntryIsNotAFolderError")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Error")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors-entryisnotafileerror"}),".EntryIsNotAFileError")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Error")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors-notafilesystemerror"}),".NotAFileSystemError")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Error")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors-outofspaceerror"}),".OutOfSpaceError")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Error")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors-permissiondeniederror"}),".PermissionDeniedError")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Error")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors-entryexistserror"}),".EntryExistsError")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Error")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors-fileisreadonlyerror"}),".FileIsReadOnlyError")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Error")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors-domainnotsupportederror"}),".DomainNotSupportedError")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Error")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors-invalidfilenameerror"}),".InvalidFileNameError")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Error")))),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filetypes"}),".fileTypes"),Object(m.mdx)("ul",{parentName:"li"},Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filetypes-text"}),".text")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filetypes-images"}),".images")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filetypes-all"}),".all")))),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-formats"}),".formats"),Object(m.mdx)("ul",{parentName:"li"},Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-formats-utf8"}),".utf8")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"Symbol")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-formats-binary"}),".binary")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"Symbol")))),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-modes"}),".modes"),Object(m.mdx)("ul",{parentName:"li"},Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-modes-readonly"}),".readOnly")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"Symbol")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-modes-readwrite"}),".readWrite")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"Symbol")))),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-types"}),".types"),Object(m.mdx)("ul",{parentName:"li"},Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-types-file"}),".file")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"Symbol")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-types-folder"}),".folder")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"Symbol"))))))),Object(m.mdx)("a",{name:"module-storage-entry",id:"module-storage-entry"}),Object(m.mdx)("h3",{id:"storageentry"},"storage.Entry"),Object(m.mdx)("p",null,"An ",Object(m.mdx)("inlineCode",{parentName:"p"},"Entry")," is the base class for ",Object(m.mdx)("inlineCode",{parentName:"p"},"File")," and ",Object(m.mdx)("inlineCode",{parentName:"p"},"Folder"),". You'll\nnever instantiate an ",Object(m.mdx)("inlineCode",{parentName:"p"},"Entry")," directly, but it provides\nthe common fields and methods that both ",Object(m.mdx)("inlineCode",{parentName:"p"},"File")," and ",Object(m.mdx)("inlineCode",{parentName:"p"},"Folder"),"\nshare."),Object(m.mdx)("blockquote",null,Object(m.mdx)("p",{parentName:"blockquote"},Object(m.mdx)("strong",{parentName:"p"},"Info")),Object(m.mdx)("p",{parentName:"blockquote"},"Important:"),Object(m.mdx)("ul",{parentName:"blockquote"},Object(m.mdx)("li",{parentName:"ul"},"An Entry object may exist even if the corresponding file/folder on disk does not\ncurrently exist."),Object(m.mdx)("li",{parentName:"ul"},"It's possible for multiple Entry objects to represent the same item on disk,\nfor example if the item was picked via multiple separate file picker invocations."))),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage"}),Object(m.mdx)("inlineCode",{parentName:"a"},"storage")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),Object(m.mdx)("ul",null,Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry"}),".Entry"),Object(m.mdx)("ul",{parentName:"li"},Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry-name"}),".name")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"string")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry-provider"}),".provider")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"FileSystemProvider")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry-url"}),".url")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"URL")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry-nativepath"}),".nativePath")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"string")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry-isentry"}),".isEntry")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"boolean")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry-isfile"}),".isFile")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"boolean")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry-isfolder"}),".isFolder")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"boolean")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry-tostring"}),".toString()")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"string")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry-copyto"}),".copyTo(folder, options)")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry-moveto"}),".moveTo(folder, options)")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry-delete"}),".delete()")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entry-getmetadata"}),".getMetadata()")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise.<EntryMetadata>"))))),Object(m.mdx)("a",{name:"module-storage-entry-name",id:"module-storage-entry-name"}),Object(m.mdx)("h4",{id:"entryname--string"},"entry.name : ",Object(m.mdx)("inlineCode",{parentName:"h4"},"string")),Object(m.mdx)("p",null,"The name of this entry. Read-only."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-entry"}),Object(m.mdx)("inlineCode",{parentName:"a"},"Entry")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Read only"),": true\n",Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13\n",Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"console.log(anEntry.name);\n")),Object(m.mdx)("a",{name:"module-storage-entry-provider",id:"module-storage-entry-provider"}),Object(m.mdx)("h4",{id:"entryprovider--filesystemprovider"},"entry.provider : ",Object(m.mdx)("inlineCode",{parentName:"h4"},"FileSystemProvider")),Object(m.mdx)("p",null,"The associated provider that services this entry. Read-only."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-entry"}),Object(m.mdx)("inlineCode",{parentName:"a"},"Entry")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Read only"),": true\n",Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13\n",Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'if (entryOne.provider !== entryTwo.provider) {\n    throw new Error("Providers are not the same");\n}\n')),Object(m.mdx)("a",{name:"module-storage-entry-url",id:"module-storage-entry-url"}),Object(m.mdx)("h4",{id:"entryurl--url"},"entry.url : ",Object(m.mdx)("inlineCode",{parentName:"h4"},"URL")),Object(m.mdx)("p",null,"The url of this entry. You can use this url as the ",Object(m.mdx)("inlineCode",{parentName:"p"},"src")," attribute of an ",Object(m.mdx)("inlineCode",{parentName:"p"},"<img>")," tag in the UI. Read-only."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-entry"}),Object(m.mdx)("inlineCode",{parentName:"a"},"Entry")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Read only"),": true\n",Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13\n",Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"console.log(anEntry.url);\n")),Object(m.mdx)("a",{name:"module-storage-entry-nativepath",id:"module-storage-entry-nativepath"}),Object(m.mdx)("h4",{id:"entrynativepath--string"},"entry.nativePath : ",Object(m.mdx)("inlineCode",{parentName:"h4"},"string")),Object(m.mdx)("p",null,"The platform native file-system path of this entry. Read-only"),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-entry"}),Object(m.mdx)("inlineCode",{parentName:"a"},"Entry")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Read only"),": true\n",Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13\n",Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"console.log(anEntry.nativePath);\n")),Object(m.mdx)("h4",{id:"entryisentry--boolean"},"entry.isEntry : ",Object(m.mdx)("inlineCode",{parentName:"h4"},"boolean")),Object(m.mdx)("p",null,"Indicates that this instance is an ",Object(m.mdx)("inlineCode",{parentName:"p"},"Entry"),". Useful for type-checking."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-entry"}),Object(m.mdx)("inlineCode",{parentName:"a"},"Entry")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"if (something.isEntry) {\n    return something.getMetadata();\n}\n")),Object(m.mdx)("a",{name:"module-storage-entry-isfile",id:"module-storage-entry-isfile"}),Object(m.mdx)("h4",{id:"entryisfile--boolean"},"entry.isFile : ",Object(m.mdx)("inlineCode",{parentName:"h4"},"boolean")),Object(m.mdx)("p",null,"Indicates that this instance is ",Object(m.mdx)("strong",{parentName:"p"},"not")," a ",Object(m.mdx)("inlineCode",{parentName:"p"},"File"),". Useful for type-\nchecking."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-entry"}),Object(m.mdx)("inlineCode",{parentName:"a"},"Entry")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Read only"),": true\n",Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'if (!anEntry.isFile) {\n    return "This entry is not a file.";\n}\n')),Object(m.mdx)("a",{name:"module-storage-entry-isfolder",id:"module-storage-entry-isfolder"}),Object(m.mdx)("h4",{id:"entryisfolder--boolean"},"entry.isFolder : ",Object(m.mdx)("inlineCode",{parentName:"h4"},"boolean")),Object(m.mdx)("p",null,"Indicates that this instance is ",Object(m.mdx)("strong",{parentName:"p"},"not")," a folder. Useful for type-\nchecking."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-entry"}),Object(m.mdx)("inlineCode",{parentName:"a"},"Entry")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Read only"),": true\n",Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'if (!anEntry.isFolder) {\n    return "This entry is not a folder.";\n}\n')),Object(m.mdx)("a",{name:"module-storage-entry-tostring",id:"module-storage-entry-tostring"}),Object(m.mdx)("h4",{id:"entrytostring-⇒-string"},"entry.toString() ⇒ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"string")),Object(m.mdx)("p",null,"Returns the details of the given entry like name, type and native path in a readable string format."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-entry"}),Object(m.mdx)("inlineCode",{parentName:"a"},"Entry")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),Object(m.mdx)("a",{name:"module-storage-entry-copyto",id:"module-storage-entry-copyto"}),Object(m.mdx)("h4",{id:"entrycopytofolder-options-⇒-promise"},"entry.copyTo(folder, options) ⇒ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Promise")),Object(m.mdx)("p",null,"Copies this entry to the specified ",Object(m.mdx)("inlineCode",{parentName:"p"},"folder"),"."),Object(m.mdx)("p",null,"The Entry object passed to this function will continue to reference the\noriginal item - it is ",Object(m.mdx)("em",{parentName:"p"},"not")," updated to reference the copy."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-entry"}),Object(m.mdx)("inlineCode",{parentName:"a"},"Entry")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Throws"),":"),Object(m.mdx)("ul",null,Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("inlineCode",{parentName:"li"},"EntryExists")," if the attempt would overwrite an entry and ",Object(m.mdx)("inlineCode",{parentName:"li"},"overwrite")," is ",Object(m.mdx)("inlineCode",{parentName:"li"},"false")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("inlineCode",{parentName:"li"},"PermissionDenied")," if the underlying file system rejects the attempt"),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("inlineCode",{parentName:"li"},"OutOfSpace")," if the file system is out of storage space")),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),Object(m.mdx)("table",null,Object(m.mdx)("thead",{parentName:"table"},Object(m.mdx)("tr",{parentName:"thead"},Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Param"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Default"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(m.mdx)("tbody",{parentName:"table"},Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"folder"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"Folder")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null})),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"the folder to which to copy this entry")),Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"options"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"\\*")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null})),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}))),Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"[options.overwrite]"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"boolean")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"false")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"if ",Object(m.mdx)("inlineCode",{parentName:"td"},"true"),", allows overwriting existing entries")))),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"await someFile.copyTo(someFolder);\n")),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"await someFile.copyTo(someFolder, {overwrite: true});\n")),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"await someFolder.copyTo(anotherFolder, {overwrite: true});\n")),Object(m.mdx)("a",{name:"module-storage-entry-moveto",id:"module-storage-entry-moveto"}),Object(m.mdx)("h4",{id:"entrymovetofolder-options-⇒-promise"},"entry.moveTo(folder, options) ⇒ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Promise")),Object(m.mdx)("p",null,"Moves this entry to the target folder, optionally specifying a new name."),Object(m.mdx)("p",null,"The Entry object passed to this function is automatically updated to\nreference the new location, however any ",Object(m.mdx)("em",{parentName:"p"},"other")," Entry objects\nreferencing the original item will not be updated, and will thus no\nlonger point to an item that exists on disk."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-entry"}),Object(m.mdx)("inlineCode",{parentName:"a"},"Entry")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),Object(m.mdx)("table",null,Object(m.mdx)("thead",{parentName:"table"},Object(m.mdx)("tr",{parentName:"thead"},Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Param"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Default"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(m.mdx)("tbody",{parentName:"table"},Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"folder"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"Folder")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null})),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"the folder to which to move this entry")),Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"options"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"\\*")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null})),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}))),Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"[options.overwrite]"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"boolean")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"false")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"If ",Object(m.mdx)("inlineCode",{parentName:"td"},"true")," allows the move to overwrite existing files")),Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"[options.newName]"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"string")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null})),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"If specified, the entry is renamed to this name")))),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"await someFile.moveTo(someFolder);\n")),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"await someFile.moveTo(someFolder, {overwrite: true});\n")),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"await someFolder.moveTo(anotherFolder, {overwrite: true});\n")),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"await someFile.moveTo(someFolder, {newName: 'masterpiece.txt'})\n")),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"await someFile.moveTo(someFolder, {newName: 'novel.txt', {overwrite: true})\n")),Object(m.mdx)("a",{name:"module-storage-entry-delete",id:"module-storage-entry-delete"}),Object(m.mdx)("h4",{id:"entrydelete-⇒-promise"},"entry.delete() ⇒ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Promise")),Object(m.mdx)("p",null,"Removes this entry from the file system. If the entry is a folder, you must remove the files inside before removing the folder."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-entry"}),Object(m.mdx)("inlineCode",{parentName:"a"},"Entry")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13\n",Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"await aFile.delete();\n")),Object(m.mdx)("a",{name:"module-storage-entry-getmetadata",id:"module-storage-entry-getmetadata"}),Object(m.mdx)("h4",{id:"entrygetmetadata-⇒-promiseentrymetadata"},"entry.getMetadata() ⇒ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Promise.<EntryMetadata>")),Object(m.mdx)("p",null,"Returns this entry's metadata."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-entry"}),Object(m.mdx)("inlineCode",{parentName:"a"},"Entry")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13\n",Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const metadata = await aFile.getMetadata();\n")),Object(m.mdx)("a",{name:"module-storage-entrymetadata",id:"module-storage-entrymetadata"}),Object(m.mdx)("h3",{id:"storageentrymetadata"},"storage.EntryMetadata"),Object(m.mdx)("p",null,"Metadata for an entry. It includes useful information such as:"),Object(m.mdx)("ul",null,Object(m.mdx)("li",{parentName:"ul"},"size of the file (if a file)"),Object(m.mdx)("li",{parentName:"ul"},"date created"),Object(m.mdx)("li",{parentName:"ul"},"date modified"),Object(m.mdx)("li",{parentName:"ul"},"name")),Object(m.mdx)("p",null,"You'll never instantiate an ",Object(m.mdx)("inlineCode",{parentName:"p"},"EntryMetadata")," directly; instead use\n",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-entry-getmetadata"}),"getMetadata")," to get metadata for a\nspecific File or Folder entry."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage"}),Object(m.mdx)("inlineCode",{parentName:"a"},"storage"))),Object(m.mdx)("ul",null,Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entrymetadata"}),".EntryMetadata"),Object(m.mdx)("ul",{parentName:"li"},Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entrymetadata-name"}),".name")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"string")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entrymetadata-size"}),".size")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"number")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entrymetadata-datecreated"}),".dateCreated")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"Date")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entrymetadata-datemodified"}),".dateModified")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"Date")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entrymetadata-isfile"}),".isFile")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"boolean")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-entrymetadata-isfolder"}),".isFolder")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"boolean"))))),Object(m.mdx)("a",{name:"module-storage-entrymetadata-name",id:"module-storage-entrymetadata-name"}),Object(m.mdx)("h4",{id:"entrymetadataname--string"},"entryMetadata.name : ",Object(m.mdx)("inlineCode",{parentName:"h4"},"string")),Object(m.mdx)("p",null,"The name of the entry."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-entrymetadata"}),Object(m.mdx)("inlineCode",{parentName:"a"},"EntryMetadata"))),Object(m.mdx)("a",{name:"module-storage-entrymetadata-size",id:"module-storage-entrymetadata-size"}),Object(m.mdx)("h4",{id:"entrymetadatasize--number"},"entryMetadata.size : ",Object(m.mdx)("inlineCode",{parentName:"h4"},"number")),Object(m.mdx)("p",null,"The size of the entry, if a file. Zero if a folder."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-entrymetadata"}),Object(m.mdx)("inlineCode",{parentName:"a"},"EntryMetadata"))),Object(m.mdx)("a",{name:"module-storage-entrymetadata-datecreated",id:"module-storage-entrymetadata-datecreated"}),Object(m.mdx)("h4",{id:"entrymetadatadatecreated--date"},"entryMetadata.dateCreated : ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Date")),Object(m.mdx)("p",null,"The date this entry was created."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-entrymetadata"}),Object(m.mdx)("inlineCode",{parentName:"a"},"EntryMetadata"))),Object(m.mdx)("a",{name:"module-storage-entrymetadata-datemodified",id:"module-storage-entrymetadata-datemodified"}),Object(m.mdx)("h4",{id:"entrymetadatadatemodified--date"},"entryMetadata.dateModified : ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Date")),Object(m.mdx)("p",null,"The date this entry was modified."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-entrymetadata"}),Object(m.mdx)("inlineCode",{parentName:"a"},"EntryMetadata"))),Object(m.mdx)("a",{name:"module-storage-entrymetadata-isfile",id:"module-storage-entrymetadata-isfile"}),Object(m.mdx)("h4",{id:"entrymetadataisfile--boolean"},"entryMetadata.isFile : ",Object(m.mdx)("inlineCode",{parentName:"h4"},"boolean")),Object(m.mdx)("p",null,"Indicates if the entry is a file"),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-entrymetadata"}),Object(m.mdx)("inlineCode",{parentName:"a"},"EntryMetadata"))),Object(m.mdx)("a",{name:"module-storage-entrymetadata-isfolder",id:"module-storage-entrymetadata-isfolder"}),Object(m.mdx)("h4",{id:"entrymetadataisfolder--boolean"},"entryMetadata.isFolder : ",Object(m.mdx)("inlineCode",{parentName:"h4"},"boolean")),Object(m.mdx)("p",null,"Indicates if the entry is a folder"),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-entrymetadata"}),Object(m.mdx)("inlineCode",{parentName:"a"},"EntryMetadata"))),Object(m.mdx)("a",{name:"module-storage-file",id:"module-storage-file"}),Object(m.mdx)("h3",{id:"storagefile"},"storage.File"),Object(m.mdx)("p",null,"Represents a file on a file system. Provides methods for reading from and\nwriting to the file. You'll never instantiate a ",Object(m.mdx)("inlineCode",{parentName:"p"},"File")," directly; instead\nyou'll get access via a ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-filesystemprovider"}),"FileSystemProvider"),".\nmethod such as ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-filesystemprovider-getfileforopening"}),Object(m.mdx)("inlineCode",{parentName:"a"},"getFileForOpening()")),"."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage"}),Object(m.mdx)("inlineCode",{parentName:"a"},"storage")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),Object(m.mdx)("blockquote",null,Object(m.mdx)("p",{parentName:"blockquote"},Object(m.mdx)("strong",{parentName:"p"},"Info")),Object(m.mdx)("p",{parentName:"blockquote"},"Important:"),Object(m.mdx)("ul",{parentName:"blockquote"},Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("p",{parentName:"li"},"A File object may exist even if the corresponding file on disk does not currently exist.")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("p",{parentName:"li"},"It's possible for multiple File objects to represent the same file on disk,\nfor example if the file was picked via multiple separate file picker invocations.")))),Object(m.mdx)("ul",null,Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-file"}),".File"),Object(m.mdx)("ul",{parentName:"li"},Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-file-mode"}),".mode")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"Symbol")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-file-read"}),".read(options)")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise.<(string\\|ArrayBuffer)>")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-file-write"}),".write(data, options)"))))),Object(m.mdx)("a",{name:"module-storage-file-mode",id:"module-storage-file-mode"}),Object(m.mdx)("h4",{id:"filemode--symbol"},"file.mode : ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Symbol")),Object(m.mdx)("p",null,"Indicates whether this File object supports read-only or read-write\naccess. See ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-modes-readonly"}),"readOnly")," and ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-modes-readwrite"}),"readWrite"),"."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-file"}),Object(m.mdx)("inlineCode",{parentName:"a"},"File")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13\n",Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'if (aFile.mode === modes.readOnly) {\n    throw new Error("Can\'t write to a file opened as read-only.");\n}\n')),Object(m.mdx)("a",{name:"module-storage-file-read",id:"module-storage-file-read"}),Object(m.mdx)("h4",{id:"filereadoptions-⇒-promisestringarraybuffer"},"file.read(options) ⇒ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Promise.<(string\\|ArrayBuffer)>")),Object(m.mdx)("p",null,"Reads data from the file and returns it. The file format can be specified\nwith the ",Object(m.mdx)("inlineCode",{parentName:"p"},"format")," option. If a format is not supplied, the file is assumed\nto be a text file using UTF8 encoding."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-file"}),Object(m.mdx)("inlineCode",{parentName:"a"},"File")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Returns"),": ",Object(m.mdx)("inlineCode",{parentName:"p"},"Promise.<(string\\|ArrayBuffer)>")," - the contents of the file\n",Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),Object(m.mdx)("table",null,Object(m.mdx)("thead",{parentName:"table"},Object(m.mdx)("tr",{parentName:"thead"},Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Param"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Default"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(m.mdx)("tbody",{parentName:"table"},Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"options"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"Object")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null})),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}))),Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"[options.format]"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"Symbol")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"formats.utf8")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"Optional. Format to read: one of ",Object(m.mdx)("a",Object(r.a)({parentName:"td"},{href:"#module-storage-formats-utf8"}),Object(m.mdx)("inlineCode",{parentName:"a"},"storage.formats.utf8"))," or ",Object(m.mdx)("a",Object(r.a)({parentName:"td"},{href:"#module-storage-formats-binary"}),Object(m.mdx)("inlineCode",{parentName:"a"},"storage.formats.binary")),".")))),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const text = await myNovel.read(); // 'text' is a string\n")),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'const data = await myNovel.read({format: formats.binary}); // \'data\' is an ArrayBuffer\nconsole.log("File is " + data.byteLength + " bytes long.");\n')),Object(m.mdx)("a",{name:"module-storage-file-write",id:"module-storage-file-write"}),Object(m.mdx)("h4",{id:"filewritedata-options"},"file.write(data, options)"),Object(m.mdx)("p",null,"Writes data to a file, appending if desired. The format of the file\nis controlled via the ",Object(m.mdx)("inlineCode",{parentName:"p"},"format")," option, and defaults to UTF8."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-file"}),Object(m.mdx)("inlineCode",{parentName:"a"},"File")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Throws"),":"),Object(m.mdx)("ul",null,Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("inlineCode",{parentName:"li"},"FileIsReadOnly")," if writing to a read-only file"),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("inlineCode",{parentName:"li"},"OutOfSpace")," If writing to the file causes the file system to exceed the available space (or quota)")),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),Object(m.mdx)("table",null,Object(m.mdx)("thead",{parentName:"table"},Object(m.mdx)("tr",{parentName:"thead"},Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Param"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Default"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(m.mdx)("tbody",{parentName:"table"},Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"data"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"string")," ","|"," ",Object(m.mdx)("inlineCode",{parentName:"td"},"ArrayBuffer")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null})),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"Data to write to the file")),Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"options"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"Object")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null})),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}))),Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"[options.format]"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"Symbol")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"formats.utf8")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"Optional. Format to write: ",Object(m.mdx)("a",Object(r.a)({parentName:"td"},{href:"#module-storage-formats-utf8"}),Object(m.mdx)("inlineCode",{parentName:"a"},"storage.formats.utf8"))," or ",Object(m.mdx)("a",Object(r.a)({parentName:"td"},{href:"#module-storage-formats-binary"}),Object(m.mdx)("inlineCode",{parentName:"a"},"storage.formats.binary")),".")))),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'await myNovel.write("It was a dark and stormy night.\\n");\n')),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const data = new Uint8Array([0xFF, 0xA1]);\nawait aDataFile.write(data, {format: formats.binary});  // writes a 2-byte file\n")),Object(m.mdx)("a",{name:"module-storage-filesystemprovider",id:"module-storage-filesystemprovider"}),Object(m.mdx)("h3",{id:"storagefilesystemprovider"},"storage.FileSystemProvider"),Object(m.mdx)("p",null,"Provides access to files and folders on a file system. You don't instantiate\nthis directly; instead you'll use an instance that has already been created for\nyou."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage"}),Object(m.mdx)("inlineCode",{parentName:"a"},"storage")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),Object(m.mdx)("ul",null,Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filesystemprovider"}),".FileSystemProvider"),Object(m.mdx)("ul",{parentName:"li"},Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filesystemprovider-getfileforopening"}),".getFileForOpening(options)")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise.<?File>")," ","|"," ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise.<!Array.<File>>")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filesystemprovider-getfileforsaving"}),".getFileForSaving(suggestedName, options)")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise.<?File>")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filesystemprovider-getfolder"}),".getFolder()")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise.<?Folder>")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filesystemprovider-gettemporaryfolder"}),".getTemporaryFolder()")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise.<Folder>")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filesystemprovider-getdatafolder"}),".getDataFolder()")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise.<Folder>")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filesystemprovider-getpluginfolder"}),".getPluginFolder()")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise.<Folder>")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filesystemprovider-getfsurl"}),".getFsUrl(entry)")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"URL")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filesystemprovider-getnativepath"}),".getNativePath(entry)")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"string"))))),Object(m.mdx)("a",{name:"module-storage-filesystemprovider-getfileforopening",id:"module-storage-filesystemprovider-getfileforopening"}),Object(m.mdx)("h4",{id:"filesystemprovidergetfileforopeningoptions-⇒-promisefile--promisearrayfile"},"fileSystemProvider.getFileForOpening(options) ⇒ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Promise.<File>")," ","|"," ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Promise.<Array.<File>>")),Object(m.mdx)("p",null,'Gets a file (or files) suitable for reading by displaying an "Open" file\npicker dialog to the user. File entries returned by this API are read-only -\nuse ',Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-filesystemprovider-getfileforsaving"}),"getFileForSaving"),"\nto get a File entry you can write to."),Object(m.mdx)("p",null,"The user can select multiple files only if the ",Object(m.mdx)("inlineCode",{parentName:"p"},"allowMultiple")," option is ",Object(m.mdx)("inlineCode",{parentName:"p"},"true"),"."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-filesystemprovider"}),Object(m.mdx)("inlineCode",{parentName:"a"},"FileSystemProvider")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Returns"),": ",Object(m.mdx)("inlineCode",{parentName:"p"},"Promise.<?File>")," ","|"," ",Object(m.mdx)("inlineCode",{parentName:"p"},"Promise.<!Array.<File>>")," - ",Object(m.mdx)("inlineCode",{parentName:"p"},"?File")," if ",Object(m.mdx)("inlineCode",{parentName:"p"},"allowMultiple")," is false (null if picker canceled); or ",Object(m.mdx)("inlineCode",{parentName:"p"},"!Array<File>")," if ",Object(m.mdx)("inlineCode",{parentName:"p"},"allowMultiple")," is true (length 0 if picker canceled)\n",Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),Object(m.mdx)("table",null,Object(m.mdx)("thead",{parentName:"table"},Object(m.mdx)("tr",{parentName:"thead"},Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Param"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Default"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(m.mdx)("tbody",{parentName:"table"},Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"options"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"Object")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null})),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}))),Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"[options.types]"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"Array.<string>")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"[&#x27;*&#x27;]")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),'Optional. Allowed file extensions, with no "." prefix; use ',Object(m.mdx)("a",Object(r.a)({parentName:"td"},{href:"#module-storage-filetypes-all"}),Object(m.mdx)("inlineCode",{parentName:"a"},"storage.fileTypes.all"))," to allow any file to be picked")),Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"[options.allowMultiple]"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"boolean")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"false")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"Optional. If true, multiple files can be selected and this API returns ",Object(m.mdx)("inlineCode",{parentName:"td"},"Array<File>"),".",Object(m.mdx)("br",null),Object(m.mdx)("br",null),"If false, only one file can be selected and this API returns a ",Object(m.mdx)("inlineCode",{parentName:"td"},"File")," directly.")))),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const file = await fs.getFileForOpening();\nif (!file) {\n    // file picker dialog was canceled\n    return;\n}\nconst text = await file.read();\n")),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const files = await fs.getFileForOpening({allowMultiple: true, types: fileTypes.images});\nif (files.length === 0) {\n    // no files selected\n}\n")),Object(m.mdx)("a",{name:"module-storage-filesystemprovider-getfileforsaving",id:"module-storage-filesystemprovider-getfileforsaving"}),Object(m.mdx)("h4",{id:"filesystemprovidergetfileforsavingsuggestedname-options-⇒-promisefile"},"fileSystemProvider.getFileForSaving(suggestedName, options) ⇒ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Promise.<?File>")),Object(m.mdx)("p",null,'Gets a file reference suitable for read-write by displaying a "Save" file\npicker dialog to the user.'),Object(m.mdx)("p",null,"If the act of writing to the file would overwrite it, the file picker\nwill prompt the user to confirm before returning a result to you."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-filesystemprovider"}),Object(m.mdx)("inlineCode",{parentName:"a"},"FileSystemProvider")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Returns"),": ",Object(m.mdx)("inlineCode",{parentName:"p"},"Promise.<?File>")," - returns the selected file, or ",Object(m.mdx)("inlineCode",{parentName:"p"},"null")," if canceled\n",Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),Object(m.mdx)("table",null,Object(m.mdx)("thead",{parentName:"table"},Object(m.mdx)("tr",{parentName:"thead"},Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Param"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(m.mdx)("tbody",{parentName:"table"},Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"suggestedName"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"string")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"Required. The file extension should match one of the options specified in the ",Object(m.mdx)("inlineCode",{parentName:"td"},"types")," option.")),Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"options"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"Object")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}))),Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"[options.types]"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"Array.<string>")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),'Required. Allowed file extensions, with no "." prefix.')))),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'const file = await fs.getFileForSaving("output.txt", { types: [ "txt" ]});\nif (!file) {\n    // file picker was cancelled\n    return;\n}\nawait file.write("It was a dark and stormy night");\n')),Object(m.mdx)("a",{name:"module-storage-filesystemprovider-getfolder",id:"module-storage-filesystemprovider-getfolder"}),Object(m.mdx)("h4",{id:"filesystemprovidergetfolder-⇒-promisefolder"},"fileSystemProvider.getFolder() ⇒ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Promise.<?Folder>")),Object(m.mdx)("p",null,"Gets a folder from the file system via a folder picker dialog. The files\nand folders within can be accessed via ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-folder-getentries"}),"getEntries"),". Any\nfiles within are read-write."),Object(m.mdx)("p",null,"If the user cancels the picker, ",Object(m.mdx)("inlineCode",{parentName:"p"},"null")," is returned instead."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-filesystemprovider"}),Object(m.mdx)("inlineCode",{parentName:"a"},"FileSystemProvider")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Returns"),": ",Object(m.mdx)("inlineCode",{parentName:"p"},"Promise.<?Folder>")," - the selected folder or ",Object(m.mdx)("inlineCode",{parentName:"p"},"null")," if picker is canceled.\n",Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13\n",Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const folder = await fs.getFolder();\nconst myNovel = (await fs.getEntries()).find(entry => entry.name.includes('novel'));\nconst text = await myNovel.read();\n")),Object(m.mdx)("a",{name:"module-storage-filesystemprovider-gettemporaryfolder",id:"module-storage-filesystemprovider-gettemporaryfolder"}),Object(m.mdx)("h4",{id:"filesystemprovidergettemporaryfolder-⇒-promisefolder"},"fileSystemProvider.getTemporaryFolder() ⇒ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Promise.<Folder>")),Object(m.mdx)("p",null,"Returns a temporary folder. The contents of the folder may be lost when\nthe host application is closed."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-filesystemprovider"}),Object(m.mdx)("inlineCode",{parentName:"a"},"FileSystemProvider")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13\n",Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const temp = await fs.getTemporaryFolder();\n")),Object(m.mdx)("a",{name:"module-storage-filesystemprovider-getdatafolder",id:"module-storage-filesystemprovider-getdatafolder"}),Object(m.mdx)("h4",{id:"filesystemprovidergetdatafolder-⇒-promisefolder"},"fileSystemProvider.getDataFolder() ⇒ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Promise.<Folder>")),Object(m.mdx)("p",null,"Returns a folder that can be used for storing plugin-specific data without needing user\ninteraction though a file picker. Its contents remain persistent when the host\napplication is updated ",Object(m.mdx)("em",{parentName:"p"},"and")," when your plugin is updated."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-filesystemprovider"}),Object(m.mdx)("inlineCode",{parentName:"a"},"FileSystemProvider")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),Object(m.mdx)("a",{name:"module-storage-filesystemprovider-getpluginfolder",id:"module-storage-filesystemprovider-getpluginfolder"}),Object(m.mdx)("h4",{id:"filesystemprovidergetpluginfolder-⇒-promisefolder"},"fileSystemProvider.getPluginFolder() ⇒ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Promise.<Folder>")),Object(m.mdx)("p",null,"Returns an plugin's folder – this folder and everything within it are read only.\nThis contains all the Plugin related packaged assets."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-filesystemprovider"}),Object(m.mdx)("inlineCode",{parentName:"a"},"FileSystemProvider")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),Object(m.mdx)("a",{name:"module-storage-filesystemprovider-getfsurl",id:"module-storage-filesystemprovider-getfsurl"}),Object(m.mdx)("h4",{id:"filesystemprovidergetfsurlentry-⇒-url"},"fileSystemProvider.getFsUrl(entry) ⇒ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"URL")),Object(m.mdx)("p",null,"Returns the fs url of given entry."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-filesystemprovider"}),Object(m.mdx)("inlineCode",{parentName:"a"},"FileSystemProvider"))),Object(m.mdx)("table",null,Object(m.mdx)("thead",{parentName:"table"},Object(m.mdx)("tr",{parentName:"thead"},Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Param"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"))),Object(m.mdx)("tbody",{parentName:"table"},Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"entry"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"Entry"))))),Object(m.mdx)("a",{name:"module-storage-filesystemprovider-getnativepath",id:"module-storage-filesystemprovider-getnativepath"}),Object(m.mdx)("h4",{id:"filesystemprovidergetnativepathentry-⇒-string"},"fileSystemProvider.getNativePath(entry) ⇒ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"string")),Object(m.mdx)("p",null,"Returns the platform native file system path of given entry."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-filesystemprovider"}),Object(m.mdx)("inlineCode",{parentName:"a"},"FileSystemProvider"))),Object(m.mdx)("table",null,Object(m.mdx)("thead",{parentName:"table"},Object(m.mdx)("tr",{parentName:"thead"},Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Param"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"))),Object(m.mdx)("tbody",{parentName:"table"},Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"entry"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"Entry"))))),Object(m.mdx)("a",{name:"module-storage-folder",id:"module-storage-folder"}),Object(m.mdx)("h3",{id:"storagefolder-⇐-entry"},"storage.Folder ⇐ ",Object(m.mdx)("inlineCode",{parentName:"h3"},"Entry")),Object(m.mdx)("p",null,"Represents a folder on a file system. You'll never instantiate this directly,\nbut will get it by calling ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-filesystemprovider-gettemporaryfolder"}),"getTemporaryFolder"),",\n",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-filesystemprovider-getfolder"}),"getFolder"),", or via\n",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-folder-getentries"}),"getEntries"),"."),Object(m.mdx)("blockquote",null,Object(m.mdx)("p",{parentName:"blockquote"},Object(m.mdx)("strong",{parentName:"p"},"Info")),Object(m.mdx)("p",{parentName:"blockquote"},"Important:"),Object(m.mdx)("ul",{parentName:"blockquote"},Object(m.mdx)("li",{parentName:"ul"},"A Folder object may exist even if the corresponding folder on disk does not currently\nexist."),Object(m.mdx)("li",{parentName:"ul"},"It's possible for multiple Folder objects to represent the same folder on disk,\nfor example if the folder was picked via multiple separate folder picker invocations."))),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage"}),Object(m.mdx)("inlineCode",{parentName:"a"},"storage")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Extends"),": ",Object(m.mdx)("inlineCode",{parentName:"p"},"Entry"),"\n",Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),Object(m.mdx)("ul",null,Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-folder"}),".Folder")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Entry"),Object(m.mdx)("ul",{parentName:"li"},Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-folder-getentries"}),".getEntries()")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise.<Array.<Entry>>")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-folder-createfile"}),".createFile(name, options)")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise.<File>")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-folder-createfolder"}),".createFolder(name)")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Folder")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-folder-getentry"}),".getEntry(filePath)")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise.<(File\\|Folder)>")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-folder-renameentry"}),".renameEntry(entry, newName, options)")," ⇒ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Promise"))))),Object(m.mdx)("a",{name:"module-storage-folder-getentries",id:"module-storage-folder-getentries"}),Object(m.mdx)("h4",{id:"foldergetentries-⇒-promisearrayentry"},"folder.getEntries() ⇒ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Promise.<Array.<Entry>>")),Object(m.mdx)("p",null,"Returns an array of entries contained within this folder."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-folder"}),Object(m.mdx)("inlineCode",{parentName:"a"},"Folder")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Returns"),": ",Object(m.mdx)("inlineCode",{parentName:"p"},"Promise.<Array.<Entry>>")," - The entries within the folder.\n",Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13\n",Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const entries = await aFolder.getEntries();\nconst allFiles = entries.filter(entry => entry.isFile);\n")),Object(m.mdx)("a",{name:"module-storage-folder-createfile",id:"module-storage-folder-createfile"}),Object(m.mdx)("h4",{id:"foldercreatefilename-options-⇒-promisefile"},"folder.createFile(name, options) ⇒ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Promise.<File>")),Object(m.mdx)("p",null,"Creates a File object within this folder, which need not correspond to a file that exists on disk\nyet."),Object(m.mdx)("blockquote",null,Object(m.mdx)("p",{parentName:"blockquote"},Object(m.mdx)("strong",{parentName:"p"},"Info")),Object(m.mdx)("p",{parentName:"blockquote"},"Important:"),Object(m.mdx)("ul",{parentName:"blockquote"},Object(m.mdx)("li",{parentName:"ul"},"If the file already exists on disk (and ",Object(m.mdx)("inlineCode",{parentName:"li"},"overwrite")," is true), creates a File object but does not\nmodify the existing file on disk in any way."),Object(m.mdx)("li",{parentName:"ul"},"If the file does not exist yet, creates a File object but does ",Object(m.mdx)("em",{parentName:"li"},"not")," create the file on disk yet.\nYou can then use ",Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-file-write"}),"write")," to create the file and give it\ncontent."))),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-folder"}),Object(m.mdx)("inlineCode",{parentName:"a"},"Folder")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Returns"),": ",Object(m.mdx)("inlineCode",{parentName:"p"},"Promise.<File>")," - the created file entry\n",Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),Object(m.mdx)("table",null,Object(m.mdx)("thead",{parentName:"table"},Object(m.mdx)("tr",{parentName:"thead"},Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Param"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Default"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(m.mdx)("tbody",{parentName:"table"},Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"name"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"string")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null})),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"the name of the file to create.")),Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"options"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"Object")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null})),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}))),Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"[options.overwrite]"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"boolean")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"false")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"If ",Object(m.mdx)("inlineCode",{parentName:"td"},"false"),", the call will fail if the file already exists. If ",Object(m.mdx)("inlineCode",{parentName:"td"},"true"),", the call will succeed regardless of whether the file currently exists on disk.")))),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'const myNovelTxtFile = await aFolder.createFile("mynovel.txt");\n')),Object(m.mdx)("a",{name:"module-storage-folder-createfolder",id:"module-storage-folder-createfolder"}),Object(m.mdx)("h4",{id:"foldercreatefoldername-⇒-folder"},"folder.createFolder(name) ⇒ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Folder")),Object(m.mdx)("p",null,"Creates a Folder object within this folder ",Object(m.mdx)("em",{parentName:"p"},"and")," creates the folder on disk. Unlike ",Object(m.mdx)("inlineCode",{parentName:"p"},"createFile()"),",\nthis call ",Object(m.mdx)("em",{parentName:"p"},"does")," modify the disk, and it cannot be used if the folder already exists\n(use ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-folder-getentry"}),"getEntry")," in that case)."),Object(m.mdx)("blockquote",null,Object(m.mdx)("p",{parentName:"blockquote"},Object(m.mdx)("strong",{parentName:"p"},"Info")),Object(m.mdx)("p",{parentName:"blockquote"},"Important:"),Object(m.mdx)("ul",{parentName:"blockquote"},Object(m.mdx)("li",{parentName:"ul"},"If the folder already exists on disk, fails with an error."),Object(m.mdx)("li",{parentName:"ul"},"If the folder does not exist yet, immediately creates it on disk and then returns a Folder object\nfor it."))),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-folder"}),Object(m.mdx)("inlineCode",{parentName:"a"},"Folder")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Returns"),": ",Object(m.mdx)("inlineCode",{parentName:"p"},"Folder")," - the created folder entry object\n",Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),Object(m.mdx)("table",null,Object(m.mdx)("thead",{parentName:"table"},Object(m.mdx)("tr",{parentName:"thead"},Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Param"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(m.mdx)("tbody",{parentName:"table"},Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"name"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"string")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"the name of the folder to create.")))),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'const myCollectionsFolder = await aFolder.createFolder("collections");\n')),Object(m.mdx)("a",{name:"module-storage-folder-getentry",id:"module-storage-folder-getentry"}),Object(m.mdx)("h4",{id:"foldergetentryfilepath-⇒-promisefilefolder"},"folder.getEntry(filePath) ⇒ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Promise.<(File\\|Folder)>")),Object(m.mdx)("p",null,"Returns a File or Folder entry for an item that already exists on disk within this folder or\nits hierarchy of subfolders. Fails if no entry with the given name/path currently exists on disk."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-folder"}),Object(m.mdx)("inlineCode",{parentName:"a"},"Folder")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Returns"),": ",Object(m.mdx)("inlineCode",{parentName:"p"},"Promise.<(File\\|Folder)>")," - the fetched entry.\n",Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),Object(m.mdx)("table",null,Object(m.mdx)("thead",{parentName:"table"},Object(m.mdx)("tr",{parentName:"thead"},Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Param"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(m.mdx)("tbody",{parentName:"table"},Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"filePath"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"string")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"Name, with optional relative path prefix, of an existing entry within this folder")))),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'const myNovel = await aFolder.getEntry("mynovel.txt");\n')),Object(m.mdx)("a",{name:"module-storage-folder-renameentry",id:"module-storage-folder-renameentry"}),Object(m.mdx)("h4",{id:"folderrenameentryentry-newname-options-⇒-promise"},"folder.renameEntry(entry, newName, options) ⇒ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Promise")),Object(m.mdx)("p",null,"Renames an item on disk to a new name within the same folder. The Entry object passed to this\nfunction is automatically updated to reference the new name, however any ",Object(m.mdx)("em",{parentName:"p"},"other")," Entry objects\nreferencing the original item will not be updated, and will thus no longer point to an item that\nexists on disk."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-folder"}),Object(m.mdx)("inlineCode",{parentName:"a"},"Folder")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Since"),": XD 13"),Object(m.mdx)("table",null,Object(m.mdx)("thead",{parentName:"table"},Object(m.mdx)("tr",{parentName:"thead"},Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Param"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Default"),Object(m.mdx)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(m.mdx)("tbody",{parentName:"table"},Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"entry"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"Entry")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null})),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"entry to rename (File or Folder). Must exist.")),Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"newName"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"string")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null})),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"the new name to assign")),Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"options"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"any")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null})),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}))),Object(m.mdx)("tr",{parentName:"tbody"},Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"[options.overwrite]"),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"boolean")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(m.mdx)("inlineCode",{parentName:"td"},"false")),Object(m.mdx)("td",Object(r.a)({parentName:"tr"},{align:null}),"if ",Object(m.mdx)("inlineCode",{parentName:"td"},"true"),", renaming can overwrite an existing entry")))),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Example")),Object(m.mdx)("pre",null,Object(m.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'await myNovels.rename(myNovel, "myFantasticNovel.txt");\n')),Object(m.mdx)("a",{name:"module-storage-localfilesystem",id:"module-storage-localfilesystem"}),Object(m.mdx)("h3",{id:"storagelocalfilesystem--localfilesystemprovider"},"storage.localFileSystem : ",Object(m.mdx)("inlineCode",{parentName:"h3"},"LocalFileSystemProvider")),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static property of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage"}),Object(m.mdx)("inlineCode",{parentName:"a"},"storage"))),Object(m.mdx)("a",{name:"module-storage-errors",id:"module-storage-errors"}),Object(m.mdx)("h3",{id:"storageerrors--errors"},"storage.errors : ",Object(m.mdx)("inlineCode",{parentName:"h3"},"Errors")),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static property of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage"}),Object(m.mdx)("inlineCode",{parentName:"a"},"storage"))),Object(m.mdx)("ul",null,Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors"}),".errors")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"Errors"),Object(m.mdx)("ul",{parentName:"li"},Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors-abstractmethodinvocationerror"}),".AbstractMethodInvocationError")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Error")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors-providermismatcherror"}),".ProviderMismatchError")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Error")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors-entryisnotanentryerror"}),".EntryIsNotAnEntryError")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Error")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors-entryisnotafoldererror"}),".EntryIsNotAFolderError")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Error")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors-entryisnotafileerror"}),".EntryIsNotAFileError")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Error")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors-notafilesystemerror"}),".NotAFileSystemError")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Error")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors-outofspaceerror"}),".OutOfSpaceError")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Error")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors-permissiondeniederror"}),".PermissionDeniedError")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Error")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors-entryexistserror"}),".EntryExistsError")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Error")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors-fileisreadonlyerror"}),".FileIsReadOnlyError")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Error")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors-domainnotsupportederror"}),".DomainNotSupportedError")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Error")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-errors-invalidfilenameerror"}),".InvalidFileNameError")," ⇐ ",Object(m.mdx)("inlineCode",{parentName:"li"},"Error"))))),Object(m.mdx)("a",{name:"module-storage-errors-abstractmethodinvocationerror",id:"module-storage-errors-abstractmethodinvocationerror"}),Object(m.mdx)("h4",{id:"errorsabstractmethodinvocationerror-⇐-error"},"errors.AbstractMethodInvocationError ⇐ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Error")),Object(m.mdx)("p",null,"Attempted to invoke an abstract method."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-errors"}),Object(m.mdx)("inlineCode",{parentName:"a"},"errors")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Extends"),": ",Object(m.mdx)("inlineCode",{parentName:"p"},"Error")),Object(m.mdx)("a",{name:"module-storage-errors-providermismatcherror",id:"module-storage-errors-providermismatcherror"}),Object(m.mdx)("h4",{id:"errorsprovidermismatcherror-⇐-error"},"errors.ProviderMismatchError ⇐ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Error")),Object(m.mdx)("p",null,"Attempted to execute a command that required the providers of all\nentries to match."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-errors"}),Object(m.mdx)("inlineCode",{parentName:"a"},"errors")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Extends"),": ",Object(m.mdx)("inlineCode",{parentName:"p"},"Error")),Object(m.mdx)("a",{name:"module-storage-errors-entryisnotanentryerror",id:"module-storage-errors-entryisnotanentryerror"}),Object(m.mdx)("h4",{id:"errorsentryisnotanentryerror-⇐-error"},"errors.EntryIsNotAnEntryError ⇐ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Error")),Object(m.mdx)("p",null,"The object passed as an entry is not actually an ",Object(m.mdx)("inlineCode",{parentName:"p"},"Entry"),"."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-errors"}),Object(m.mdx)("inlineCode",{parentName:"a"},"errors")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Extends"),": ",Object(m.mdx)("inlineCode",{parentName:"p"},"Error")),Object(m.mdx)("a",{name:"module-storage-errors-entryisnotafoldererror",id:"module-storage-errors-entryisnotafoldererror"}),Object(m.mdx)("h4",{id:"errorsentryisnotafoldererror-⇐-error"},"errors.EntryIsNotAFolderError ⇐ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Error")),Object(m.mdx)("p",null,"The entry is not a folder, but was expected to be a folder."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-errors"}),Object(m.mdx)("inlineCode",{parentName:"a"},"errors")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Extends"),": ",Object(m.mdx)("inlineCode",{parentName:"p"},"Error")),Object(m.mdx)("a",{name:"module-storage-errors-entryisnotafileerror",id:"module-storage-errors-entryisnotafileerror"}),Object(m.mdx)("h4",{id:"errorsentryisnotafileerror-⇐-error"},"errors.EntryIsNotAFileError ⇐ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Error")),Object(m.mdx)("p",null,"The entry is not a file, but was expected to be."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-errors"}),Object(m.mdx)("inlineCode",{parentName:"a"},"errors")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Extends"),": ",Object(m.mdx)("inlineCode",{parentName:"p"},"Error")),Object(m.mdx)("a",{name:"module-storage-errors-notafilesystemerror",id:"module-storage-errors-notafilesystemerror"}),Object(m.mdx)("h4",{id:"errorsnotafilesystemerror-⇐-error"},"errors.NotAFileSystemError ⇐ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Error")),Object(m.mdx)("p",null,"The instance was expected to be a file system, but wasn't."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-errors"}),Object(m.mdx)("inlineCode",{parentName:"a"},"errors")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Extends"),": ",Object(m.mdx)("inlineCode",{parentName:"p"},"Error")),Object(m.mdx)("a",{name:"module-storage-errors-outofspaceerror",id:"module-storage-errors-outofspaceerror"}),Object(m.mdx)("h4",{id:"errorsoutofspaceerror-⇐-error"},"errors.OutOfSpaceError ⇐ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Error")),Object(m.mdx)("p",null,"The file system is out of space (or quota has been exceeded)"),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-errors"}),Object(m.mdx)("inlineCode",{parentName:"a"},"errors")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Extends"),": ",Object(m.mdx)("inlineCode",{parentName:"p"},"Error")),Object(m.mdx)("a",{name:"module-storage-errors-permissiondeniederror",id:"module-storage-errors-permissiondeniederror"}),Object(m.mdx)("h4",{id:"errorspermissiondeniederror-⇐-error"},"errors.PermissionDeniedError ⇐ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Error")),Object(m.mdx)("p",null,"The file system revoked permission to complete the requested\naction."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-errors"}),Object(m.mdx)("inlineCode",{parentName:"a"},"errors")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Extends"),": ",Object(m.mdx)("inlineCode",{parentName:"p"},"Error")),Object(m.mdx)("a",{name:"module-storage-errors-entryexistserror",id:"module-storage-errors-entryexistserror"}),Object(m.mdx)("h4",{id:"errorsentryexistserror-⇐-error"},"errors.EntryExistsError ⇐ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Error")),Object(m.mdx)("p",null,"An attempt was made to overwrite an entry without indicating\nthat it was safe to do so via ",Object(m.mdx)("inlineCode",{parentName:"p"},"overwrite: true"),"."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-errors"}),Object(m.mdx)("inlineCode",{parentName:"a"},"errors")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Extends"),": ",Object(m.mdx)("inlineCode",{parentName:"p"},"Error")),Object(m.mdx)("a",{name:"module-storage-errors-fileisreadonlyerror",id:"module-storage-errors-fileisreadonlyerror"}),Object(m.mdx)("h4",{id:"errorsfileisreadonlyerror-⇐-error"},"errors.FileIsReadOnlyError ⇐ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Error")),Object(m.mdx)("p",null,"An attempt was made to write to a file that was opened as\nread-only."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-errors"}),Object(m.mdx)("inlineCode",{parentName:"a"},"errors")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Extends"),": ",Object(m.mdx)("inlineCode",{parentName:"p"},"Error")),Object(m.mdx)("a",{name:"module-storage-errors-domainnotsupportederror",id:"module-storage-errors-domainnotsupportederror"}),Object(m.mdx)("h4",{id:"errorsdomainnotsupportederror-⇐-error"},"errors.DomainNotSupportedError ⇐ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Error")),Object(m.mdx)("p",null,"Domain is not supported by the current FileSystemProvider\ninstance."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-errors"}),Object(m.mdx)("inlineCode",{parentName:"a"},"errors")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Extends"),": ",Object(m.mdx)("inlineCode",{parentName:"p"},"Error")),Object(m.mdx)("a",{name:"module-storage-errors-invalidfilenameerror",id:"module-storage-errors-invalidfilenameerror"}),Object(m.mdx)("h4",{id:"errorsinvalidfilenameerror-⇐-error"},"errors.InvalidFileNameError ⇐ ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Error")),Object(m.mdx)("p",null,"The file name contains invalid characters"),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static class of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-errors"}),Object(m.mdx)("inlineCode",{parentName:"a"},"errors")),"\n",Object(m.mdx)("strong",{parentName:"p"},"Extends"),": ",Object(m.mdx)("inlineCode",{parentName:"p"},"Error")),Object(m.mdx)("a",{name:"module-storage-filetypes",id:"module-storage-filetypes"}),Object(m.mdx)("h3",{id:"storagefiletypes"},"storage.fileTypes"),Object(m.mdx)("p",null,"This namespace describes the various file type extensions that can used be used in some FS file open methods."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static constant of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage"}),Object(m.mdx)("inlineCode",{parentName:"a"},"storage"))),Object(m.mdx)("ul",null,Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filetypes"}),".fileTypes"),Object(m.mdx)("ul",{parentName:"li"},Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filetypes-text"}),".text")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filetypes-images"}),".images")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-filetypes-all"}),".all"))))),Object(m.mdx)("a",{name:"module-storage-filetypes-text",id:"module-storage-filetypes-text"}),Object(m.mdx)("h4",{id:"filetypestext"},"fileTypes.text"),Object(m.mdx)("p",null,"Text file extensions"),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static property of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-filetypes"}),Object(m.mdx)("inlineCode",{parentName:"a"},"fileTypes"))),Object(m.mdx)("a",{name:"module-storage-filetypes-images",id:"module-storage-filetypes-images"}),Object(m.mdx)("h4",{id:"filetypesimages"},"fileTypes.images"),Object(m.mdx)("p",null,"Image file extensions"),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static property of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-filetypes"}),Object(m.mdx)("inlineCode",{parentName:"a"},"fileTypes"))),Object(m.mdx)("a",{name:"module-storage-filetypes-all",id:"module-storage-filetypes-all"}),Object(m.mdx)("h4",{id:"filetypesall"},"fileTypes.all"),Object(m.mdx)("p",null,"All file types"),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static property of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-filetypes"}),Object(m.mdx)("inlineCode",{parentName:"a"},"fileTypes"))),Object(m.mdx)("a",{name:"module-storage-formats",id:"module-storage-formats"}),Object(m.mdx)("h3",{id:"storageformats"},"storage.formats"),Object(m.mdx)("p",null,"This namespace describes the file content formats supported in FS methods like read and write."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static constant of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage"}),Object(m.mdx)("inlineCode",{parentName:"a"},"storage"))),Object(m.mdx)("ul",null,Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-formats"}),".formats"),Object(m.mdx)("ul",{parentName:"li"},Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-formats-utf8"}),".utf8")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"Symbol")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-formats-binary"}),".binary")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"Symbol"))))),Object(m.mdx)("a",{name:"module-storage-formats-utf8",id:"module-storage-formats-utf8"}),Object(m.mdx)("h4",{id:"formatsutf8--symbol"},"formats.utf8 : ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Symbol")),Object(m.mdx)("p",null,"UTF8 File encoding"),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static property of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-formats"}),Object(m.mdx)("inlineCode",{parentName:"a"},"formats"))),Object(m.mdx)("a",{name:"module-storage-formats-binary",id:"module-storage-formats-binary"}),Object(m.mdx)("h4",{id:"formatsbinary--symbol"},"formats.binary : ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Symbol")),Object(m.mdx)("p",null,"Binary file encoding"),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static property of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-formats"}),Object(m.mdx)("inlineCode",{parentName:"a"},"formats"))),Object(m.mdx)("a",{name:"module-storage-modes",id:"module-storage-modes"}),Object(m.mdx)("h3",{id:"storagemodes"},"storage.modes"),Object(m.mdx)("p",null,"This namespace describes the access modes that can be supported by a given File entry."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static constant of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage"}),Object(m.mdx)("inlineCode",{parentName:"a"},"storage"))),Object(m.mdx)("ul",null,Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-modes"}),".modes"),Object(m.mdx)("ul",{parentName:"li"},Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-modes-readonly"}),".readOnly")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"Symbol")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-modes-readwrite"}),".readWrite")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"Symbol"))))),Object(m.mdx)("a",{name:"module-storage-modes-readonly",id:"module-storage-modes-readonly"}),Object(m.mdx)("h4",{id:"modesreadonly--symbol"},"modes.readOnly : ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Symbol")),Object(m.mdx)("p",null,"The file is read-only; attempts to write will fail."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static property of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-modes"}),Object(m.mdx)("inlineCode",{parentName:"a"},"modes"))),Object(m.mdx)("a",{name:"module-storage-modes-readwrite",id:"module-storage-modes-readwrite"}),Object(m.mdx)("h4",{id:"modesreadwrite--symbol"},"modes.readWrite : ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Symbol")),Object(m.mdx)("p",null,"The file is read-write."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static property of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-modes"}),Object(m.mdx)("inlineCode",{parentName:"a"},"modes"))),Object(m.mdx)("a",{name:"module-storage-types",id:"module-storage-types"}),Object(m.mdx)("h3",{id:"storagetypes"},"storage.types"),Object(m.mdx)("p",null,"This namespace describes the type of the entry. Whether file or folder etc."),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static constant of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage"}),Object(m.mdx)("inlineCode",{parentName:"a"},"storage"))),Object(m.mdx)("ul",null,Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-types"}),".types"),Object(m.mdx)("ul",{parentName:"li"},Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-types-file"}),".file")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"Symbol")),Object(m.mdx)("li",{parentName:"ul"},Object(m.mdx)("a",Object(r.a)({parentName:"li"},{href:"#module-storage-types-folder"}),".folder")," : ",Object(m.mdx)("inlineCode",{parentName:"li"},"Symbol"))))),Object(m.mdx)("a",{name:"module-storage-types-file",id:"module-storage-types-file"}),Object(m.mdx)("h4",{id:"typesfile--symbol"},"types.file : ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Symbol")),Object(m.mdx)("p",null,"A file; used when creating an entity"),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static property of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-types"}),Object(m.mdx)("inlineCode",{parentName:"a"},"types"))),Object(m.mdx)("a",{name:"module-storage-types-folder",id:"module-storage-types-folder"}),Object(m.mdx)("h4",{id:"typesfolder--symbol"},"types.folder : ",Object(m.mdx)("inlineCode",{parentName:"h4"},"Symbol")),Object(m.mdx)("p",null,"A folder; used when creating an entity"),Object(m.mdx)("p",null,Object(m.mdx)("strong",{parentName:"p"},"Kind"),": static property of ",Object(m.mdx)("a",Object(r.a)({parentName:"p"},{href:"#module-storage-types"}),Object(m.mdx)("inlineCode",{parentName:"a"},"types"))))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-develop-reference-uxp-module-storage-md-4209f91570397454df06.js.map