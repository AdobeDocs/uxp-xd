{"version":3,"file":"component---src-pages-develop-reference-interactions-md-0eea68dfe390a2f30f4c.js","mappings":"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","sources":["webpack://uxp-xd/./src/pages/develop/reference/interactions.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"interactions\"\n    }}>{`interactions`}</h1>\n    <p><strong parentName=\"p\">{`Since`}</strong>{`: XD 19+ (some APIs added later)`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`interactions`}</inlineCode>{` module and related APIs provide `}<em parentName=\"p\">{`read only`}</em>{` information about the document's interactive prototype mode, including:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The blue \"wires\" seen in XD's prototyping UI, known as \"interactions,\" which specify gestures/events which trigger actions to\noccur in the prototype. Accessible as a single consolidated global listing via this module's `}<a parentName=\"p\" {...{\n            \"href\": \"#allinteractions\"\n          }}>{`allInteractions`}</a>{` API,\nor you can access information from specific nodes in the scenegraph via `}<a parentName=\"p\" {...{\n            \"href\": \"/uxp-xd/develop/reference/SceneNode/#triggeredinteractions\"\n          }}>{`SceneNode.triggeredInteractions`}</a>{`\nand `}<a parentName=\"p\" {...{\n            \"href\": \"/uxp-xd/develop/reference/Artboard/#incominginteractions\"\n          }}>{`Artboard.incomingInteractions`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Designers can author multiple prototype or interaction flows in a single document and publish unique shareable links for each flow. Developers can access all document flows using the `}<a parentName=\"p\" {...{\n            \"href\": \"#flows\"\n          }}>{`flows`}</a>{` API. With multiple flow support the `}<a parentName=\"p\" {...{\n            \"href\": \"#homeartboard\"\n          }}>{`homeArtboard`}</a>{` API is being deprecated as XD no longer has a single home artboard restriction.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Properties that affect Artboard scrolling behavior: Artboard `}<a parentName=\"p\" {...{\n            \"href\": \"/uxp-xd/develop/reference/Artboard/#viewportheight\"\n          }}>{`viewportHeight`}</a>{` and\nnode `}<a parentName=\"p\" {...{\n            \"href\": \"/uxp-xd/develop/reference/SceneNode/#fixedwhenscrolling\"\n          }}>{`fixedWhenScrolling`}</a>{`.`}</p>\n      </li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Tip`}</strong>{`\nInteractions are a `}<strong parentName=\"p\">{`fast-changing area`}</strong>{` in XD. APIs here have a higher likelihood of becoming deprecated, or lagging behind new XD features, than other parts of XD's plugin APIs.`}</p>\n    </blockquote>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// Get all interactions in the entire document (grouped by triggering node)\nvar allInteractions = require(\"interactions\").allInteractions;\n\n// Get interactions triggered by the selected node\nvar nodeInteractions = selection.items[0].triggeredInteractions;\n\n// Get all interactions leading to a particular artboard\nvar artboard = ...\nvar interactionsToArtboard = artboard.incomingInteractions;\n\n// Print out details of one particular interaction\nvar interaction = ...\nconsole.log(\"Trigger: \" + interaction.trigger.type + \" -> Action: \" + interaction.action.type);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"typedefs\"\n    }}>{`Typedefs`}</h2>\n    <h3 {...{\n      \"id\": \"typedef-interaction\"\n    }}>{`Typedef Interaction`}</h3>\n    <p>{`An interaction consists of a Trigger + Action pair and is attached to a single, specific scenenode.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`trigger`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#typedef-trigger\"\n            }}>{`Trigger`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`User gesture or other event which will trigger the action.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`action`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#typedef-action\"\n            }}>{`Action`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Action that occurs.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Example:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`{\n    trigger: {\n        type: \"tap\"\n    },\n    action: {\n        type: \"goToArtboard\",\n        destination: /* Artboard node */,\n        preserveScrollPosition: false,\n        transition: {\n            type: \"dissolve\",\n            duration: 0.4,\n            easing: \"ease-out\"\n        }\n    }\n}\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Tip`}</strong>{`\nNote: Interaction objects are `}<em parentName=\"p\">{`not`}</em>{` plain JSON -- they may reference scenenodes (as seen above) and other strongly-typed objects.`}</p>\n    </blockquote>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"typedef-trigger\"\n    }}>{`Typedef Trigger`}</h3>\n    <p>{`Event which triggers an interaction.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`type`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`One of the trigger types listed below.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Tip`}</strong>{`\nNote: Additional trigger types may be added in the future. Always be sure to have a default case for unknown triggers when\nworking with Interaction objects.`}</p>\n    </blockquote>\n    <h4 {...{\n      \"id\": \"tap\"\n    }}>{`\"tap\"`}</h4>\n    <p>{`When the user clicks or taps on a scenenode.`}</p>\n    <h4 {...{\n      \"id\": \"drag\"\n    }}>{`\"drag\"`}</h4>\n    <p>{`When the user drags or swipes a scenenode. Can only trigger a `}<inlineCode parentName=\"p\">{`goToArtboard`}</inlineCode>{` action with the `}<inlineCode parentName=\"p\">{`autoAnimate`}</inlineCode>{` transition style.`}</p>\n    <h4 {...{\n      \"id\": \"time\"\n    }}>{`\"time\"`}</h4>\n    <p>{`Once a set amount of time elapses (this trigger type only exists on Artboard nodes). Additional Trigger properties:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`delay`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Delay time in ms.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h4 {...{\n      \"id\": \"voice\"\n    }}>{`\"voice\"`}</h4>\n    <p>{`When the user speaks a specific voice command. Additional Trigger properties:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`speechCommand`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Phrase the user speaks to trigger this command.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"typedef-action\"\n    }}>{`Typedef Action`}</h3>\n    <p>{`Action performed when the trigger occurs.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`type`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`One of the action types listed below.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Tip`}</strong>{`\nNote: Additional action types may be added in the future. Always be sure to have a default case for unknown actions when\nworking with Interaction objects.`}</p>\n    </blockquote>\n    <h4 {...{\n      \"id\": \"gotoartboard\"\n    }}>{`\"goToArtboard\"`}</h4>\n    <p>{`Navigate the entire screen to view a different artboard. Additional Action properties:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`destination`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"/uxp-xd/develop/reference/Artboard\"\n            }}>{`Artboard`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Artboard to navigate to.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`transition`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#typedef-transition\"\n            }}>{`Transition`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Animation style with which the view transitions from the old Artboard to the new one.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`preserveScrollPosition`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If both Artboards are `}<a parentName=\"td\" {...{\n              \"href\": \"/uxp-xd/develop/reference/Artboard/#viewportheight\"\n            }}>{`taller than the viewport`}</a>{`, attempts to keep the user's current scroll position the same as in the outgoing artboard.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h4 {...{\n      \"id\": \"overlay\"\n    }}>{`\"overlay\"`}</h4>\n    <p>{`Displays a second artboard overlaid on top of the current one. Additional Action properties:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`overlay`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"/uxp-xd/develop/reference/Artboard\"\n            }}>{`Artboard`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Artboard to show on top.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`transition`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#typedef-transition\"\n            }}>{`Transition`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Animation style in which the second Artboard transitions into view. Only certain transition types are allowed for overlays.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`overlayTopLeft`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`{x:number, y:number}`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Position of the overlay Artboard, in the current/base Artboard's coordinate space.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h4 {...{\n      \"id\": \"goback\"\n    }}>{`\"goBack\"`}</h4>\n    <p>{`Reverse the last `}<inlineCode parentName=\"p\">{`\"goToArtboard\"`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`\"overlay\"`}</inlineCode>{` action, replaying in reverse whatever transition it used.`}</p>\n    <h4 {...{\n      \"id\": \"speak\"\n    }}>{`\"speak\"`}</h4>\n    <p>{`Speak with audio output to the user. Additional Action properties:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`speechOutput`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Phrase to speak to the user.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`locale`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Locale determines the pronounciation and accent of the digital voice. Includes both language `}<em parentName=\"td\">{`and`}</em>{` region (e.g. \"en-us\").`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`voice`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"Persona\" of the digital voice to use. Available personas vary by locale.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"typedef-transition\"\n    }}>{`Typedef Transition`}</h3>\n    <p>{`Animation style with which `}<inlineCode parentName=\"p\">{`\"goToArtboard\"`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`\"overlay\"`}</inlineCode>{` actions transition from/to Artboards.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`type`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`One of: `}<inlineCode parentName=\"td\">{`\"autoAnimate\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"dissolve\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"push\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"slide\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"none\"`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`fromSide`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><em parentName=\"td\">{`(If type = \"push\" or \"slide\").`}</em>{` One of: `}<inlineCode parentName=\"td\">{`\"L\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"R\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"T\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"B\"`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`duration`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Length of animation in seconds.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`easing`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`One of: `}<inlineCode parentName=\"td\">{`\"linear\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"ease-in\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"ease-out\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"ease-in-out\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"wind-up\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"bounce\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"snap\"`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"typedef-flowinfo\"\n    }}>{`Typedef FlowInfo`}</h3>\n    <p>{`Information related to a particular flow`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`name`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Auto-generated or user-defined label for a particular flow.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`homeArtboard`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"/uxp-xd/develop/reference/Artboard\"\n            }}>{`Artboard`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Artboard from which a particular flow or a prototype experience begins.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`url`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`URL is the latest published link associated with a particular flow and can be `}<inlineCode parentName=\"td\">{`null`}</inlineCode>{` in case no link is published for that flow.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`NOTE: All `}<inlineCode parentName=\"p\">{`url`}</inlineCode>{` returned via `}<a parentName=\"p\" {...{\n        \"href\": \"#flows\"\n      }}>{`flows`}</a>{` are related to published flows and are usually a subset of the URLs returned via `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/cloud/#getsharedartifacts\"\n      }}>{`getSharedArtifacts`}</a>{`. However, the reverse may or may not always hold true.`}</p>\n    <h2 {...{\n      \"id\": \"homeartboard\"\n    }}>{`homeArtboard`}</h2>\n    <p>{`▸ homeArtboard: ?`}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/Artboard\"\n      }}>{`Artboard`}</a></p>\n    <p>{`The starting Artboard seen when the interactive prototype is launched.`}</p>\n    <p><strong parentName=\"p\">{`Deprecated`}</strong>{`: XD 33 - Please use `}<a parentName=\"p\" {...{\n        \"href\": \"#flows\"\n      }}>{`flows`}</a>{` which supports multple flows.`}</p>\n    <p><strong parentName=\"p\">{`Since`}</strong>{`: XD 32`}</p>\n    <p>{`In case there are multiple interactive prototype experiences (flows), implying multiple home artboards, this API only returns the top-left artboard among all of those home artboards.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static property of `}<a parentName=\"p\" {...{\n        \"href\": \"#module_interactions\"\n      }}>{`interactions`}</a>{`\n`}<strong parentName=\"p\">{`Read only`}</strong>{`: true`}</p>\n    <p><strong parentName=\"p\">{`See`}</strong>{`: `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/Artboard/#ishomeartboard\"\n      }}>{`Artboard.isHomeArtboard`}</a></p>\n    <h2 {...{\n      \"id\": \"flows\"\n    }}>{`flows`}</h2>\n    <p>{`▸ flows: `}<inlineCode parentName=\"p\">{`Array<`}</inlineCode><a parentName=\"p\" {...{\n        \"href\": \"#typedef-flowinfo\"\n      }}>{`FlowInfo`}</a><inlineCode parentName=\"p\">{`>`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Since`}</strong>{`: XD 33`}</p>\n    <p>{`Returns a collection of information on `}<em parentName=\"p\">{`all`}</em>{` flows across the entire document.`}</p>\n    <p>{`A `}<inlineCode parentName=\"p\">{`flow`}</inlineCode>{` is a series or set of artboards starting from one artboard (called a home artboard), which are connected to other artboards or screens via wires or interactions. A document can have zero or multiple (one or more than one) flows and can therefore have zero or multiple home artboards. Each entry in the return array represents a `}<inlineCode parentName=\"p\">{`FlowInfo`}</inlineCode>{` object.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static property of `}<a parentName=\"p\" {...{\n        \"href\": \"#module_interactions\"\n      }}>{`interactions`}</a>{`\n`}<strong parentName=\"p\">{`Read only`}</strong>{`: true`}</p>\n    <h2 {...{\n      \"id\": \"allinteractions\"\n    }}>{`allInteractions`}</h2>\n    <p>{`▸ allInteractions: `}<inlineCode parentName=\"p\">{`Array<{triggerNode:`}</inlineCode>{` `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/SceneNode\"\n      }}>{`SceneNode`}</a><inlineCode parentName=\"p\">{`, interactions: Array<`}</inlineCode><a parentName=\"p\" {...{\n        \"href\": \"#typedef-interaction\"\n      }}>{`Interaction`}</a><inlineCode parentName=\"p\">{`}>`}</inlineCode></p>\n    <p>{`Returns a collection of `}<em parentName=\"p\">{`all`}</em>{` interactions across the entire document, grouped by triggering scenenode. Each entry in this array\nspecifies a `}<inlineCode parentName=\"p\">{`triggerNode`}</inlineCode>{` and the result of getting `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/SceneNode/#triggeredinteractions\"\n      }}>{`triggerNode.triggeredInteractions`}</a>{`.`}</p>\n    <p>{`May include interactions that are impossible to trigger because the trigger node (or one of its ancestors) has `}<inlineCode parentName=\"p\">{`visible`}</inlineCode>{` = false.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Tip`}</strong>{`\nCurrently, this API excludes some types of interactions: keypress/gamepad, scrolling, hover, component state transitions, or non-speech audio playback.`}</p>\n    </blockquote>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static property of `}<a parentName=\"p\" {...{\n        \"href\": \"#module_interactions\"\n      }}>{`interactions`}</a>{`\n`}<strong parentName=\"p\">{`Read only`}</strong>{`: true`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}