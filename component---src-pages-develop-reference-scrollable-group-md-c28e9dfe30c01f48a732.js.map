{"version":3,"file":"component---src-pages-develop-reference-scrollable-group-md-c28e9dfe30c01f48a732.js","mappings":"kQAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGC,GAAK,YAER,OAAO,SAACJ,GAAS,UAAKD,EAAiBK,EAAK,CAAED,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,mBAAiB,oBAEzB,mBAAG,mBAAQC,WAAW,KAAG,QAAkB,aAC7C,mBAAQA,WAAW,KAAG,WAAqB,MAAM,cAAGA,WAAW,IACzD,KAAQ,uCAAqC,aAC3B,MACxB,mBAAQA,WAAW,KAAG,UAAoB,WACxC,gIAAiH,cAAGA,WAAW,IAC3H,KAAQ,aAAW,YACF,oNAGrB,gEAAiD,eAAIA,WAAW,KAAG,mBAAyB,iMAE5F,eACE,GAAM,iBAAe,kBAEvB,wBAAS,mBAAQA,WAAW,KAAG,iBAA2B,MAAM,uBAAYA,WAAW,KAAG,YAC1F,+IAEA,mBAAG,mBAAQA,WAAW,KAAG,QAAkB,2BAA2B,cAAGA,WAAW,IAChF,KAAQ,oBAAkB,qBAE9B,eACE,GAAM,YAAU,aAElB,wBAAS,mBAAQA,WAAW,KAAG,YAAsB,MAAM,uBAAYA,WAAW,KAAG,4CAA0D,OAAO,uBAAYA,WAAW,KAAG,6CAA2D,OAAO,uBAAYA,WAAW,KAAG,uFAC5Q,qKAEA,oBACE,eAAIA,WAAW,MAAI,qDAAsD,cAAGA,WAAW,KACnF,KAAQ,+EAA6E,qBAC3D,gBACxB,uBAAYA,WAAW,MAAI,YAA0B,4BAC3D,eAAIA,WAAW,MAAI,+KAGrB,4FAA6E,uBAAYA,WAAW,KAAG,oBAAkC,gFAC1F,uBAAYA,WAAW,KAAG,8CAA4D,iGAClE,cAAGA,WAAW,IAC7E,KAAQ,oDAAkD,eACtC,4BAC1B,uBAAYA,WAAW,KAAG,YAA0B,8BAA8B,uBAAYA,WAAW,KAAG,WAAyB,SAAS,uBAAYA,WAAW,KAAG,kBAAgC,8BACtM,mBAAG,mBAAQA,WAAW,KAAG,QAAkB,2BAA2B,cAAGA,WAAW,IAChF,KAAQ,oBAAkB,oBAIlC,CAEAJ,EAAWK,gBAAiB,C","sources":["webpack://uxp-xd/./src/pages/develop/reference/ScrollableGroup.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"scrollablegroup\"\n    }}>{`ScrollableGroup`}</h1>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: class\n`}<strong parentName=\"p\">{`Extends`}</strong>{`: `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/SceneNode\"\n      }}>{`SceneNode`}</a>{`\n`}<strong parentName=\"p\">{`Since:`}</strong>{` XD 30`}</p>\n    <p>{`ScrollableGroup nodes are content that users can interactively scroll around. Content is viewed through a `}<a parentName=\"p\" {...{\n        \"href\": \"#viewport\"\n      }}>{`viewport`}</a>{`,\nwith everything else clipped. If a ScrollableGroup is set to only scroll on one axis, on the other axis the viewport is\nautomatically sized to exactly fit the bounds of the content so nothing is clipped.`}</p>\n    <p>{`The scroll distance range is defined by a `}<em parentName=\"p\">{`scrollable area`}</em>{` rectangle which is the union of the viewport and the bounds of all\nthe content. This can include some blank space, if the content is initially positioned not filling the entire viewport.`}</p>\n    <h2 {...{\n      \"id\": \"scrollingtype\"\n    }}>{`scrollingType`}</h2>\n    <p>{`▸ `}<strong parentName=\"p\">{`scrollingType`}</strong>{`: `}<inlineCode parentName=\"p\">{`string`}</inlineCode></p>\n    <p>{`The type of scrolling: one of ScrollableGroup.VERTICAL, HORIZONTAL and PANNING.\nPANNING enables scrolling on both axes.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance property of `}<a parentName=\"p\" {...{\n        \"href\": \"#scrollablegroup\"\n      }}>{`ScrollableGroup`}</a></p>\n    <h2 {...{\n      \"id\": \"viewport\"\n    }}>{`viewport`}</h2>\n    <p>{`▸ `}<strong parentName=\"p\">{`viewport`}</strong>{`: `}<inlineCode parentName=\"p\">{`{viewportWidth: number, offsetX: number}`}</inlineCode>{` | `}<inlineCode parentName=\"p\">{`{viewportHeight: number, offsetY: number}`}</inlineCode>{` | `}<inlineCode parentName=\"p\">{`{viewportWidth: number, offsetX: number, viewportHeight: number, offsetY: number}`}</inlineCode></p>\n    <p>{`The viewport is a rectangle whose bounds are defined explicitly on scrolling axes and fit automatically to the\ncontent on non-scrolling axes:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`On a scrolling axis, the bounds are specified in `}<a parentName=\"li\" {...{\n          \"href\": \"/uxp-xd/develop/plugin-development/xd-concepts/coordinate-spaces-and-units/\"\n        }}>{`local coordinates`}</a>{`\nusing the `}<inlineCode parentName=\"li\">{`viewport`}</inlineCode>{` values specified here.`}</li>\n      <li parentName=\"ul\">{`On a non-scrolling axis, the bounds are automatically calculated to exactly fit the content (just like the blue\nselection rectangle seen when you select a plain Group).`}</li>\n    </ul>\n    <p>{`For example, if scrollingType == VERTICAL, the top of the viewport is `}<inlineCode parentName=\"p\">{`viewport.offsetY`}</inlineCode>{` in the ScrollableGroup's\nlocal coordinates, the bottom of the viewport is `}<inlineCode parentName=\"p\">{`viewport.offsetY + viewport.viewportHeight`}</inlineCode>{` in local coordinates,\nand horizontally there is no viewport clipping -- the entire current `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/SceneNode/#localbounds\"\n      }}>{`localBounds`}</a>{` range is visible. The\n`}<inlineCode parentName=\"p\">{`viewport`}</inlineCode>{` object will only contain `}<inlineCode parentName=\"p\">{`offsetY`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`viewportHeight`}</inlineCode>{` properties in this case.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance property of `}<a parentName=\"p\" {...{\n        \"href\": \"#scrollablegroup\"\n      }}>{`ScrollableGroup`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}