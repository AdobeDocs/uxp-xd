{"version":3,"file":"component---src-pages-develop-reference-boolean-group-md-7da09868896da399c26e.js","mappings":"iQAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGC,GAAK,YAER,OAAO,SAACJ,GAAS,UAAKD,EAAiBK,EAAK,CAAED,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,gBAAc,iBAEtB,mBAAG,mBAAQC,WAAW,KAAG,QAAkB,aAC7C,mBAAQA,WAAW,KAAG,WAAqB,MAAM,cAAGA,WAAW,IACzD,KAAQ,yCAAuC,iBAEnD,wRAGA,kEAAmD,eAAIA,WAAW,KAAG,UAAgB,+CAA+C,cAAGA,WAAW,IAC9I,KAAQ,iDAA+C,wBAC1B,uCAEjC,eACE,GAAM,UAAQ,WAEhB,wBAAS,mBAAQA,WAAW,KAAG,UAAoB,MAAM,uBAAYA,WAAW,KAAG,YACnF,uKACA,mBAAG,mBAAQA,WAAW,KAAG,QAAkB,2BAA2B,cAAGA,WAAW,IAChF,KAAQ,iBAAe,gBACF,MAC3B,mBAAQA,WAAW,KAAG,aAAuB,UAG/C,CAEAJ,EAAWK,gBAAiB,C","sources":["webpack://uxp-xd/./src/pages/develop/reference/BooleanGroup.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"booleangroup\"\n    }}>{`BooleanGroup`}</h1>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: class\n`}<strong parentName=\"p\">{`Extends`}</strong>{`: `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/GraphicNode\"\n      }}>{`GraphicNode`}</a></p>\n    <p>{`BooleanGroup container node - although it has fill/stroke/etc. properties like a leaf shape node, it is a container\nwith children. Its visual appearance is determined by generating a path via a nondestructive boolean operation on all\nits children's paths.`}</p>\n    <p>{`It is not currently possible for plugins to `}<em parentName=\"p\">{`create`}</em>{` a new BooleanGroup node, aside from using `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/commands/#duplicate\"\n      }}>{`commands.duplicate()`}</a>{`\nto clone existing BooleanGroups.`}</p>\n    <h2 {...{\n      \"id\": \"pathop\"\n    }}>{`pathOp`}</h2>\n    <p>{`â–¸ `}<strong parentName=\"p\">{`pathOp`}</strong>{`: `}<inlineCode parentName=\"p\">{`string`}</inlineCode></p>\n    <p>{`Which boolean operation is used to generate the path: BooleanGroup.PATH_OP_ADD, PATH_OP_SUBTRACT, PATH_OP_INTERSECT, or PATH_OP_EXCLUDE_OVERLAP.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance property of `}<a parentName=\"p\" {...{\n        \"href\": \"#booleangroup\"\n      }}>{`BooleanGroup`}</a>{`\n`}<strong parentName=\"p\">{`Read only`}</strong>{`: true`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}