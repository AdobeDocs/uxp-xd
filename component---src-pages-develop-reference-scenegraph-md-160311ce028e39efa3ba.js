"use strict";(self.webpackChunkuxp_xd=self.webpackChunkuxp_xd||[]).push([[9475],{1318:function(e,n,a){a.r(n),a.d(n,{_frontmatter:function(){return l},default:function(){return s}});var t=a(87462),d=a(45987),r=(a(15007),a(64983)),p=a(91515);const o=["components"],l={},m={_frontmatter:l},i=p.Z;function s(e){let{components:n}=e,a=(0,d.Z)(e,o);return(0,r.mdx)(i,(0,t.Z)({},m,a,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"scenegraph"},"scenegraph"),(0,r.mdx)("p",null,"The scenegraph is a node tree which represents the structure of the XD document. It closely matches the hierarchy seen in the Layers panel\ninside XD. Some scenenodes may contain children (e.g., a Group or Artboard), while others are leaf nodes (e.g., a Rectangle or Text node).\nThe root of the scenegraph contains all Artboards that exist in the document, as well as all ",(0,r.mdx)("em",{parentName:"p"},"pasteboard")," content (nodes that are not\ncontained by any artboard)."),(0,r.mdx)("p",null,(0,r.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"896px"}},"\n      ",(0,r.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"36.5625%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,r.mdx)("picture",{parentName:"span"},"\n          ",(0,r.mdx)("source",{parentName:"picture",srcSet:["/uxp-xd/static/4c632cd690f96df72a0b904732027279/5530d/scenegraphExample.webp 320w","/uxp-xd/static/4c632cd690f96df72a0b904732027279/0c8fb/scenegraphExample.webp 640w","/uxp-xd/static/4c632cd690f96df72a0b904732027279/e133a/scenegraphExample.webp 896w"],sizes:"(max-width: 896px) 100vw, 896px",type:"image/webp"}),"\n          ",(0,r.mdx)("source",{parentName:"picture",srcSet:["/uxp-xd/static/4c632cd690f96df72a0b904732027279/dd4a7/scenegraphExample.png 320w","/uxp-xd/static/4c632cd690f96df72a0b904732027279/0f09e/scenegraphExample.png 640w","/uxp-xd/static/4c632cd690f96df72a0b904732027279/3bd09/scenegraphExample.png 896w"],sizes:"(max-width: 896px) 100vw, 896px",type:"image/png"}),"\n          ",(0,r.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/uxp-xd/static/4c632cd690f96df72a0b904732027279/3bd09/scenegraphExample.png",alt:"example of scenegraph tree",title:"example of scenegraph tree",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,r.mdx)("p",null,"You can modify properties on any scenenodes within the current ",(0,r.mdx)("a",{parentName:"p",href:"/uxp-xd/develop/plugin-development/xd-concepts/edit-context/"},(0,r.mdx)("em",{parentName:"a"},"edit context")),",\nand add leaf nodes to the current edit context, but you cannot make structural changes directly to the scenegraph tree. Instead, use\n",(0,r.mdx)("a",{parentName:"p",href:"/uxp-xd/develop/reference/commands/"},"commands"),"."),(0,r.mdx)("p",null,"Typically, you access scenegraph nodes via the ",(0,r.mdx)("a",{parentName:"p",href:"/uxp-xd/develop/reference/selection/"},"selection")," argument that is passed to your plugin command, or by\ntraversing the entire document tree using the ",(0,r.mdx)("a",{parentName:"p",href:"/uxp-xd/develop/reference/RootNode"},"documentRoot")," argument that is passed to your plugin command. These\nobjects are also accessible on the scenegraph module for convenience."),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Example")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-js"},'function myCommand(selection) {\n  let node = selection.items[0];\n\n  console.log("The selected node is a: " + node.constructor.name);\n\n  // Print out types of all child nodes (if any)\n  node.children.forEach(function (childNode, i) {\n    console.log("Child " + i + " is a " + childNode.constructor.name);\n  });\n}\n')),(0,r.mdx)("p",null,"To create new scenenodes, load this ",(0,r.mdx)("inlineCode",{parentName:"p"},"scenegraph")," module directly and use the node constructor functions:"),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Example")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-js"},'let scenegraph = require("scenegraph");\nfunction myCommand(selection) {\n  let newShape = new scenegraph.Rectangle();\n  newShape.width = 100;\n  newShape.height = 50;\n  newShape.fill = new Color("red");\n  selection.insertionParent.addChild(newShape);\n}\n')),(0,r.mdx)("h2",{id:"class-hierarchy"},"Class hierarchy"),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},(0,r.mdx)("strong",{parentName:"p"},"Tip"),"\nAdditional subclasses may be added in the future. Always be sure to have a default case for unknown scenenode classes\nwhen traversing the scenegraph.")),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/uxp-xd/develop/reference/SceneNode"},"SceneNode"),(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/uxp-xd/develop/reference/GraphicNode"},"GraphicNode"),(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/uxp-xd/develop/reference/Artboard"},"Artboard")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/uxp-xd/develop/reference/Rectangle"},"Rectangle")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/uxp-xd/develop/reference/Ellipse"},"Ellipse")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/uxp-xd/develop/reference/Polygon"},"Polygon")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/uxp-xd/develop/reference/Line"},"Line")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/uxp-xd/develop/reference/Path"},"Path")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/uxp-xd/develop/reference/BooleanGroup"},"BooleanGroup")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/uxp-xd/develop/reference/Text"},"Text")))),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/uxp-xd/develop/reference/Lottie"},"Lottie")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/uxp-xd/develop/reference/Video"},"Video")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/uxp-xd/develop/reference/Group"},"Group")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/uxp-xd/develop/reference/SymbolInstance"},"SymbolInstance")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/uxp-xd/develop/reference/RepeatGrid"},"RepeatGrid")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/uxp-xd/develop/reference/ScrollableGroup"},"ScrollableGroup")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/uxp-xd/develop/reference/LinkedGraphic"},"LinkedGraphic")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/uxp-xd/develop/reference/RootNode"},"RootNode"))))),(0,r.mdx)("h2",{id:"typedefs"},"Typedefs"),(0,r.mdx)("h3",{id:"typedef-point"},"Typedef Point"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Point: ",(0,r.mdx)("inlineCode",{parentName:"li"},"{x:number, y:number}"))),(0,r.mdx)("h3",{id:"typedef-bounds"},"Typedef Bounds"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Bounds: ",(0,r.mdx)("inlineCode",{parentName:"li"},"{x:number, y:number, width:number, height:number}"))),(0,r.mdx)("h2",{id:"selection"},"selection"),(0,r.mdx)("p",null,"▸ ",(0,r.mdx)("strong",{parentName:"p"},"selection"),": ",(0,r.mdx)("a",{parentName:"p",href:"/uxp-xd/develop/reference/selection"},"selection")),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Since"),": XD 14"),(0,r.mdx)("p",null,"Object representing the current selection state and ",(0,r.mdx)("a",{parentName:"p",href:"/uxp-xd/develop/plugin-development/xd-concepts/edit-context/"},"edit context"),". Also available as the first argument passed to your plugin command handler function."),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Kind"),": static property of ",(0,r.mdx)("a",{parentName:"p",href:"#scenegraph"},"scenegraph"),"\n",(0,r.mdx)("strong",{parentName:"p"},"Read only"),": true"),(0,r.mdx)("h2",{id:"root"},"root"),(0,r.mdx)("p",null,"▸ ",(0,r.mdx)("strong",{parentName:"p"},"root"),": ",(0,r.mdx)("a",{parentName:"p",href:"/uxp-xd/develop/reference/RootNode"},"RootNode")),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Since"),": XD 14"),(0,r.mdx)("p",null,"Root node of the current document's scenegraph. Also available as the second argument passed to your plugin command handler function."),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Kind"),": static property of ",(0,r.mdx)("a",{parentName:"p",href:"#scenegraph"},"scenegraph"),"\n",(0,r.mdx)("strong",{parentName:"p"},"Read only"),": true"),(0,r.mdx)("h2",{id:"getnodebyguid"},"getNodeByGUID()"),(0,r.mdx)("p",null,"▸ ",(0,r.mdx)("strong",{parentName:"p"},"getNodeByGUID"),"(",(0,r.mdx)("inlineCode",{parentName:"p"},"guid"),"): ",(0,r.mdx)("a",{parentName:"p",href:"/uxp-xd/develop/reference/SceneNode"},"SceneNode")),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Since"),": XD 28"),(0,r.mdx)("p",null,"Returns the scenenode in this document that has the given ",(0,r.mdx)("a",{parentName:"p",href:"/uxp-xd/develop/reference/SceneNode/#guid"},"node GUID"),". Returns undefined if no such node exists connected\nto the scenegraph tree (detached/orphan nodes will not be found). This provides a fast way of persistently remembering a node across plugin\noperations and even across document open/closes."),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Param"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"guid"),(0,r.mdx)("td",{parentName:"tr",align:null},"string"),(0,r.mdx)("td",{parentName:"tr",align:null},"SceneNode GUID -- must be all lowercase, as returned by the ",(0,r.mdx)("a",{parentName:"td",href:"/uxp-xd/develop/reference/SceneNode/#guid"},"guid getter"))))),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Example")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-js"},'let node = scenegraph.selection.items[0];\nlet guid = node.guid;\n\n// ...later on:\nlet sameNode = scenegraph.getNodeByGUID(guid);\nif (sameNode) {\n  // ^ Always check if node still exists - user may have deleted it\n  console.log("Found node again!", sameNode);\n}\n')),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Kind"),": static method of ",(0,r.mdx)("a",{parentName:"p",href:"#scenegraph"},"scenegraph")))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-develop-reference-scenegraph-md-160311ce028e39efa3ba.js.map