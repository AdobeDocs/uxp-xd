"use strict";(self.webpackChunkuxp_xd=self.webpackChunkuxp_xd||[]).push([[1308],{16366:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return o},default:function(){return u}});var a=n(87462),l=n(45987),m=(n(15007),n(64983)),r=n(91515);const p=["components"],o={},d={_frontmatter:o},i=r.Z;function u(e){let{components:t}=e,n=(0,l.Z)(e,p);return(0,m.mdx)(i,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,m.mdx)("h1",{id:"network"},"Network"),(0,m.mdx)("h1",{id:"network-io"},"Network I/O"),(0,m.mdx)("p",null,"The Network I/O subsystem mimics the standards found on the web. The following API surfaces are available:"),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},"Web Sockets",(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"/uxp-xd/develop/reference/uxp/class/WebSocket/"},"XD Documentation")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API"},"MDN documentation")))),(0,m.mdx)("li",{parentName:"ul"},"XMLHttpRequest",(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"/uxp-xd/develop/reference/uxp/class/XMLHttpRequest/"},"XD Documentation")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest"},"MDN documentation")))),(0,m.mdx)("li",{parentName:"ul"},"Fetch",(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"/uxp-xd/develop/reference/uxp/function/fetch/"},"XD Documentation")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"},"MDN documentation"))))),(0,m.mdx)("h2",{id:"web-socket-support"},"Web Socket Support"),(0,m.mdx)("p",null,"The entire web socket API is supported, ",(0,m.mdx)("em",{parentName:"p"},"except")," for extensions handling."),(0,m.mdx)("h2",{id:"xmlhttprequest-support"},"XMLHttpRequest Support"),(0,m.mdx)("p",null,"Most of the XHR API surface is supported, including:"),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},"Setting request headers"),(0,m.mdx)("li",{parentName:"ul"},"Getting response headers"),(0,m.mdx)("li",{parentName:"ul"},"Event handling"),(0,m.mdx)("li",{parentName:"ul"},"Sending text and binary data",(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},"Text is expected to be UTF8 encoded."),(0,m.mdx)("li",{parentName:"ul"},"Binary data must use ",(0,m.mdx)("inlineCode",{parentName:"li"},"ArrayBuffer"),", not ",(0,m.mdx)("inlineCode",{parentName:"li"},"Blob"))))),(0,m.mdx)("p",null,"Unsupported portions of the surface:"),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"responseURL")),(0,m.mdx)("li",{parentName:"ul"},"Sending / receiving Blobs is not supported"),(0,m.mdx)("li",{parentName:"ul"},"Synchronous XHR will throw an error")),(0,m.mdx)("h2",{id:"fetch-support"},"Fetch Support"),(0,m.mdx)("p",null,"Fetch is polyfilled on top of the XHR implementation using ",(0,m.mdx)("a",{parentName:"p",href:"https://github.com/github/fetch"},"https://github.com/github/fetch"),"."))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-develop-reference-uxp-network-index-md-13d4a5a9d40af80b975d.js.map