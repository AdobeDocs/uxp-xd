"use strict";(self.webpackChunkuxp_xd=self.webpackChunkuxp_xd||[]).push([[8030],{55577:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return p},default:function(){return s}});var r=n(87462),a=n(63366),o=(n(15007),n(64983)),d=n(91515),i=["components"],p={},m={_frontmatter:p},l=d.Z;function s(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.mdx)(l,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"artboard"},"Artboard"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Kind"),": class\n",(0,o.mdx)("strong",{parentName:"p"},"Extends"),": ",(0,o.mdx)("a",{parentName:"p",href:"/uxp-xd/develop/reference/GraphicNode"},"GraphicNode")),(0,o.mdx)("p",null,"Artboard container node. All Artboards must be children of the root node (they cannot be nested), and they must be placed ",(0,o.mdx)("em",{parentName:"p"},"below")," all\npasteboard content in the z order."),(0,o.mdx)("p",null,"Artboards can have a background fill, but the stroke, shadow, and blur settings are all ignored. Artboards cannot be locked or hidden,\nor have opacity < 100%."),(0,o.mdx)("p",null,"Generally, all nodes that overlap an Artboard are children of that artboard, and nodes that don't overlap any Artboard are children\nof the root (pasteboard). XD ensures this automatically: if a node is modified in any way that changes whether it overlaps an\nArtboard, its parent will automatically be changed accordingly after the edit operation finishes."),(0,o.mdx)("h2",{id:"width"},"width"),(0,o.mdx)("p",null,"▸ ",(0,o.mdx)("strong",{parentName:"p"},"width"),": ",(0,o.mdx)("inlineCode",{parentName:"p"},"number")," > 0"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,o.mdx)("a",{parentName:"p",href:"#Artboard"},"Artboard")),(0,o.mdx)("h2",{id:"height"},"height"),(0,o.mdx)("p",null,"▸ ",(0,o.mdx)("strong",{parentName:"p"},"height"),": ",(0,o.mdx)("inlineCode",{parentName:"p"},"number")," > 0"),(0,o.mdx)("p",null,"For scrollable Artboards, this is the total height encompassing all content - not just the viewport size (i.e. screen height)."),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"See"),": ",(0,o.mdx)("a",{parentName:"p",href:"#viewportheight"},"viewportHeight")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,o.mdx)("a",{parentName:"p",href:"#Artboard"},"Artboard")),(0,o.mdx)("h2",{id:"viewportheight"},"viewportHeight"),(0,o.mdx)("p",null,"▸ ",(0,o.mdx)("strong",{parentName:"p"},"viewportHeight"),": ",(0,o.mdx)("inlineCode",{parentName:"p"},"?number")),(0,o.mdx)("p",null,"If Artboard is scrollable, this is the height of the viewport (e.g. mobile device screen size). Null if Artboard isn't scrollable."),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"See"),": ",(0,o.mdx)("a",{parentName:"p",href:"#height"},"height")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,o.mdx)("a",{parentName:"p",href:"#Artboard"},"Artboard")),(0,o.mdx)("h2",{id:"incominginteractions"},"incomingInteractions"),(0,o.mdx)("p",null,"▸ ",(0,o.mdx)("strong",{parentName:"p"},"incomingInteractions"),": ",(0,o.mdx)("inlineCode",{parentName:"p"},"Array<{ triggerNode: "),(0,o.mdx)("a",{parentName:"p",href:"/uxp-xd/develop/reference/SceneNode"},"SceneNode"),(0,o.mdx)("inlineCode",{parentName:"p"},", interactions: Array<"),(0,o.mdx)("a",{parentName:"p",href:"/uxp-xd/develop/reference/interactions/#typedef-interaction"},"Interaction"),(0,o.mdx)("inlineCode",{parentName:"p"},"> }>")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Since"),": XD 19"),(0,o.mdx)("p",null,"Get all interactions whose destination is this artboard (either navigating the entire view, i.e. a ",(0,o.mdx)("inlineCode",{parentName:"p"},'"goToArtboard"')," action, or\nshowing this artboard as an overlay, i.e. an ",(0,o.mdx)("inlineCode",{parentName:"p"},'"overlay"')," action). Each element in the array is an ",(0,o.mdx)("a",{parentName:"p",href:"/uxp-xd/develop/reference/interactions/#typedef-interaction"},"Interaction object"),"\nwhich describes a gesture/event plus the action it produces."),(0,o.mdx)("p",null,"May include interactions that are impossible to trigger because the trigger node (or one of its ancestors) has ",(0,o.mdx)("inlineCode",{parentName:"p"},"visible")," = false."),(0,o.mdx)("p",null,"Note: currently, this API excludes any applicable keyboard/gamepad interactions."),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"See"),": ",(0,o.mdx)("a",{parentName:"p",href:"/uxp-xd/develop/reference/SceneNode/#triggeredinteractions"},"SceneNode.triggeredInteractions")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"See"),": ",(0,o.mdx)("a",{parentName:"p",href:"/uxp-xd/develop/reference/interactions/#allinteractions"},"interactions.allInteractions")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,o.mdx)("a",{parentName:"p",href:"#Artboard"},"Artboard"),"\n",(0,o.mdx)("strong",{parentName:"p"},"Read only"),": true"),(0,o.mdx)("h2",{id:"ishomeartboard"},"isHomeArtboard"),(0,o.mdx)("p",null,"▸ ",(0,o.mdx)("strong",{parentName:"p"},"isHomeArtboard"),": ",(0,o.mdx)("inlineCode",{parentName:"p"},"boolean")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Deprecated"),": XD 33 - Please use ",(0,o.mdx)("a",{parentName:"p",href:"/uxp-xd/develop/reference/interactions/#flows"},"flows")," which supports multple flows."),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Since"),": XD 19"),(0,o.mdx)("p",null,"True if this is the starting Artboard seen when the interactive prototype is launched."),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Since"),": XD 32"),(0,o.mdx)("p",null,"In case there are multiple interactive prototype experiences (flows), implying multiple home artboards, this API returns true only for the top-left artboard among all of those home artboards."),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"See"),": ",(0,o.mdx)("a",{parentName:"p",href:"/uxp-xd/develop/reference/interactions/#homeartboard"},"interactions.homeArtboard")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,o.mdx)("a",{parentName:"p",href:"#Artboard"},"Artboard"),"\n",(0,o.mdx)("strong",{parentName:"p"},"Read only"),": true"))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-develop-reference-artboard-md-8fa41f177d40aed04953.js.map