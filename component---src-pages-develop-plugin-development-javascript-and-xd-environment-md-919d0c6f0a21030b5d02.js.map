{"version":3,"file":"component---src-pages-develop-plugin-development-javascript-and-xd-environment-md-919d0c6f0a21030b5d02.js","mappings":"uQAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,MACE,GAAM,uBAAqB,wBAE7BA,EAAAA,EAAAA,KAAA,6KACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,gCAA8B,kCAEtCA,EAAAA,EAAAA,KAAA,mPACAA,EAAAA,EAAAA,KAAA,gIAA0HA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACpI,KAAQ,wDACPH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,mBAAoC,kCACnEH,EAAAA,EAAAA,KAAA,oEAA8DA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KAAG,UAAgB,mFAAmFH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IAC7L,KAAQ,gDAA8C,eAClC,MACxBH,EAAAA,EAAAA,KAAA,MACE,GAAM,yBAAuB,0BAE/BA,EAAAA,EAAAA,KAAA,+IAAyIA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,kBAAgC,MAAMH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,SAAuB,MAAMH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,aAA2B,MAAMH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,YAA0B,gBAC/WH,EAAAA,EAAAA,KAAA,sBACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,eAAa,uCAG9BH,EAAAA,EAAAA,KAAA,4DAAsDA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IAChE,KAAQ,8FAA4F,QAC3FH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,WAAyB,WAAe,uBAAuBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,cAA4B,MAAMH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,eAA6B,MAAMH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,OAAqB,gBAC9QH,EAAAA,EAAAA,KAAA,sBACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,eAAa,qDAKlC,CAEAT,EAAWU,gBAAiB,C","sources":["webpack://uxp-xd/./src/pages/develop/plugin-development/javascript-and-xd/environment.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"the-api-environment\"\n    }}>{`The API environment`}</h1>\n    <p>{`If you're used to writing JavaScript for web pages or Node.js servers, there are some things to know about the JavaScript environment when creating XD plugins.`}</p>\n    <h2 {...{\n      \"id\": \"not-a-browser-and-not-nodejs\"\n    }}>{`Not a browser and not Node.js`}</h2>\n    <p>{`While it may feel like it, the XD plugin API environment is not a browser, nor is it Node.js. This means that you shouldn't make assumptions about what APIs are available based on your experience in other JavaScript environments.`}</p>\n    <p>{`However, we do follow standards for API surfaces where appropriate. For example, you'll find our implementation of `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/uxp/class/XMLHttpRequest/\"\n      }}><inlineCode parentName=\"a\">{`XMLHttpRequest`}</inlineCode></a>{` to work as you would expect.`}</p>\n    <p>{`In some cases, we follow standards, but only support a `}<em parentName=\"p\">{`subset`}</em>{` of features you might expect in a browser. As an example, see our document on `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/uxp/namespace/css/\"\n      }}>{`CSS support`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"accessing-global-apis\"\n    }}>{`Accessing global APIs`}</h2>\n    <p>{`Supported APIs that you would expect as window globals in other enviroments are also available as globals in XD. Examples include `}<inlineCode parentName=\"p\">{`XMLHttpRequest`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`fetch`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`WebSocket`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`document`}</inlineCode>{`, and more.`}</p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`let req = new XMLHttpRequest();\n`}</code></pre>\n    <p>{`APIs that are specific to XD are reachable via `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/plugin-development/javascript-and-xd/javascript-support/#can-i-use-require\"\n      }}>{`the `}<inlineCode parentName=\"a\">{`require`}</inlineCode>{` method`}</a>{`. Examples include `}<inlineCode parentName=\"p\">{`scenegraph`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`application`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`uxp`}</inlineCode>{`, and more.`}</p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const { Text, Color } = require(\"scenegraph\");\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}