{"version":3,"file":"component---src-pages-develop-tutorials-how-to-create-paths-index-md-c393d315aa1a8dbe75ba.js","mappings":"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","sources":["webpack://uxp-xd/./src/pages/develop/tutorials/how-to-create-paths/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"how-to-create-paths\"\n    }}>{`How to create paths`}</h1>\n    <p>{`This sample demonstrates how to create path objects in XD. The path objects are used to construct a pie chart.`}</p>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Basic knowledge of HTML, CSS, and JavaScript`}</li>\n      <li parentName=\"ul\">{`Basic knowledge of `}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths\"\n        }}>{`Paths`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/uxp-xd/develop/tutorials/quick-start/\"\n        }}>{`Quick Start Tutorial`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/uxp-xd/develop/tutorials/debugging/\"\n        }}>{`Debugging Tutorial`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"development-steps\"\n    }}>{`Development Steps`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Info`}</strong>{`\nComplete code for this plugin can be found `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/AdobeXD/Plugin-Samples/tree/master/how-to-create-path-objects\"\n        }}>{`on GitHub`}</a>{`.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"1-create-plugin-scaffold\"\n    }}>{`1. Create plugin scaffold`}</h3>\n    <p>{`First, edit the manifest file for the plugin you created in our `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/tutorials/quick-start/\"\n      }}>{`Quick Start Tutorial`}</a>{`.`}</p>\n    <p>{`Replace the `}<inlineCode parentName=\"p\">{`uiEntryPoints`}</inlineCode>{` field of the manifest with the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"uiEntryPoints\": [\n    {\n        \"type\": \"menu\",\n        \"label\": \"Create Pie Chart\",\n        \"commandId\": \"createPieChartCommand\"\n    }\n]\n`}</code></pre>\n    <p>{`If you're curious about what each entry means, `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/plugin-development/plugin-structure/manifest/\"\n      }}>{`see the manifest documentation`}</a>{`, where you can also learn about all manifest requirements for a plugin to be published in the XD Plugin Manager.`}</p>\n    <p>{`Then, update your `}<inlineCode parentName=\"p\">{`main.js`}</inlineCode>{` file, mapping the manifest's `}<inlineCode parentName=\"p\">{`commandId`}</inlineCode>{` to a handler function.`}</p>\n    <p>{`Replace the content of your `}<inlineCode parentName=\"p\">{`main.js`}</inlineCode>{` file with the following code:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`function createPieChartCommand(selection) {\n  // The body of this function is added later\n}\n\nmodule.exports = {\n  commands: {\n    createPieChartCommand,\n  },\n};\n`}</code></pre>\n    <p>{`The remaining steps in this tutorial describe additional edits to the `}<inlineCode parentName=\"p\">{`main.js`}</inlineCode>{` file.`}</p>\n    <h3 {...{\n      \"id\": \"2-require-in-xd-api-dependencies\"\n    }}>{`2. Require in XD API dependencies`}</h3>\n    <p>{`For this tutorial, we just need access to two XD scenegraph classes.`}</p>\n    <p>{`Add the following lines to the top of your `}<inlineCode parentName=\"p\">{`main.js`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// Add this to the top of your main.js file\nconst { Path, Color } = require(\"scenegraph\");\n`}</code></pre>\n    <p>{`Now the `}<inlineCode parentName=\"p\">{`Path`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Color`}</inlineCode>{` classes are required in and ready to be used.`}</p>\n    <h3 {...{\n      \"id\": \"3-create-helper-functions\"\n    }}>{`3. Create helper functions`}</h3>\n    <h5 {...{\n      \"id\": \"calculate-a-point-on-a-circle\"\n    }}>{`Calculate a point on a circle`}</h5>\n    <p>{`Since our plugin will create a pie chart, this helper function will be used to return an x,y coordinates of each wedge in the pie chart. The function accepts `}<inlineCode parentName=\"p\">{`radius`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`angle`}</inlineCode>{` as parameters and use them to calculate the coordinates of a point on a circle at a given angle on the perimeter of the circle.`}</p>\n    <p>{`Add the lines of code below to your file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`function pointOnCircle(radius, angle) {\n  const radians = (angle * 2 * Math.PI) / 360;\n  const xcoord = radius * Math.cos(radians);\n  const ycoord = radius * Math.sin(radians);\n  return xcoord + \",\" + ycoord;\n}\n`}</code></pre>\n    <p>{`This is just straight-up JavaScript; there's nothing specific to XD plugin APIs to cover here.`}</p>\n    <p>{`We won't cover the math in depth, here's an overview what this helper function does:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The angle is expressed in degrees. It must be converted to radians before passing it to the sine and cosine functions. More info: `}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/cos\"\n        }}>{`Math.cos`}</a>{`, `}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sin\"\n        }}>{`Math.sin`}</a></li>\n      <li parentName=\"ul\">{`The function will return the coordinates as a string in the `}<inlineCode parentName=\"li\">{`x,y`}</inlineCode>{` format, which will be used to be inserted to the path data, which also has to be a string`}</li>\n    </ul>\n    <h5 {...{\n      \"id\": \"add-a-single-pie-wedge-to-the-scenegraph\"\n    }}>{`Add a single pie wedge to the scenegraph`}</h5>\n    <p>{`Our plugin will also need to be able to add a single pie wedge to the scenegraph.`}</p>\n    <p>{`Add the lines of code below to your file. Each of the numbered comments are explained below the code:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`function createWedge(selection, radius, startAngle, endAngle, color) {\n  // [1]\n  const startPt = pointOnCircle(radius, startAngle);\n  const endPt = pointOnCircle(radius, endAngle);\n  const pathData = \\`M0,0 L\\${startPt} A\\${radius},\\${radius},0,0,1,\\${endPt} L0,0\\`; // [2]\n  const wedge = new Path(); // [3]\n  wedge.pathData = pathData; // [4]\n  wedge.fill = new Color(color); // [5]\n  wedge.translation = { x: radius, y: radius }; // [6]\n  selection.insertionParent.addChild(wedge); // [7]\n}\n`}</code></pre>\n    <ol>\n      <li parentName=\"ol\">{`This function accepts five arguments:`}\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`The current selection in the scene graph (`}<inlineCode parentName=\"li\">{`selection`}</inlineCode>{`)`}</li>\n          <li parentName=\"ol\">{`The pie chart radius (`}<inlineCode parentName=\"li\">{`chartRadius`}</inlineCode>{`)`}</li>\n          <li parentName=\"ol\">{`The start radian of the wedge (`}<inlineCode parentName=\"li\">{`startAngle`}</inlineCode>{`)`}</li>\n          <li parentName=\"ol\">{`The end radian of the wedge (`}<inlineCode parentName=\"li\">{`endAngle`}</inlineCode>{`)`}</li>\n          <li parentName=\"ol\">{`The color of the wedge (`}<inlineCode parentName=\"li\">{`color`}</inlineCode>{`)`}</li>\n        </ol>\n      </li>\n      <li parentName=\"ol\">{`Based on these arguments, `}<inlineCode parentName=\"li\">{`pathData`}</inlineCode>{` is constructed. The pen is moved to the origin, a line is drawn to the first point on the edge of the circle, an arc is drawn to the second point on the edge of the circle, and then a line is drawn back to the origin. For more information on how to create path data, please refer to `}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths\"\n        }}>{`Paths`}</a></li>\n      <li parentName=\"ol\">{`Create a new instance of `}<inlineCode parentName=\"li\">{`Path`}</inlineCode></li>\n      <li parentName=\"ol\">{`Set `}<inlineCode parentName=\"li\">{`pathData`}</inlineCode></li>\n      <li parentName=\"ol\">{`Set the color of the path object`}</li>\n      <li parentName=\"ol\">{`Move the path object down and to the right by `}<inlineCode parentName=\"li\">{`radius`}</inlineCode>{` units. As a result, the pie chart will appear with its top left corner positioned at `}<inlineCode parentName=\"li\">{`0,0`}</inlineCode></li>\n      <li parentName=\"ol\">{`Insert the path object into the currently-selected artboard`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"4-create-the-main-function\"\n    }}>{`4. Create the main function`}</h3>\n    <p>{`In this step, we'll build out the main function, `}<inlineCode parentName=\"p\">{`createLinesHandlerFunction`}</inlineCode>{`, that we added in the first step.`}</p>\n    <p>{`This function creates four wedges:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`function createPieChartCommand(selection) {\n  createWedge(selection, 100, 0, 90, \"red\");\n  createWedge(selection, 100, 90, 135, \"blue\");\n  createWedge(selection, 100, 135, 225, \"yellow\");\n  createWedge(selection, 100, 225, 360, \"purple\");\n}\n`}</code></pre>\n    <p>{`Note that the end angle of each wedge matches the start angle of the next wedge. As a result, the wedges fit together to create a complete pie chart!`}</p>\n    <h3 {...{\n      \"id\": \"5-run-the-plugin\"\n    }}>{`5. Run the plugin`}</h3>\n    <p>{`Ater saving all your changes, reload the plugin in XD and run it. The result should be similar to the following:`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"800px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"176.875%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/uxp-xd/static/a993cc8ea2a8d97027802b5692d80304/5530d/pie-chart.webp 320w\", \"/uxp-xd/static/a993cc8ea2a8d97027802b5692d80304/0c8fb/pie-chart.webp 640w\", \"/uxp-xd/static/a993cc8ea2a8d97027802b5692d80304/cf465/pie-chart.webp 800w\"],\n            \"sizes\": \"(max-width: 800px) 100vw, 800px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/uxp-xd/static/a993cc8ea2a8d97027802b5692d80304/dd4a7/pie-chart.png 320w\", \"/uxp-xd/static/a993cc8ea2a8d97027802b5692d80304/0f09e/pie-chart.png 640w\", \"/uxp-xd/static/a993cc8ea2a8d97027802b5692d80304/78d47/pie-chart.png 800w\"],\n            \"sizes\": \"(max-width: 800px) 100vw, 800px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/uxp-xd/static/a993cc8ea2a8d97027802b5692d80304/78d47/pie-chart.png\",\n            \"alt\": \"Created pie chart\",\n            \"title\": \"Created pie chart\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}