{"version":3,"sources":["webpack:///./src/pages/develop/reference/structure/location.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,IACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,mBAAQ,CACN,GAAM,mBADR,mBAGA,mNACA,mBAAQ,CACN,GAAM,sBADR,sBAGA,0DAAuC,4BAAYC,WAAW,KAAvB,WAAvC,QAAmG,4BAAYA,WAAW,KAAvB,WAAnG,6FACA,2BACE,uBAAOA,WAAW,SAChB,oBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAKJ,uBAAOA,WAAW,SAChB,oBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,4BAAYA,WAAW,MAAvB,uDAEL,oBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,WAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,4BAAYA,WAAW,MAAvB,gGAIT,iGAA8E,4BAAYA,WAAW,KAAvB,WAA9E,QAA0I,4BAAYA,WAAW,KAAvB,WAA1I,KACA,mBAAQ,CACN,GAAM,sBADR,OAEW,4BAAYA,WAAW,MAAvB,WAFX,WAGA,8BAAW,4BAAYA,WAAW,KAAvB,WAAX,0GAAyK,+BAAGA,WAAW,KAAQ,CAC3L,KAAQ,6DAD6J,2BAExI,oBAAIA,WAAW,KAAf,WAFwI,SAAzK,KAGA,sEAAmD,4BAAYA,WAAW,KAAvB,WAAnD,sFACA,gCACE,mBAAGA,WAAW,cAAa,wBAAQA,WAAW,KAAnB,OAA3B,cACK,oBAAIA,WAAW,KAAf,SADL,uCAC8E,4BAAYA,WAAW,KAAvB,WAD9E,+CAGF,mBAAQ,CACN,GAAM,sBADR,OAEW,4BAAYA,WAAW,MAAvB,WAFX,WAGA,8BAAW,4BAAYA,WAAW,KAAvB,WAAX,+EACA,yDAAsC,oBAAIA,WAAW,KAAf,OAAtC,6DAAmI,4BAAYA,WAAW,KAAvB,WAAnI,iFAAwQ,4BAAYA,WAAW,KAAvB,WAAxQ,+DAKJJ,EAAWK,gBAAiB","file":"component---src-pages-develop-reference-structure-location-md-1fea7a0f5a56338e511f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"plugin-location\"\n    }}>{`Plugin location`}</h1>\n    <p>{`For XD to know your plugin exists, you'll need to put it in a certain folder on your computer and give it a name. On this page, you can learn where plugins are stored on your machine..`}</p>\n    <h2 {...{\n      \"id\": \"parent-folder-path\"\n    }}>{`Parent folder path`}</h2>\n    <p>{`Adobe XD loads plugins from the `}<inlineCode parentName=\"p\">{`plugins`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`develop`}</inlineCode>{` folders. These folders are stored in a specific storage location based on your platform:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Platform`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Path`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`macOS`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`~/Library/Application\\\\ Support/Adobe/Adobe\\\\ XD/`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Windows`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`C:\\\\Users\\\\%USERNAME%\\\\AppData\\\\Local\\\\Packages\\\\Adobe.CC.XD_adky2gkssdxte\\\\LocalState\\\\`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`This path will eventually (if it doesn't already) contain two folders: `}<inlineCode parentName=\"p\">{`develop`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`plugins`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"the-develop-folder\"\n    }}>{`The `}<inlineCode parentName=\"h2\">{`develop`}</inlineCode>{` folder`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`develop`}</inlineCode>{` folder is used during plugin development, and is the only folder XD will reload plugins from when you `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/tutorials/debugging/#2-try-reloading-the-plugins\"\n      }}>{`reload plugins from the `}<em parentName=\"a\">{`Plugins`}</em>{` menu`}</a>{`.`}</p>\n    <p>{`XD makes it very easy for you to get to the `}<inlineCode parentName=\"p\">{`develop`}</inlineCode>{` folder: simply go to this menu item: Plugins > Development > Show Develop Folder.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`tip`}</strong>{`\nIf there `}<em parentName=\"p\">{`isn't`}</em>{` a folder that already exists named `}<inlineCode parentName=\"p\">{`develop`}</inlineCode>{`, you can go ahead and create it yourself.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"the-plugins-folder\"\n    }}>{`The `}<inlineCode parentName=\"h2\">{`plugins`}</inlineCode>{` folder`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`plugins`}</inlineCode>{` folder is where production plugins are stored when the user installs them.`}</p>\n    <p>{`During development, you should `}<em parentName=\"p\">{`not`}</em>{` store your plugin in this folder, instead opting for the `}<inlineCode parentName=\"p\">{`develop`}</inlineCode>{` folder, as noted above. In other words, you should not need to work with the `}<inlineCode parentName=\"p\">{`plugins`}</inlineCode>{` folder directly; XD will manage this folder for the user.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}