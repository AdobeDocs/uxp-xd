{"version":3,"file":"component---src-pages-develop-reference-symbol-instance-md-6ba61d111d1ba889a2f6.js","mappings":"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","sources":["webpack://uxp-xd/./src/pages/develop/reference/SymbolInstance.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"symbolinstance\"\n    }}>{`SymbolInstance`}</h1>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: class\n`}<strong parentName=\"p\">{`Extends`}</strong>{`: `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/SceneNode\"\n      }}>{`SceneNode`}</a></p>\n    <p>{`Container node representing one instance of a Component (previously known as \"Symbols\" in XD's UI). Changes made to the contents of a\nSymbolInstance are treated in one of two ways:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`If `}<a parentName=\"li\" {...{\n          \"href\": \"#ismaster\"\n        }}>{`isMaster`}</a>{` is `}<strong parentName=\"li\">{`false`}</strong>{`: The changes affect `}<em parentName=\"li\">{`only`}</em>{` this one instance. This creates an \"override\":\nchanges made to the corresponding part of the master later will no longer get synced to this particular instance.`}</li>\n      <li parentName=\"ul\">{`If `}<a parentName=\"li\" {...{\n          \"href\": \"#ismaster\"\n        }}>{`isMaster`}</a>{` is `}<strong parentName=\"li\">{`true`}</strong>{`: The changes are automatically synced to all other other instances of the\ncomponent - `}<em parentName=\"li\">{`except`}</em>{` for instances where the affected nodes have instance-specific overrides. As a result, your plugin's batch\nof edits `}<strong parentName=\"li\">{`may not be applied atomically`}</strong>{` in some instances.`}</li>\n    </ul>\n    <p>{`To elaborate: if your plugin command makes edits to more than one property or more than one node as part of a single gesture, and the\nuser invokes your plugin while editing a component master, other instances of the component may receive only a `}<em parentName=\"p\">{`partial application`}</em>{`\nof your plugin's changes. In many cases this will feel like a natural consequence of the overrides the user has created, but if this\npartial application of your plugin's intended changes feels too confusing in your use case, you may opt to warn users or disable some\nof your plugin's functionality when `}<inlineCode parentName=\"p\">{`selection.editContext`}</inlineCode>{` is (or is inside of) a component with `}<inlineCode parentName=\"p\">{`isMaster`}</inlineCode>{` true.`}</p>\n    <p>{`Note that overrides vary somewhat in granularity. In some but not all cases, overriding one property may also prevent other properties\non the same node from receiving future updates from the master instance.`}</p>\n    <p>{`It is not currently possible for plugins to `}<em parentName=\"p\">{`create`}</em>{` a new component definition or a new SymbolInstance node, aside from using\n`}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/commands/#duplicate\"\n      }}>{`commands.duplicate`}</a>{` to clone existing SymbolInstances.`}</p>\n    <h2 {...{\n      \"id\": \"symbolid\"\n    }}>{`symbolId`}</h2>\n    <p>{`▸ `}<strong parentName=\"p\">{`symbolId`}</strong>{`: `}<inlineCode parentName=\"p\">{`string`}</inlineCode></p>\n    <p>{`An identifier unique within this document that is shared by all instances of the same component.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance property of `}<a parentName=\"p\" {...{\n        \"href\": \"#symbolinstance\"\n      }}>{`SymbolInstance`}</a>{`\n`}<strong parentName=\"p\">{`Read only`}</strong>{`: true`}</p>\n    <h2 {...{\n      \"id\": \"ismaster\"\n    }}>{`isMaster`}</h2>\n    <p>{`▸ `}<strong parentName=\"p\">{`isMaster`}</strong>{`: `}<inlineCode parentName=\"p\">{`boolean`}</inlineCode></p>\n    <p>{`True if this is the \"master\" instance of the component, which forms the template for all new instances. When the user edits the master,\nthose changes are synced to all other instances of the component (unless blocked by \"overrides\" -- `}<a parentName=\"p\" {...{\n        \"href\": \"#symbolinstance\"\n      }}>{`see discussion above`}</a>{`).`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance property of `}<a parentName=\"p\" {...{\n        \"href\": \"#symbolinstance\"\n      }}>{`SymbolInstance`}</a>{`\n`}<strong parentName=\"p\">{`Read only`}</strong>{`: true`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}