{"version":3,"file":"component---src-pages-develop-reference-ui-dialogs-dismissal-md-89f529db5f42e27d28ac.js","mappings":"kQAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGC,GAAK,YAER,OAAO,SAACJ,GAAS,UAAKD,EAAiBK,EAAK,CAAED,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,oBAAkB,qBAE1B,sEACA,oBACE,eAAIC,WAAW,MAAI,+CACnB,eAAIA,WAAW,MAAI,iCAAkC,cAAGA,WAAW,KAC/D,KAAQ,mFACP,uBAAYA,WAAW,KAAG,4BAA6C,qCAE9E,6CAA8B,eAAIA,WAAW,KAAG,WAAiB,8DAAgE,uBAAYA,WAAW,KAAG,UAAwB,kBAAkB,uBAAYA,WAAW,KAAG,QAAsB,MACrP,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eAAa,0GAO9B,iDAAkC,uBAAYA,WAAW,KAAG,SAAuB,iDACnF,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eAAa,yRAU9B,0EAA2D,uBAAYA,WAAW,KAAG,SAAuB,0BAC5G,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eAAa,0FAK9B,eACE,GAAM,+BAA6B,gCAErC,4FAA6E,uBAAYA,WAAW,KAAG,kBAAgC,YAAY,uBAAYA,WAAW,KAAG,UAAwB,6CACrM,4BACE,cAAGA,WAAW,eAAa,mBAAQA,WAAW,KAAG,SACjD,cAAGA,WAAW,cAAY,8DAA+D,mBAAQA,WAAW,KAAG,OAAiB,cAItI,CAEAJ,EAAWK,gBAAiB,C","sources":["webpack://uxp-xd/./src/pages/develop/reference/ui/dialogs/dismissal.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"dialog-dismissal\"\n    }}>{`Dialog Dismissal`}</h1>\n    <p>{`Dialogs can be dismissed in the following ways:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Manually, by the user pressing the ESC key`}</li>\n      <li parentName=\"ul\">{`Programmatically, by calling `}<a parentName=\"li\" {...{\n          \"href\": \"/uxp-xd/develop/reference/uxp/class/HTMLDialogElement/#htmldialogelement-close\"\n        }}><inlineCode parentName=\"a\">{`HTMLDialogElement#close`}</inlineCode></a>{` with an optional return value.`}</li>\n    </ul>\n    <p>{`You can listen for the `}<em parentName=\"p\">{`default`}</em>{` gesture (typically `}{`[ENTER]`}{`) by registering for the `}<inlineCode parentName=\"p\">{`submit`}</inlineCode>{` event on the `}<inlineCode parentName=\"p\">{`form`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`function onsubmit(e) {\n  dialog.close(\"ok\");\n  e.preventDefault();\n}\nform.onsubmit = onsubmit;\n`}</code></pre>\n    <p>{`You should also register a `}<inlineCode parentName=\"p\">{`click`}</inlineCode>{` handler for your \"OK\" and \"Cancel\" buttons:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const cancelButton = document.querySelector(\"#cancel\");\ncancelButton.addEventListener(\"click\", () => dialog.close(\"reasonCanceled\"));\n\nconst okButton = document.querySelector(\"#ok\");\nokButton.addEventListener(\"click\", (e) => {\n  onsubmit();\n  e.preventDefault();\n});\n`}</code></pre>\n    <p>{`You can listen for the dialog's dismissal using the `}<inlineCode parentName=\"p\">{`close`}</inlineCode>{` event on the dialog:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`dialog.addEventListener(\"close\", () => {\n  // dialog is closed at this point\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"preventing-dialog-dismissal\"\n    }}>{`Preventing Dialog Dismissal`}</h2>\n    <p>{`You can, in some cases, prevent a dialog dismissal. If the form calls `}<inlineCode parentName=\"p\">{`preventDefault`}</inlineCode>{` on the `}<inlineCode parentName=\"p\">{`submit`}</inlineCode>{` event, the dialog will fail to dismiss.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Tip`}</strong></p>\n      <p parentName=\"blockquote\">{`It is not possible to cancel a dismissal triggered by the `}<strong parentName=\"p\">{`ESC`}</strong>{` gesture.`}</p>\n    </blockquote>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}