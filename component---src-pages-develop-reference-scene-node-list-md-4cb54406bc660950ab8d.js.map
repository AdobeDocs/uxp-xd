{"version":3,"file":"component---src-pages-develop-reference-scene-node-list-md-4cb54406bc660950ab8d.js","mappings":"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","sources":["webpack://uxp-xd/./src/pages/develop/reference/SceneNodeList.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"scenenodelist\"\n    }}>{`SceneNodeList`}</h1>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: class`}</p>\n    <p>{`Represents the children of a scenenode. Typically accessed via the `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/SceneNode/#children\"\n      }}>{`SceneNode.children`}</a>{` property.`}</p>\n    <p>{`This is `}<em parentName=\"p\">{`not an Array`}</em>{`, so you must use `}<a parentName=\"p\" {...{\n        \"href\": \"#at\"\n      }}>{`.at(i)`}</a>{` instead of `}<inlineCode parentName=\"p\">{`[i]`}</inlineCode>{` to access children by index. It has a\nnumber of Array-like methods such as `}<a parentName=\"p\" {...{\n        \"href\": \"#foreach\"\n      }}>{`forEach`}</a>{` for convenience, however. For best performance, iterate\nthe list using these methods rather than repeatedly calling `}<inlineCode parentName=\"p\">{`at()`}</inlineCode>{`.`}</p>\n    <p>{`Items in this list are ordered from lowest z order to highest.`}</p>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`let node = ...;\nconsole.log(\"Node has \" + node.children.length + \" children\");\nconsole.log(\"First child: \" + node.children.at(0));  // do not use \\`[0]\\` - it will not work!\nnode.children.forEach(function (childNode, i) {\n    ...\n});\n`}</code></pre>\n    <p><strong parentName=\"p\">{`See`}</strong>{`: `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/SceneNode/#children\"\n      }}>{`SceneNode.children`}</a></p>\n    <h2 {...{\n      \"id\": \"length\"\n    }}>{`length`}</h2>\n    <p>{`▸ `}<strong parentName=\"p\">{`length`}</strong>{`: `}<inlineCode parentName=\"p\">{`number`}</inlineCode></p>\n    <p>{`Number of children in the list.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance property of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}>{`SceneNodeList`}</a>{`\n`}<strong parentName=\"p\">{`Read only`}</strong>{`: true`}</p>\n    <h2 {...{\n      \"id\": \"foreach\"\n    }}>{`forEach()`}</h2>\n    <p>{`▸ `}<strong parentName=\"p\">{`forEach`}</strong>{`(`}<inlineCode parentName=\"p\">{`callback`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`thisArg`}</inlineCode>{`)`}</p>\n    <p>{`Iterate all children in the list.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`callback`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function(SceneNode, number)`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Callback, passed each child node and its index.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`thisArg`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`?Object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional value for `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` when executing the callback.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance method of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}>{`SceneNodeList`}</a></p>\n    <h2 {...{\n      \"id\": \"foreachright\"\n    }}>{`forEachRight()`}</h2>\n    <p>{`▸ `}<strong parentName=\"p\">{`forEachRight`}</strong>{`(`}<inlineCode parentName=\"p\">{`callback`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`thisArg`}</inlineCode>{`)`}</p>\n    <p>{`Iterate all children in the list, in reverse order (highest z order to lowest).`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`callback`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function(SceneNode, number)`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Callback, passed each child node and its index.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`thisArg`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`?Object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional value for `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` when executing the callback.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance method of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}>{`SceneNodeList`}</a></p>\n    <h2 {...{\n      \"id\": \"filter\"\n    }}>{`filter()`}</h2>\n    <p>{`▸ `}<strong parentName=\"p\">{`filter`}</strong>{`(`}<inlineCode parentName=\"p\">{`callback`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`thisArg`}</inlineCode>{`): `}<inlineCode parentName=\"p\">{`Array.<`}</inlineCode><a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/SceneNode\"\n      }}>{`SceneNode`}</a><inlineCode parentName=\"p\">{`>`}</inlineCode></p>\n    <p>{`Iterates all children and returns an array of just the children that passed the filter function's test.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`callback`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function(SceneNode, number): boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Filter function, passed each child node and its index.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`thisArg`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`?Object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional value for `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` when executing the callback.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance method of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}>{`SceneNodeList`}</a></p>\n    <h2 {...{\n      \"id\": \"map\"\n    }}>{`map()`}</h2>\n    <p>{`▸ `}<strong parentName=\"p\">{`map`}</strong>{`(`}<inlineCode parentName=\"p\">{`callback`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`thisArg`}</inlineCode>{`): `}<inlineCode parentName=\"p\">{`Array.<*>`}</inlineCode></p>\n    <p>{`Iterates all children and returns an array of the map function's result value for each child node.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`callback`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function(SceneNode, number): *`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Map function, passed each child node and its index.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`thisArg`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`?Object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional value for `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` when executing the callback.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance method of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}>{`SceneNodeList`}</a></p>\n    <h2 {...{\n      \"id\": \"some\"\n    }}>{`some()`}</h2>\n    <p>{`▸ `}<strong parentName=\"p\">{`some`}</strong>{`(`}<inlineCode parentName=\"p\">{`callback`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`thisArg`}</inlineCode>{`): `}<inlineCode parentName=\"p\">{`boolean`}</inlineCode></p>\n    <p>{`Iterates children until the test returns true for at least one child.  Returns true if the test function returned true for at least one child.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`callback`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function(SceneNode, number): boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Test function, passed each child node and its index.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`thisArg`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`?Object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional value for `}<inlineCode parentName=\"td\">{`this`}</inlineCode>{` when executing the callback.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance method of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}>{`SceneNodeList`}</a></p>\n    <h2 {...{\n      \"id\": \"at\"\n    }}>{`at()`}</h2>\n    <p>{`▸ `}<strong parentName=\"p\">{`at`}</strong>{`(`}<inlineCode parentName=\"p\">{`index`}</inlineCode>{`): `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/develop/reference/SceneNode\"\n      }}>{`SceneNode`}</a></p>\n    <p>{`Returns the child node at the specified index in the list, or null if index is out of bounds.`}</p>\n    <p>{`Note: calling `}<inlineCode parentName=\"p\">{`at()`}</inlineCode>{` repeatedly (e.g. in a `}<inlineCode parentName=\"p\">{`for`}</inlineCode>{` loop) is not as fast as using SceneNodeList's iteration methods such as `}<inlineCode parentName=\"p\">{`forEach()`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`some()`}</inlineCode>{`, or `}<inlineCode parentName=\"p\">{`map()`}</inlineCode>{`.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`index`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: instance method of `}<a parentName=\"p\" {...{\n        \"href\": \"#SceneNodeList\"\n      }}>{`SceneNodeList`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}