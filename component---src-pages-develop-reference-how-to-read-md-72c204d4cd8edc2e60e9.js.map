{"version":3,"file":"component---src-pages-develop-reference-how-to-read-md-72c204d4cd8edc2e60e9.js","mappings":"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","sources":["webpack://uxp-xd/./src/pages/develop/reference/how-to-read.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"how-to-read-the-reference-documentation\"\n    }}>{`How to read the reference documentation`}</h1>\n    <p>{`Please take a moment to familiarize yourself with the types of symbols you'll see throughout the technical documentation.`}</p>\n    <h2 {...{\n      \"id\": \"type-annotations\"\n    }}>{`Type Annotations`}</h2>\n    <p>{`This shorthand is used to indicate the types of arguments, return values, and object properties.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Annotation`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Meaning`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`[day]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The parameter is optional. If it is not supplied, it will be `}<inlineCode parentName=\"td\">{`undefined`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`[day=\"Monday\"]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The parameter is optional, but will be supplied a default value if not provided.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`?Array`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type can be an Array OR `}<inlineCode parentName=\"td\">{`null`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`!Array`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type must be an Array; `}<em parentName=\"td\">{`cannot`}</em>{` be `}<inlineCode parentName=\"td\">{`null`}</inlineCode>{`. Primitive types (`}<inlineCode parentName=\"td\">{`string`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`number`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`boolean`}</inlineCode>{`) imply `}<inlineCode parentName=\"td\">{`!`}</inlineCode>{` unless explicitly denoted otherwise with `}<inlineCode parentName=\"td\">{`?`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\\`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number\\``}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`{foo:number, bar:string}`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type is an object with two properties: `}<inlineCode parentName=\"td\">{`foo`}</inlineCode>{`, which is type `}<inlineCode parentName=\"td\">{`number`}</inlineCode>{`; and `}<inlineCode parentName=\"td\">{`bar`}</inlineCode>{`, which is type `}<inlineCode parentName=\"td\">{`string`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string[]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type is an array of strings.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Array<string>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type is an array of strings.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Promise<string>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type is a Promise that is asynchronously fulfilled with a string.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`*`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Can be any type. `}<strong parentName=\"td\">{`NOTE:`}</strong>{` In this early stage, `}<inlineCode parentName=\"td\">{`*`}</inlineCode>{` is sometimes used as a placeholder for incomplete documentation.`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}