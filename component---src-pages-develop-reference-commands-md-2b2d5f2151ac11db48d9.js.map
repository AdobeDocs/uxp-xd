{"version":3,"sources":["webpack:///./src/pages/develop/reference/commands.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,IACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,mBAAQ,CACN,GAAM,YADR,YAGA,6VAGA,6FAA0E,+BAAGC,WAAW,KAAQ,CAC5F,KAAQ,iCAD8D,aAA1E,4IAGiF,4BAAYA,WAAW,KAAvB,WAHjF,0CAIA,uBAAG,wBAAQA,WAAW,KAAnB,YACH,yBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,iKAOL,mBAAQ,CACN,GAAM,iBADR,oBAGA,0DAAuC,+BAAGA,WAAW,KAAQ,CACzD,KAAQ,wCAD2B,SAAvC,yDAE4E,oBAAIA,WAAW,KAAf,mBAF5E,eAIA,uBAAG,wBAAQA,WAAW,KAAnB,QAAH,sBAAkE,+BAAGA,WAAW,KAAQ,CACpF,KAAQ,qBACP,4BAAYA,WAAW,KAAvB,cACL,uBAAG,wBAAQA,WAAW,KAAnB,YACH,yBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,6eAgBL,mBAAQ,CACN,GAAM,mBADR,sBAGA,yJACF,oBAAIA,WAAW,KAAf,oBADE,KAEA,uBAAG,wBAAQA,WAAW,KAAnB,QAAH,sBAAkE,+BAAGA,WAAW,KAAQ,CACpF,KAAQ,qBACP,4BAAYA,WAAW,KAAvB,cACL,mBAAQ,CACN,GAAM,2BADR,8BAGA,2CAAwB,+BAAGA,WAAW,KAAQ,CAC1C,KAAQ,wCADY,SAAxB,yIAGoD,+BAAGA,WAAW,KAAQ,CACtE,KAAQ,+CADwC,iBAHpD,oBAMF,oBAAIA,WAAW,KAAf,4BANE,KAOA,uBAAG,wBAAQA,WAAW,KAAnB,QAAH,sBAAkE,+BAAGA,WAAW,KAAQ,CACpF,KAAQ,qBACP,4BAAYA,WAAW,KAAvB,cACL,uBAAG,wBAAQA,WAAW,KAAnB,YACH,yBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,2nBAgBL,mBAAQ,CACN,GAAM,yBADR,4BAGA,6DAA0C,+BAAGA,WAAW,KAAQ,CAC5D,KAAQ,uCAD8B,QAA1C,2EAGQ,+BAAGA,WAAW,KAAQ,CAC1B,KAAQ,+CADJ,kBAHR,mBAK+C,oBAAIA,WAAW,KAAf,mCAL/C,KAMA,uBAAG,wBAAQA,WAAW,KAAnB,QAAH,sBAAkE,+BAAGA,WAAW,KAAQ,CACpF,KAAQ,qBACP,4BAAYA,WAAW,KAAvB,cACL,mBAAQ,CACN,GAAM,qBADR,wBAGA,sGACA,wBACE,oBAAIA,WAAW,MAAf,sJAEA,oBAAIA,WAAW,MAAf,6NAGF,mKACY,oBAAIA,WAAW,KAAf,oBADZ,KAEA,uBAAG,wBAAQA,WAAW,KAAnB,QAAH,sBAAkE,+BAAGA,WAAW,KAAQ,CACpF,KAAQ,qBACP,4BAAYA,WAAW,KAAvB,cACL,mBAAQ,CACN,GAAM,wBADR,2BAGA,6FAA0E,oBAAIA,WAAW,KAAf,qCAA1E,KACA,uBAAG,wBAAQA,WAAW,KAAnB,QAAH,sBAAkE,+BAAGA,WAAW,KAAQ,CACpF,KAAQ,qBACP,4BAAYA,WAAW,KAAvB,cACL,mBAAQ,CACN,GAAM,wBADR,2BAGA,iHAA8F,oBAAIA,WAAW,KAAf,oCAA9F,KACA,uBAAG,wBAAQA,WAAW,KAAnB,QAAH,sBAAkE,+BAAGA,WAAW,KAAQ,CACpF,KAAQ,qBACP,4BAAYA,WAAW,KAAvB,cACL,mBAAQ,CACN,GAAM,sBADR,yBAGA,2FAAwE,oBAAIA,WAAW,KAAf,mCAAxE,KACA,uBAAG,wBAAQA,WAAW,KAAnB,QAAH,sBAAkE,+BAAGA,WAAW,KAAQ,CACpF,KAAQ,qBACP,4BAAYA,WAAW,KAAvB,cACL,mBAAQ,CACN,GAAM,wBADR,2BAGA,+GAA4F,oBAAIA,WAAW,KAAf,oCAA5F,KACA,uBAAG,wBAAQA,WAAW,KAAnB,QAAH,sBAAkE,+BAAGA,WAAW,KAAQ,CACpF,KAAQ,qBACP,4BAAYA,WAAW,KAAvB,cACL,mBAAQ,CACN,GAAM,qBADR,wBAGA,gFAA6D,oBAAIA,WAAW,KAAf,yBAA7D,KACA,uBAAG,wBAAQA,WAAW,KAAnB,QAAH,sBAAkE,+BAAGA,WAAW,KAAQ,CACpF,KAAQ,qBACP,4BAAYA,WAAW,KAAvB,cACL,mBAAQ,CACN,GAAM,sBADR,yBAGA,iFAA8D,oBAAIA,WAAW,KAAf,0BAA9D,KACA,uBAAG,wBAAQA,WAAW,KAAnB,QAAH,sBAAkE,+BAAGA,WAAW,KAAQ,CACpF,KAAQ,qBACP,4BAAYA,WAAW,KAAvB,cACL,mBAAQ,CACN,GAAM,iCADR,oCAGA,wGAAqF,oBAAIA,WAAW,KAAf,0CAArF,KACA,uBAAG,wBAAQA,WAAW,KAAnB,QAAH,sBAAkE,+BAAGA,WAAW,KAAQ,CACpF,KAAQ,qBACP,4BAAYA,WAAW,KAAvB,cACL,mBAAQ,CACN,GAAM,oBADR,uBAGA,+EAA4D,oBAAIA,WAAW,KAAf,wBAA5D,KACA,uBAAG,wBAAQA,WAAW,KAAnB,QAAH,sBAAkE,+BAAGA,WAAW,KAAQ,CACpF,KAAQ,qBACP,4BAAYA,WAAW,KAAvB,cACL,mBAAQ,CACN,GAAM,uBADR,0BAGA,kFAA+D,oBAAIA,WAAW,KAAf,2BAA/D,KACA,uBAAG,wBAAQA,WAAW,KAAnB,QAAH,sBAAkE,+BAAGA,WAAW,KAAQ,CACpF,KAAQ,qBACP,4BAAYA,WAAW,KAAvB,cACL,mBAAQ,CACN,GAAM,+BADR,kCAGA,sGAAmF,oBAAIA,WAAW,KAAf,wCAAnF,KACA,uBAAG,wBAAQA,WAAW,KAAnB,QAAH,sBAAkE,+BAAGA,WAAW,KAAQ,CACpF,KAAQ,qBACP,4BAAYA,WAAW,KAAvB,cACL,mBAAQ,CACN,GAAM,gCADR,mCAGA,kGAA+E,oBAAIA,WAAW,KAAf,sCAA/E,KACA,uBAAG,wBAAQA,WAAW,KAAnB,QAAH,sBAAkE,+BAAGA,WAAW,KAAQ,CACpF,KAAQ,qBACP,4BAAYA,WAAW,KAAvB,cACL,mBAAQ,CACN,GAAM,8BADR,iCAGA,kGAA+E,oBAAIA,WAAW,KAAf,oCAA/E,KACA,uBAAG,wBAAQA,WAAW,KAAnB,QAAH,sBAAkE,+BAAGA,WAAW,KAAQ,CACpF,KAAQ,qBACP,4BAAYA,WAAW,KAAvB,cACL,mBAAQ,CACN,GAAM,4BADR,+BAGA,iIAA8G,oBAAIA,WAAW,KAAf,iCAA9G,KAEA,uBAAG,wBAAQA,WAAW,KAAnB,QAAH,sBAAkE,+BAAGA,WAAW,KAAQ,CACpF,KAAQ,qBACP,4BAAYA,WAAW,KAAvB,eAKTJ,EAAWK,gBAAiB","file":"component---src-pages-develop-reference-commands-md-2b2d5f2151ac11db48d9.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/uxp-xd/uxp-xd/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"commands\"\n    }}>{`commands`}</h1>\n    <p>{`You can make structural changes to the scenegraph, and perform other complex operations, by programmatically invoking the same\ncommands as XD users have access to in the UI. Because structural changes have many nuanced rules and behaviors in XD, these calls\nfunction more like automating the UI than like low-level APIs.`}</p>\n    <p>{`For example, these methods do not take arguments. Instead, set the `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/reference/selection/\"\n      }}>{`selection`}</a>{` to the objects you want the command to target, then\ninvoke the command. Commands may also change the selection when run - for example, `}<inlineCode parentName=\"p\">{`group()`}</inlineCode>{` selects the newly created Group node.`}</p>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`let commands = require(\"commands\");\nselection.items = [shape1, shape2, maskShape];\ncommands.createMaskGroup();\nconsole.log(selection.items); // [Group]\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"commandsgroup\"\n    }}>{`commands.group()`}</h3>\n    <p>{`Wraps the selected objects in a `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/reference/scenegraph/#Group\"\n      }}>{`Group`}</a>{`, leaving the Group selected afterward. Equivalent to `}<em parentName=\"p\">{`Object >\nGroup`}</em>{` in the UI.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static method of `}<a parentName=\"p\" {...{\n        \"href\": \"#module_commands\"\n      }}><inlineCode parentName=\"a\">{`commands`}</inlineCode></a></p>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`let shape1 = new Rectangle();\n// ...configure Rectangle size & appearance...\nlet label = new Text();\n// ...configure Text content & appearance...\n\n// Add both nodes to the current edit context first\nselection.insertionParent.addChild(shape1);\nselection.insertionParent.addChild(label);\n\n// Select both shapes, then run the group() command\nselection.items = [shape1, label];\ncommands.group();\nlet group = selection.items[0]; // the new Group node is what's selected afterward\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"commandsungroup\"\n    }}>{`commands.ungroup()`}</h3>\n    <p>{`Ungroups any of the selected objects that are ungroupable containers (Group, SymbolInstance, RepeatGrid, etc.). Equivalent to\n`}<em parentName=\"p\">{`Object > Ungroup`}</em>{`.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static method of `}<a parentName=\"p\" {...{\n        \"href\": \"#module_commands\"\n      }}><inlineCode parentName=\"a\">{`commands`}</inlineCode></a></p>\n    <h3 {...{\n      \"id\": \"commandscreatemaskgroup\"\n    }}>{`commands.createMaskGroup()`}</h3>\n    <p>{`Creates a masked `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/reference/scenegraph/#Group\"\n      }}>{`Group`}</a>{` from the selected objects, using the object that is highest in the z order as\nthe mask shape. The mask shape must be a leaf node or `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/reference/scenegraph/#BooleanGroup\"\n      }}>{`Boolean Group`}</a>{`. Equivalent to\n`}<em parentName=\"p\">{`Object > Mask With Shape`}</em>{`.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static method of `}<a parentName=\"p\" {...{\n        \"href\": \"#module_commands\"\n      }}><inlineCode parentName=\"a\">{`commands`}</inlineCode></a></p>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`let shape1 = new Rectangle(),\n  shape2 = new Ellipse();\n// ...configure shapes' size & appearance...\nlet maskShape = new Ellipse();\n// ...configure mask shape's size...\n\n// Create a Masked Group: add all nodes to the current edit context, select them, then run the createMaskGroup() command\nselection.insertionParent.addChild(shape1);\nselection.insertionParent.addChild(shape2);\nselection.insertionParent.addChild(maskShape); // added last: topmost in z order\nselection.items = [shape1, shape2, maskShape]; // order of selection array does not matter\ncommands.createMaskGroup();\nlet maskedGroup = selection.items[0];\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"commandsconverttopath\"\n    }}>{`commands.convertToPath()`}</h3>\n    <p>{`Converts each selected object to a `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/reference/scenegraph/#Path\"\n      }}>{`Path`}</a>{` with the exact same visual appearance. Only applies to leaf\nnodes and `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-xd/reference/scenegraph/#BooleanGroup\"\n      }}>{`Boolean Groups`}</a>{`. Equivalent to `}<em parentName=\"p\">{`Object > Path > Convert to Path`}</em>{`.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static method of `}<a parentName=\"p\" {...{\n        \"href\": \"#module_commands\"\n      }}><inlineCode parentName=\"a\">{`commands`}</inlineCode></a></p>\n    <h3 {...{\n      \"id\": \"commandsduplicate\"\n    }}>{`commands.duplicate()`}</h3>\n    <p>{`Duplicates all selected objects, leaving the duplicates selected afterward.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`If the objects are artboards, the duplicates are positioned to not overlap any more artboards, and are placed at the top\nof the artboard z order.`}</li>\n      <li parentName=\"ul\">{`If normal objects, each duplicate is in the exact same position as the original, and just above it in the z order\n(duplicates of a multiple selection will not be contiguous in the z order if the originals were not).`}</li>\n    </ul>\n    <p>{`Interactions triggered from the selected objects are only duplicated if the user is currently in the Prototype workspace.\nEquivalent to `}<em parentName=\"p\">{`Edit > Duplicate`}</em>{`.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static method of `}<a parentName=\"p\" {...{\n        \"href\": \"#module_commands\"\n      }}><inlineCode parentName=\"a\">{`commands`}</inlineCode></a></p>\n    <h3 {...{\n      \"id\": \"commandsbringtofront\"\n    }}>{`commands.bringToFront()`}</h3>\n    <p>{`Brings selected objects to the front of the z order. Equivalent to `}<em parentName=\"p\">{`Object > Arrange > Bring to Front`}</em>{`.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static method of `}<a parentName=\"p\" {...{\n        \"href\": \"#module_commands\"\n      }}><inlineCode parentName=\"a\">{`commands`}</inlineCode></a></p>\n    <h3 {...{\n      \"id\": \"commandsbringforward\"\n    }}>{`commands.bringForward()`}</h3>\n    <p>{`Brings each selected object one step closer to the front of the z order. Equivalent to `}<em parentName=\"p\">{`Object > Arrange > Bring Forward`}</em>{`.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static method of `}<a parentName=\"p\" {...{\n        \"href\": \"#module_commands\"\n      }}><inlineCode parentName=\"a\">{`commands`}</inlineCode></a></p>\n    <h3 {...{\n      \"id\": \"commandssendtoback\"\n    }}>{`commands.sendToBack()`}</h3>\n    <p>{`Sends selected objects to the back of the z order. Equivalent to `}<em parentName=\"p\">{`Object > Arrange > Send to Back`}</em>{`.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static method of `}<a parentName=\"p\" {...{\n        \"href\": \"#module_commands\"\n      }}><inlineCode parentName=\"a\">{`commands`}</inlineCode></a></p>\n    <h3 {...{\n      \"id\": \"commandssendbackward\"\n    }}>{`commands.sendBackward()`}</h3>\n    <p>{`Sends each selected object one step closer to the back of the z order. Equivalent to `}<em parentName=\"p\">{`Object > Arrange > Send Backward`}</em>{`.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static method of `}<a parentName=\"p\" {...{\n        \"href\": \"#module_commands\"\n      }}><inlineCode parentName=\"a\">{`commands`}</inlineCode></a></p>\n    <h3 {...{\n      \"id\": \"commandsalignleft\"\n    }}>{`commands.alignLeft()`}</h3>\n    <p>{`Aligns all selected objects flush left. Equivalent to `}<em parentName=\"p\">{`Object > Align > Left`}</em>{`.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static method of `}<a parentName=\"p\" {...{\n        \"href\": \"#module_commands\"\n      }}><inlineCode parentName=\"a\">{`commands`}</inlineCode></a></p>\n    <h3 {...{\n      \"id\": \"commandsalignright\"\n    }}>{`commands.alignRight()`}</h3>\n    <p>{`Aligns all selected objects flush right. Equivalent to `}<em parentName=\"p\">{`Object > Align > Right`}</em>{`.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static method of `}<a parentName=\"p\" {...{\n        \"href\": \"#module_commands\"\n      }}><inlineCode parentName=\"a\">{`commands`}</inlineCode></a></p>\n    <h3 {...{\n      \"id\": \"commandsalignhorizontalcenter\"\n    }}>{`commands.alignHorizontalCenter()`}</h3>\n    <p>{`Aligns all selected objects along their horizontal centerlines. Equivalent to `}<em parentName=\"p\">{`Object > Align > Center (Horizontally)`}</em>{`.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static method of `}<a parentName=\"p\" {...{\n        \"href\": \"#module_commands\"\n      }}><inlineCode parentName=\"a\">{`commands`}</inlineCode></a></p>\n    <h3 {...{\n      \"id\": \"commandsaligntop\"\n    }}>{`commands.alignTop()`}</h3>\n    <p>{`Aligns all selected objects flush top. Equivalent to `}<em parentName=\"p\">{`Object > Align > Top`}</em>{`.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static method of `}<a parentName=\"p\" {...{\n        \"href\": \"#module_commands\"\n      }}><inlineCode parentName=\"a\">{`commands`}</inlineCode></a></p>\n    <h3 {...{\n      \"id\": \"commandsalignbottom\"\n    }}>{`commands.alignBottom()`}</h3>\n    <p>{`Aligns all selected objects flush bottom. Equivalent to `}<em parentName=\"p\">{`Object > Align > Bottom`}</em>{`.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static method of `}<a parentName=\"p\" {...{\n        \"href\": \"#module_commands\"\n      }}><inlineCode parentName=\"a\">{`commands`}</inlineCode></a></p>\n    <h3 {...{\n      \"id\": \"commandsalignverticalcenter\"\n    }}>{`commands.alignVerticalCenter()`}</h3>\n    <p>{`Aligns all selected objects along their vertical centerlines. Equivalent to `}<em parentName=\"p\">{`Object > Align > Center (Vertically)`}</em>{`.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static method of `}<a parentName=\"p\" {...{\n        \"href\": \"#module_commands\"\n      }}><inlineCode parentName=\"a\">{`commands`}</inlineCode></a></p>\n    <h3 {...{\n      \"id\": \"commandsdistributehorizontal\"\n    }}>{`commands.distributeHorizontal()`}</h3>\n    <p>{`Distributes all selected objects evenly along the X axis. Equivalent to `}<em parentName=\"p\">{`Object > Distribute > Horizontally`}</em>{`.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static method of `}<a parentName=\"p\" {...{\n        \"href\": \"#module_commands\"\n      }}><inlineCode parentName=\"a\">{`commands`}</inlineCode></a></p>\n    <h3 {...{\n      \"id\": \"commandsdistributevertical\"\n    }}>{`commands.distributeVertical()`}</h3>\n    <p>{`Distributes all selected objects evenly along the Y axis. Equivalent to `}<em parentName=\"p\">{`Object > Distribute > Vertically`}</em>{`.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static method of `}<a parentName=\"p\" {...{\n        \"href\": \"#module_commands\"\n      }}><inlineCode parentName=\"a\">{`commands`}</inlineCode></a></p>\n    <h3 {...{\n      \"id\": \"commandsaligntopixelgrid\"\n    }}>{`commands.alignToPixelGrid()`}</h3>\n    <p>{`Shifts all selected objects and their content so they align crisply with the pixel grid. Equivalent to `}<em parentName=\"p\">{`Object > Align to\nPixel Grid`}</em>{`.`}</p>\n    <p><strong parentName=\"p\">{`Kind`}</strong>{`: static method of `}<a parentName=\"p\" {...{\n        \"href\": \"#module_commands\"\n      }}><inlineCode parentName=\"a\">{`commands`}</inlineCode></a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}